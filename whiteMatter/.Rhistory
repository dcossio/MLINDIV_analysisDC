stat_cor(method = "spearman", label.x.npc = 0.1, label.y.npc = 0.75) +
# stat_regline_equation(label.y = , label.x = 6e-05, aes(label = ..rr.label..)) +
xlim(min(fornix$Fornix_R), max(fornix$Fornix_R)) +
font("xlab", size=11)+
font("ylab", size=11)
fornix <- Acc_negRD %>% select(SUBJ..,Mean.Acc,sex,Fornix_R)
for (s in 1:nrow(fornix)){
if (fornix$sex[s] == 0) {
fornix$sex[s] <-  "female"
}
else{
fornix$sex[s] <-  "male"
}
}
# jpeg("Corticostriatal_Tract_Superior_R.jpeg")
ggplot(data = fornix, aes(x = Mean.Acc, y = Fornix_R)) +
geom_point(aes(shape = factor(sex))) +
geom_point(aes(color = factor(sex))) +
geom_smooth(method = "lm",
aes(color = factor(sex))) +
labs(title = "Correlation between Proportion correct and RD in men vs women",
x = "Proportion Correct",
y = "Fornix_R")+
theme(legend.position = "right") +
#stat_cor(aes(color= sex),method = "spearman", label.x.npc = 0.4, label.y.npc = 0.75) +
#stat_regline_equation(aes(color=sex)) +
xlim(min(fornix$Mean.Acc), max(fornix$Mean.Acc)) +
font("xlab", size=11)+
font("ylab", size=11)
fsampl <- fornix %>% dplyr::group_by(sex)%>%dplyr::summarize(num=n())
#Violin
fornix %>%
left_join(sam_size) %>%
mutate(myaxis=paste0(sex,"\n", "n=", num)) %>%
ggplot( aes(x=myaxis, y=Fornix_R, fill=sex)) +
geom_violin() +
geom_boxplot(width=0.1, color="grey", alpha=0.2) +
geom_jitter(position = position_jitter(seed = 1, width = 0.2)) +
scale_colour_brewer() +
stat_summary(fun.y="mean",size =0.2, color="red" )+
theme(legend.position="none", plot.title = element_text(size=11)) +
ggtitle("QA in men and women Cingulum_Frontal_Parietal_R") +
xlab("") +
ylab("Cingulum_Frontal_Parietal_R")
fsampl <- fornix %>% dplyr::group_by(sex)%>%dplyr::summarize(num=n())
#Violin
fornix %>%
left_join(sam_size) %>%
mutate(myaxis=paste0(sex,"\n", "n=", num)) %>%
ggplot( aes(x=myaxis, y=Fornix_R, fill=sex)) +
geom_violin() +
geom_boxplot(width=0.1, color="grey", alpha=0.2) +
geom_jitter(position = position_jitter(seed = 1, width = 0.2)) +
scale_colour_brewer() +
stat_summary(fun.y="mean",size =0.2, color="red" )+
theme(legend.position="none", plot.title = element_text(size=11)) +
ggtitle("QA in fornix") +
xlab("") +
ylab("Cingulum_Frontal_Parietal_R")
wd <- "/Volumes/GoogleDrive/My Drive/White matter tract/young-MLINDIV/DSI"
setwd("/Volumes/GoogleDrive/My Drive/White matter tract/young-MLINDIV/DSI")
# QA male Negative
Acc_Male_posQA_raw <- read_csv("QA_male_pos_Stats.csv")%>% filter(!grepl('mean_qa', `Tract Name`))
View(Acc_Male_posQA_raw)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
#(plyr)
library(tidyverse)
# library(dplyr)
# library(tidyr)
library(stringr)
# library(data.table)
# library(network)
# library(tidygraph)
# library(ggraph)
# library(igraph)
# library(networkD3)
# library(CINNA)
# library(umap)
# library(plotly)
library(factoextra)
library(lsr)
# library(car)
# library(ggpubr)
# library(entropy)
# library(ds4psy)
# library(pROC)
library(devtools)
library(BRRR)
library(afex)
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
workdir<- "/Users/danielacossio/Desktop/MLINDIV_analysisDC/MidlifeDesktopBehavior"
setwd(workdir)
#infosheet with age/sex
subjInfo<-read.csv ("/Users/danielacossio/Desktop/MLINDIV_analysisDC/MidlifeDesktopBehavior/BehaviorAnalysisScripts/MAZE_data_old.csv")  %>% select(Subject.ID,Sex,Age.Scan..years.,) %>% `colnames<-` (c("Subject","sex","age")) %>% arrange(.$Subject)
#preprocessed data
trialDF<-read.csv ("/Users/danielacossio/Desktop/MLINDIV_analysisDC/MidlifeDesktopBehavior/BehaviorAnalysisScripts/MLINDIV_trial_master.csv") %>% filter(Subject %in% c(as.character(subjInfo$Subject)))
participantDF<-read.csv ("/Users/danielacossio/Desktop/MLINDIV_analysisDC/MidlifeDesktopBehavior/BehaviorAnalysisScripts/MLINDIV_participant_master.csv") %>%  filter(Subject %in% c(as.character(subjInfo$Subject)))
mid_master_trial <- inner_join(subjInfo, trialDF, by="Subject")
mid_master_participant <- inner_join(subjInfo, participantDF, by="Subject")
yngsubjInfo<-read.csv("/Volumes/GoogleDrive/My Drive/MLINDIV_SNAG_preprocessing/young_SNAG/young_snag_participantinfo.csv")  %>% select(subject_id,sex,age_spatial_years) %>% `colnames<-` (c("Subject","sex","age"))
yngtrialDF<-read.csv ("/Volumes/GoogleDrive/My Drive/MLINDIV_SNAG_preprocessing/young_SNAG/young_trial_master (1).csv") %>% filter(Subject %in% c(as.character(yngsubjInfo$Subject)))
yngparticipantDF <-read.csv("/Volumes/GoogleDrive/My Drive/MLINDIV_SNAG_preprocessing/young_SNAG/young_participant_master (1).csv") %>% filter(Subject %in% c(as.character(yngsubjInfo$Subject)))
yng_master_trial <- inner_join(yngsubjInfo, yngtrialDF, by="Subject")
yng_master_participant <- inner_join(yngsubjInfo, yngparticipantDF, by="Subject")
locs <- c('A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', "Y", "Z")
objs_orientations<- c('A4', 'I2', 'K4', 'L2', 'N3', 'O2', 'P2', 'Y2', 'W4')
objects<-c('A', 'I', 'K', 'L', 'N', 'O', 'P', 'Y', 'W')
hallways <- c('B', 'C', 'D', 'E', 'F', 'G', 'H', 'J', 'M', 'Q', 'R', 'S', 'T', 'U', "V", 'X', "Z")
#A=guitar
#I=snowman
#L=spaceship
#K=lamp post
#N=chicken
#O=trophy
#P=chair
#Y=umbrella
#W=cuckoo clock
#ttest output colnames for data later
#colttest <-  c("estimate","statistic", "p.value", "parameter"," conf.low"," conf.high"," method","alternative")
mid_female_analysis<-mid_master_participant %>% filter(sex == "Female") %>% select(Subject) %>% as.data.frame() #creating master analysis data-frame to store all final exploration variable outputs into
mid_male_analysis<-mid_master_participant %>% filter(sex == "Male") %>% select(Subject) %>% as.data.frame()
yng_female_analysis<-yng_master_participant %>% filter(sex == "Female") %>% select(Subject) %>% as.data.frame()
yng_male_analysis<-yng_master_participant %>% filter(sex == "Male") %>% select(Subject) %>% as.data.frame() #same thing for young
mid_explor <- mid_master_trial %>% filter(is.na(accuracy) == TRUE)
yng_explor <- yng_master_trial %>% filter(is.na(accuracy) == TRUE)
#creating empty dataframe to store contents of for loop into
# midlife
mid_expl_df<- data.frame(matrix(nrow = nrow(mid_explor)))
for (i in 1:nrow(mid_explor)){
e_string_orient<-as.list(strsplit(mid_explor$e_paths[i],split=" "))
e_string<-as.list(strsplit(mid_explor$paths[i],split=" "))
F3_index<-which(sapply(e_string_orient[[1]], FUN=function(X) "F3" %in% X))+1
e_string[[1]][F3_index]<-"N" #replacing with N
V2_index<-which(sapply(e_string_orient[[1]], FUN=function(X) "V2" %in% X))+1
e_string[[1]][V2_index]<-"Y" #replacing with Y
e_string<-paste(e_string[[1]], collapse = " ")
mid_expl_df[i,1]<-e_string
}
mid_expl_df$Subject<-mid_explor$Subject
mid_expl_df <- mid_expl_df %>% rename(paths = matrix.nrow...nrow.mid_explor..)
mid_explr_Subinfo <- inner_join(mid_master_participant,mid_expl_df)
yng_expl_df<- data.frame(matrix(nrow = nrow(yng_explor)))
for (i in 1:nrow(yng_explor)){
e_string_orient<-as.list(strsplit(yng_explor$e_paths[i],split=" "))
e_string<-as.list(strsplit(yng_explor$paths[i],split=" "))
F3_index<-which(sapply(e_string_orient[[1]], FUN=function(X) "F3" %in% X))+1
e_string[[1]][F3_index]<-"N" #replacing with N
V2_index<-which(sapply(e_string_orient[[1]], FUN=function(X) "V2" %in% X))+1
e_string[[1]][V2_index]<-"Y" #replacing with Y
e_string<-paste(e_string[[1]], collapse = " ")
yng_expl_df[i,1]<-e_string
}
yng_expl_df$Subject<-yng_explor$Subject
yng_expl_df <- yng_expl_df %>% rename(paths = matrix.nrow...nrow.yng_explor..)
yng_explr_Subinfo <- inner_join(yng_master_participant,yng_expl_df)
#Let's look at the young men first
yng_male_analysis$Dist<- yng_master_participant %>% filter(sex == "Male") %>% pull(em_path_dist_trav)
shapiro.test(yng_male_analysis$Dist)  #not normal
# young female
yng_female_analysis$Dist<- yng_master_participant %>% filter(sex == "Female") %>% pull(em_path_dist_trav)
shapiro.test(yng_female_analysis$Dist) # not normal
# Lets do the young
wilcox.test(yng_female_analysis$Dist,yng_male_analysis$Dist) #no difference
# LEts do Midlife
mid_female_analysis$Dist<-mid_master_participant%>% filter(sex == "Female") %>% pull(em_path_dist_trav)
shapiro.test(mid_female_analysis$Dist)
#male
mid_male_analysis$Dist<-mid_master_participant%>% filter(sex == "Male") %>% pull(em_path_dist_trav)
shapiro.test(mid_male_analysis$Dist)
#Midlife women vs midlife men
wilcox.test(mid_female_analysis$Dist,mid_male_analysis$Dist) #0.03
# young female vs  midlife female
wilcox.test(mid_female_analysis$Dist,yng_female_analysis$Dist) # significant pvalue = 0.001139
#midlife women =217.6289
#yng=244.3077
# young men vs midlife men
wilcox.test(mid_male_analysis$Dist,yng_male_analysis$Dist) #not significantly different
# young men =248.3646
#midlife men = 233.9728
yng_distance <- yng_master_participant %>% select(Subject,sex,age) %>% as.data.frame() %>% mutate(Dist = yng_master_participant$em_path_dist_trav) %>%  mutate(acc= yng_master_participant$tm_accuracy)
mid_distance <- mid_master_participant %>% select(Subject,sex,age) %>% as.data.frame() %>% mutate(Dist = mid_master_participant$em_path_dist_trav)%>%  mutate(acc= mid_master_participant$tm_accuracy)
dist <- rbind(yng_distance,mid_distance)
#this was just to quickly convert to binary
for (gender in 1:nrow(dist)){
if (dist$sex[gender] == "Female") {
dist$sex[gender] = 0
} else {
dist$sex[gender] = 1
}
}
# # this was just to quickly convert to binary
#   for (group in 1:nrow(dist)){
#     if (dist$age[group] < 25) {
#       dist$group[group] <- "young"
#       } else {
#          dist$group[group] <- "midlife"
#       }
#   }
#
dist_aov<-  aov(formula=Dist ~ sex * age, dist)
summary(dist_aov)
help(aov)
mid_big_explore<-as.data.frame(str_split_fixed(mid_expl_df$paths," ",nrow(mid_expl_df)))
mid_big_explore <- mid_big_explore %>% mutate(subject = mid_expl_df$Subject)
mid_big_explore <-mid_big_explore[,c(ncol(mid_big_explore), 1:(ncol(mid_big_explore)-1))]
row_labels<-c(1:nrow(mid_big_explore))
mid_big_explore<- split( mid_big_explore , f = row_labels)
#for loop to find consecutive location repeats, and remove them
for (i in 1:length(mid_big_explore)){
mid_big_explore[[i]]<-t(mid_big_explore[[i]])
mid_big_explore[[i]][mid_big_explore[[i]] == ""] <- NA
repeat_logical<-t(c(NA, mid_big_explore[[i]]) == c(mid_big_explore[[i]], NA))[1:length(mid_big_explore[[i]])]
repeats<- grep("TRUE",repeat_logical)
mid_big_explore[[i]][repeats,1]<-"repeats"
mid_big_explore[[i]]<-t(mid_big_explore[[i]])
mid_big_explore[[i]]<-as.data.frame(mid_big_explore[[i]])
}
mid_big_explore<-unsplit(mid_big_explore,row_labels)#merging all chunks back into single dataframe
mid_big_explore[is.na(mid_big_explore)]<-"none" #replacing all NAs with string, otherwise for loop below won't work
mid_big_explore <-  mid_big_explore %>% mutate(sex = mid_explr_Subinfo$sex)
#for loop to determine location counts
mid_big_explore_counts <- data.frame(matrix(ncol = 0, nrow = nrow(mid_big_explore)))#creating dataframe to store counts into
for (i in locs){
mid_big_explore_counts$subject <- mid_big_explore$subject
d <- as.data.frame(apply(mid_big_explore,1,function(x) sum(x==i))) # not sure what this function is
names(d) <- i
mid_big_explore_counts <- cbind(d, mid_big_explore_counts)
}
mid_big_explore_counts <- mid_big_explore_counts %>% mutate(sex=mid_explr_Subinfo$sex)
yng_big_explore<-as.data.frame(str_split_fixed(yng_expl_df$paths," ",nrow(yng_expl_df)))
yng_big_explore <- yng_big_explore %>% mutate(subject = yng_expl_df$Subject)
yng_big_explore <-yng_big_explore[,c(ncol(yng_big_explore), 1:(ncol(yng_big_explore)-1))]
row_labels<-c(1:nrow(yng_big_explore))
yng_big_explore<- split( yng_big_explore , f = row_labels)
#for loop to find consecutive location repeats, and remove them
for (i in 1:length(yng_big_explore)){
yng_big_explore[[i]]<-t(yng_big_explore[[i]])
yng_big_explore[[i]][yng_big_explore[[i]] == ""] <- NA
repeat_logical<-t(c(NA, yng_big_explore[[i]]) == c(yng_big_explore[[i]], NA))[1:length(yng_big_explore[[i]])]
repeats<- grep("TRUE",repeat_logical)
yng_big_explore[[i]][repeats,1]<-"repeats"
yng_big_explore[[i]]<-t(yng_big_explore[[i]])
yng_big_explore[[i]]<-as.data.frame(yng_big_explore[[i]])
}
yng_big_explore<-unsplit(yng_big_explore,row_labels)#merging all chunks back into single dataframe
yng_big_explore[is.na(yng_big_explore)]<-"none" #replacing all NAs with string, otherwise for loop below won't work
yng_big_explore <-  yng_big_explore %>% mutate(sex = yng_explr_Subinfo$sex)
#for loop to determine location counts
yng_big_explore_counts <- data.frame(matrix(ncol = 0, nrow = nrow(yng_big_explore)))#creating dataframe to store counts into
for (i in locs){
yng_big_explore_counts$subject <- yng_big_explore$subject
d <- as.data.frame(apply(yng_big_explore,1,function(x) sum(x==i))) # not sure what this function is
names(d) <- i
yng_big_explore_counts <- cbind(d, yng_big_explore_counts)
}
yng_big_explore_counts <- yng_big_explore_counts %>% mutate(sex=yng_explr_Subinfo$sex)
#midlife
male_obj_visits <- mid_big_explore_counts %>% filter(sex=="Male") %>%   transmute(subject,sex, A, I, L, K, N, O, P, Y, W)
cols_sum<-c(3:length(male_obj_visits))
male_obj_visits$total= rowSums(male_obj_visits[,cols_sum])
mObj_ave <-aggregate(male_obj_visits$total, list(male_obj_visits$subject), FUN=mean)
mid_male_analysis$TotalObjVisits <- mObj_ave$x
#females
female_obj_visits <- mid_big_explore_counts %>% filter(sex=="Female") %>%   transmute(subject,sex, A, I, L, K, N, O, P, Y, W)
cols_sum<-c(3:length(female_obj_visits))
female_obj_visits$total= rowSums(female_obj_visits[,cols_sum])
fObj_ave <- aggregate(female_obj_visits$total, list(female_obj_visits$subject), FUN=mean)
mid_female_analysis$TotalObjVisits<-fObj_ave$x
#Object Visits- Normality test to assess whether samples are normally distributed
shapiro.test(mid_male_analysis$TotalObjVisits) #normal
shapiro.test(mid_female_analysis$TotalObjVisits) # normal
#Object Visits - T-Test  # no differe
# GRabbing the young group
male_obj_visits <- yng_big_explore_counts %>% filter(sex=="Male") %>%   transmute(subject,sex, A, I, L, K, N, O, P, Y, W)
cols_sum<-c(3:length(male_obj_visits))
male_obj_visits$total= rowSums(male_obj_visits[,cols_sum])
mObj_ave <-aggregate(male_obj_visits$total, list(male_obj_visits$subject), FUN=mean)
yng_male_analysis$TotalObjVisits <- mObj_ave$x
#females
female_obj_visits <- yng_big_explore_counts %>% filter(sex=="Female") %>%   transmute(subject,sex, A, I, L, K, N, O, P, Y, W)
cols_sum<-c(3:length(female_obj_visits))
female_obj_visits$total= rowSums(female_obj_visits[,cols_sum])
fObj_ave <- aggregate(female_obj_visits$total, list(female_obj_visits$subject), FUN=mean)
yng_female_analysis$TotalObjVisits<-fObj_ave$x
shapiro.test(yng_male_analysis$TotalObjVisits) #normal
shapiro.test(yng_female_analysis$TotalObjVisits) # normal
#Instead of a ttest we're going to do an ANOVA
yng_obj <- rbind(yng_female_analysis,yng_male_analysis) %>%
select(Subject,TotalObjVisits) %>%
arrange() %>%
mutate(sex= yng_master_participant$sex)%>%
mutate(age= yng_master_participant$age)%>%  mutate(acc= yng_master_participant$tm_accuracy)
mid_obj <- rbind(mid_female_analysis,mid_male_analysis) %>%
select(Subject,TotalObjVisits) %>%
arrange() %>%
mutate(sex= mid_master_participant$sex)%>%
mutate(age= mid_master_participant$age) %>%  mutate(acc= mid_master_participant$tm_accuracy)
ObjVisits <- rbind(yng_obj,mid_obj)
# How does age and sex predict obj visits and how does this correlate to performance  mediation
Obj_aov <- aov(formula= acc ~ TotalObjVisits * age * sex ,ObjVisits)
summary(Obj_aov)
# or do you do
Obj_aov <- aov(formula=TotalObjVisits ~ sex * age ,ObjVisits)
summary(Obj_aov)
# lets do some analysis
# young female vs young male # significant difference
# pvalue=  0.02034 d=0.59377
# mean yng=male 9.75
#young =9.15
wilcox.test(yng_female_analysis$TotalObjVisits,yng_male_analysis$TotalObjVisits)
cohensD(yng_female_analysis$TotalObjVisits,yng_male_analysis$TotalObjVisits)
# midlife group
#non sig  p=0.08762 d=0.4
wilcox.test(mid_female_analysis$TotalObjVisits,mid_male_analysis$TotalObjVisits)
cohensD(mid_female_analysis$TotalObjVisits,mid_male_analysis$TotalObjVisits)
# what about young vs midlife
# females p-value = 8.953e-10
# midlife =12.45
#young =9.15
wilcox.test(mid_female_analysis$TotalObjVisits,yng_female_analysis$TotalObjVisits)
cohensD(mid_female_analysis$TotalObjVisits,yng_female_analysis$TotalObjVisits)
# males
#p=1.562e-06
# mean yng=9.75
#mid = 13.43478
wilcox.test(mid_male_analysis$TotalObjVisits,yng_male_analysis$TotalObjVisits)
cohensD(mid_male_analysis$TotalObjVisits,yng_male_analysis$TotalObjVisits)
mean(yng_male_analysis$TotalObjVisits)
yng_distance <- yng_master_participant %>% select(Subject,sex,age) %>% as.data.frame() %>% mutate(Dist = yng_master_participant$em_path_dist_trav)
mid_distance <- mid_master_participant %>% select(Subject,sex,age) %>% as.data.frame() %>% mutate(Dist = mid_master_participant$em_path_dist_trav)
dist <- rbind(yng_distance,mid_distance)
#this was just to create a better grouping
for (group in 1:nrow(dist)){
if (dist$age[group] < 25 && dist$sex[group] == "Female" ) {
dist$group[group] <- "young_female"
}
if (dist$age[group] > 35 && dist$sex[group] == "Female" ) {
dist$group[group] <- "mid_female"
}
if (dist$age[group] > 35 && dist$sex[group] == "Male" ) {
dist$group[group] <- "mid_male"
}
if (dist$age[group] < 25 && dist$sex[group] == "Male" ) {
dist$group[group] <- "young_male"
}
}
sam_size <- dist%>%dplyr::group_by(group)%>% dplyr::summarize(num=n())
pdf("Distance Traveled in young and midlife split by gender.pdf")
dist %>%
left_join(sam_size) %>%
mutate(myaxis=paste0(group,"\n", "n=", num)) %>%
ggplot( aes(x=myaxis, y=Dist, fill=group)) +
geom_violin() +
geom_boxplot(width=0.2, color="grey", alpha=0.2) +
geom_jitter(position = position_jitter(seed = 1, width = 0.1)) +
scale_colour_brewer(cbPalette) +
stat_summary(fun="mean",size =0.2, color="red" )+
theme(legend.position="none", plot.title = element_text(size=14)) +
ggtitle("Distance in young and midlife split by gender") +
xlab("") +
ylab("Distance traveled")
dev.off()
left_join(sam_size) %>%
mutate(myaxis=paste0(group,"\n", "n=", num)) %>%
ggplot( aes(x=myaxis, y=Dist, fill=group)) +
geom_violin() +
geom_boxplot(width=0.2, color="grey", alpha=0.2) +
geom_jitter(position = position_jitter(seed = 1, width = 0.1)) +
scale_colour_brewer(cbPalette) +
stat_summary(fun="mean",size =0.2, color="red" )+
theme(legend.position="none", plot.title = element_text(size=14)) +
ggtitle("Distance in young and midlife split by gender") +
xlab("") +
ylab("Distance traveled")
dist %>%
left_join(sam_size) %>%
mutate(myaxis=paste0(group,"\n", "n=", num)) %>%
ggplot( aes(x=myaxis, y=Dist, fill=group)) +
geom_violin() +
geom_boxplot(width=0.2, color="grey", alpha=0.2) +
geom_jitter(position = position_jitter(seed = 1, width = 0.1)) +
scale_colour_brewer(cbPalette) +
stat_summary(fun="mean",size =0.2, color="red" )+
theme(legend.position="none", plot.title = element_text(size=14)) +
ggtitle("Distance in young and midlife split by gender") +
xlab("") +
ylab("Distance traveled")
yng_obj <- rbind(yng_female_analysis,yng_male_analysis) %>%
select(Subject,TotalObjVisits) %>%
arrange() %>%
mutate(sex= yng_master_participant$sex)%>%
mutate(age= yng_master_participant$age)
mid_obj <- rbind(mid_female_analysis,mid_male_analysis) %>%
select(Subject,TotalObjVisits) %>%
arrange() %>%
mutate(sex= mid_master_participant$sex)%>%
mutate(age= mid_master_participant$age)
ObjVisits <- rbind(yng_obj,mid_obj)
#this was just to create a better grouping
for (group in 1:nrow(ObjVisits)){
if (ObjVisits$age[group] < 25 && ObjVisits$sex[group] == "Female" ) {
ObjVisits$group[group] <- "young_female"
}
if (ObjVisits$age[group] > 35 && ObjVisits$sex[group] == "Female" ) {
ObjVisits$group[group] <- "mid_female"
}
if (ObjVisits$age[group] > 35 && ObjVisits$sex[group] == "Male" ) {
ObjVisits$group[group] <- "mid_male"
}
if (ObjVisits$age[group] < 25 && ObjVisits$sex[group] == "Male" ) {
ObjVisits$group[group] <- "young_male"
}
}
sam_size <- ObjVisits%>%dplyr::group_by(group)%>% dplyr::summarize(num=n())
pdf("Distance Traveled in young and midlife split by gender.pdf")
ObjVisits %>%
left_join(sam_size) %>%
mutate(myaxis=paste0(group,"\n", "n=", num)) %>%
ggplot( aes(x=myaxis, y=TotalObjVisits, fill=group)) +
#geom_violin() +
geom_boxplot(width=0.2, color="grey", alpha=0.2) +
geom_jitter(position = position_jitter(seed = 1, width = 0.1)) +
scale_colour_brewer(cbPalette) +
stat_summary(fun="mean",size =0.2, color="red" )+
theme(legend.position="none", plot.title = element_text(size=14)) +
ggtitle("Object Visits in young and midlife split by gender") +
theme(plot.title = element_text(hjust = 0.5))+
xlab("") +
ylab("Object Visits")
dev.off()
# LEts just do women
pdf("Distance Traveled in young and midlife Women.pdf")
ObjVisits %>%
left_join(sam_size) %>%
filter(sex == "Female") %>%
mutate(myaxis=paste0(group,"\n", "n=", num)) %>%
ggplot( aes(x=myaxis, y=TotalObjVisits, fill=group)) +
#geom_violin() +
geom_boxplot(width=0.2, color="grey", alpha=0.2) +
geom_jitter(position = position_jitter(seed = 1, width = 0.1)) +
scale_colour_brewer(cbPalette) +
stat_summary(fun="mean",size =0.2, color="red" )+
theme(legend.position="none", plot.title = element_text(size=14)) +
ggtitle("Object Visits in young and midlife women") +
theme(plot.title = element_text(hjust = 0.5))+
xlab("") +
ylab("Total bject Visits")
dev.off()
#Lets do men
pdf("Distance Traveled in young and midlife Men.pdf")
ObjVisits %>%
left_join(sam_size) %>%
filter(sex == "Male") %>%
mutate(myaxis=paste0(group,"\n", "n=", num)) %>%
ggplot( aes(x=myaxis, y=TotalObjVisits, fill=group)) +
#geom_violin() +
geom_boxplot(width=0.2, color="grey", alpha=0.2) +
geom_jitter(position = position_jitter(seed = 1, width = 0.1)) +
scale_colour_brewer(cbPalette) +
stat_summary(fun="mean",size =0.2, color="red" )+
theme(legend.position="none", plot.title = element_text(size=14)) +
ggtitle("Object Visits in young and midlife women") +
theme(plot.title = element_text(hjust = 0.5))+
xlab("") +
ylab("Total Object Visits")
dev.off()
ObjVisits %>%
left_join(sam_size) %>%
mutate(myaxis=paste0(group,"\n", "n=", num)) %>%
ggplot( aes(x=myaxis, y=TotalObjVisits, fill=group)) +
#geom_violin() +
geom_boxplot(width=0.2, color="grey", alpha=0.2) +
geom_jitter(position = position_jitter(seed = 1, width = 0.1)) +
scale_colour_brewer(cbPalette) +
stat_summary(fun="mean",size =0.2, color="red" )+
theme(legend.position="none", plot.title = element_text(size=14)) +
ggtitle("Object Visits in young and midlife split by gender") +
theme(plot.title = element_text(hjust = 0.5))+
xlab("") +
ylab("Object Visits")
ObjVisits %>%
left_join(sam_size) %>%
filter(sex == "Female") %>%
mutate(myaxis=paste0(group,"\n", "n=", num)) %>%
ggplot( aes(x=myaxis, y=TotalObjVisits, fill=group)) +
#geom_violin() +
geom_boxplot(width=0.2, color="grey", alpha=0.2) +
geom_jitter(position = position_jitter(seed = 1, width = 0.1)) +
scale_colour_brewer(cbPalette) +
stat_summary(fun="mean",size =0.2, color="red" )+
theme(legend.position="none", plot.title = element_text(size=14)) +
ggtitle("Object Visits in young and midlife women") +
theme(plot.title = element_text(hjust = 0.5))+
xlab("") +
ylab("Total bject Visits")
ObjVisits %>%
left_join(sam_size) %>%
mutate(myaxis=paste0(group,"\n", "n=", num)) %>%
ggplot( aes(x=myaxis, y=TotalObjVisits, fill=group)) +
#geom_violin() +
geom_boxplot(width=0.2, color="grey", alpha=0.2) +
geom_jitter(position = position_jitter(seed = 1, width = 0.1)) +
scale_colour_brewer(cbPalette) +
stat_summary(fun="mean",size =0.2, color="red" )+
theme(legend.position="none", plot.title = element_text(size=14)) +
ggtitle("Object Visits in young and midlife split by gender") +
theme(plot.title = element_text(hjust = 0.5))+
xlab("") +
ylab("Object Visits")
Obj_aov <- aov(formula=TotalObjVisits ~ sex * age ,ObjVisits)
summary(Obj_aov)
