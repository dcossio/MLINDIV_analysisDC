filter(!str_detect(V1, c("mean_qa_post_norm"))) %>%
`colnames<-`(QA_acc_male_neg_cols) %>%
mutate(Sex = Acc_sub_info$sex)
QA_acc_male_neg_values <-read.csv(paste0(Acc_working_dir,'QA/male/QA_male_neg.csv'), header=FALSE ) %>%
filter(str_detect(V1, c("mean_qa"))) %>%
filter(!str_detect(V1, c("mean_qa_post_norm"))) %>%
`colnames<-`(QA_acc_male_neg_cols)
QA_acc_male_neg_cols <-  c("Subjects", as.character(QA_acc_male_neg[,1]))
QA_acc_male_neg_values <-read.csv(paste0(Acc_working_dir,'QA/male/QA_male_neg.csv'), header=FALSE ) %>%
filter(str_detect(V1, c("mean_qa"))) %>%
filter(!str_detect(V1, c("mean_qa_post_norm"))) %>%
`colnames<-`(QA_acc_male_neg_cols)
QA_acc_male_neg_values <-read.csv(paste0(Acc_working_dir,'QA/male/QA_male_neg.csv'), header=FALSE ) %>%
filter(str_detect(V1, c("mean_qa"))) %>%
filter(!str_detect(V1, c("mean_qa_post_norm"))) %>%
`colnames<-`(QA_acc_male_neg_cols) %>%
mutate(Sex = Acc_sub_info$sex)
QA_acc_male_neg_values <-read.csv(paste0(Acc_working_dir,'QA/male/QA_male_neg.csv'), header=FALSE ) %>%
filter(str_detect(V1, c("mean_qa"))) %>%
filter(!str_detect(V1, c("mean_qa_post_norm"))) %>%
`colnames<-`(QA_acc_male_neg_cols) %>%
mutate(Sex = Acc_sub_info$sex) %>%
mutate(age = Acc_sub_info$age_scan_years) %>%
mutate(repo_status = Acc_sub_info$repo_status) %>% filter(sex =="male")
QA_acc_male_neg_values <-read.csv(paste0(Acc_working_dir,'QA/male/QA_male_neg.csv'), header=FALSE ) %>%
filter(str_detect(V1, c("mean_qa"))) %>%
filter(!str_detect(V1, c("mean_qa_post_norm"))) %>%
`colnames<-`(QA_acc_male_neg_cols) %>%
mutate(sex = Acc_sub_info$sex) %>%
mutate(age = Acc_sub_info$age_scan_years) %>%
mutate(repo_status = Acc_sub_info$repo_status) %>% filter(sex =="male")
length(QA_acc_male_neg_values)
length(QA_acc_male_neg_values)-3
length(QA_acc_male_neg_values)-2
length(QA_acc_male_neg_values)-2:length(QA_acc_male_neg_values)
QA_acc_male_neg_values[,length(QA_acc_male_neg_values)-2:length(QA_acc_male_neg_values)]
QA_acc_male_neg_values[,length(QA_acc_male_neg_values)-3:length(QA_acc_male_neg_values)]
length(QA_acc_male_neg[,1])
BoxplotCleaning <- function(wd, csvpath, ROIs, Sex, metric) {
roi_names <- c("Subjects", as.character(ROIs))
if (metric == "mean_qa") {
df <-
read.csv(paste0(wd, csvpath),
header = FALSE) %>%
filter(str_detect(V1, c("mean_qa"))) %>%
filter(!str_detect(V1, c("mean_qa_post_norm"))) %>%
`colnames<-`(roi_names) %>%
mutate(sex = Acc_sub_info$sex) %>%
mutate(age = Acc_sub_info$age_scan_years) %>%
mutate(repo_status = Acc_sub_info$repo_status)
} else{
df <-
read.csv(paste0(wd, csvpath),
header = FALSE) %>%
filter(str_detect(V1, c(metric))) %>%
`colnames<-`(roi_names) %>%
mutate(sex = Acc_sub_info$sex) %>%
mutate(age = Acc_sub_info$age_scan_years) %>%
mutate(repo_status = Acc_sub_info$repo_status)
}
if (Sex == "male") {
df <- df %>% filter(sex == "male")
} else{
df <- df %>% filter(sex == "female")
}
df <- df[,c(1,length(df)-3:length(df),2:length(ROIs))]
df <- colnames(df[5:length(df)])
#for some reason things are being read as a a character and it needs to be a numerical value
df[5:length(df)] <- apply(df[5:length(df)],2, as.numeric)
return(df)
}
QA_acc_male_neg_values <- BoxplotCleaning(Acc_working_dir,'maze/Accuracy/QA/male/QA_male_neg.csv',ROIs = QA_acc_male_neg[,1],sex = "male",metric = "mean_qa")
df <-
read.csv(paste0(wd, csvpath),
header = FALSE)
BoxplotCleaning(Acc_working_dir,'maze/Accuracy/QA/male/QA_male_neg.csv',ROIs = QA_acc_male_neg[,1],Sex = "male",metric = "mean_qa")
QA_acc_male_neg_values <- BoxplotCleaning(Acc_working_dir,'QA/male/QA_male_neg.csv',ROIs = QA_acc_male_neg[,1],Sex = "male",metric = "mean_qa")
QA_acc_male_neg_values <- QA_acc_male_neg_values[,c(1,length(QA_acc_male_neg_values)-3:length(QA_acc_male_neg_values),2:11)]
View(QA_acc_male_neg_values)
QA_acc_male_neg_gathercols <- colnames(QA_acc_male_neg_values[5:length(QA_acc_male_neg_values)])
QA_acc_male_neg_values[5:length(QA_acc_male_neg_values)] <- apply(QA_acc_male_neg_values[5:length(QA_acc_male_neg_values)],2, as.numeric)
BoxplotCleaning <- function(wd, csvpath, ROIs, Sex, metric) {
roi_names <- c("Subjects", as.character(ROIs))
if (metric == "mean_qa") {
df <-
read.csv(paste0(wd, csvpath),
header = FALSE) %>%
filter(str_detect(V1, c("mean_qa"))) %>%
filter(!str_detect(V1, c("mean_qa_post_norm"))) %>%
`colnames<-`(roi_names) %>%
mutate(sex = Acc_sub_info$sex) %>%
mutate(age = Acc_sub_info$age_scan_years) %>%
mutate(repo_status = Acc_sub_info$repo_status)
} else{
df <-
read.csv(paste0(wd, csvpath),
header = FALSE) %>%
filter(str_detect(V1, c(metric))) %>%
`colnames<-`(roi_names) %>%
mutate(sex = Acc_sub_info$sex) %>%
mutate(age = Acc_sub_info$age_scan_years) %>%
mutate(repo_status = Acc_sub_info$repo_status)
}
if (Sex == "male") {
df <- df %>% filter(sex == "male")
} else{
df <- df %>% filter(sex == "female")
}
df <- df[,c(1,length(df)-3:length(df),2:length(ROIs))]
#for some reason things are being read as a a character and it needs to be a numerical value
df[5:length(df)] <- apply(df[5:length(df)],2, as.numeric)
return(df)
}
QA_acc_male_neg_values <- BoxplotCleaning(Acc_working_dir,'QA/male/QA_male_neg.csv',ROIs = QA_acc_male_neg[,1],Sex = "male",metric = "mean_qa")
View(QA_acc_male_neg_values)
BoxplotCleaning <- function(wd, csvpath, ROIs, Sex, metric) {
roi_names <- c("Subjects", as.character(ROIs))
if (metric == "mean_qa") {
df <-
read.csv(paste0(wd, csvpath),
header = FALSE) %>%
filter(str_detect(V1, c("mean_qa"))) %>%
filter(!str_detect(V1, c("mean_qa_post_norm"))) %>%
`colnames<-`(roi_names) %>%
mutate(sex = Acc_sub_info$sex) %>%
mutate(age = Acc_sub_info$age_scan_years) %>%
mutate(repo_status = Acc_sub_info$repo_status)
} else{
df <-
read.csv(paste0(wd, csvpath),
header = FALSE) %>%
filter(str_detect(V1, c(metric))) %>%
`colnames<-`(roi_names) %>%
mutate(sex = Acc_sub_info$sex) %>%
mutate(age = Acc_sub_info$age_scan_years) %>%
mutate(repo_status = Acc_sub_info$repo_status)
}
if (Sex == "male") {
df <- df %>% filter(sex == "male")
} else{
df <- df %>% filter(sex == "female")
}
df <- df[,c(1,length(df)-3:length(df),2:length(ROIs)+1)]
#for some reason things are being read as a a character and it needs to be a numerical value
df[5:length(df)] <- apply(df[5:length(df)],2, as.numeric)
return(df)
}
QA_acc_male_neg_values <- BoxplotCleaning(Acc_working_dir,'QA/male/QA_male_neg.csv',ROIs = QA_acc_male_neg[,1],Sex = "male",metric = "mean_qa")
View(QA_acc_male_neg_values)
QA_acc_male_neg_values <- BoxplotCleaning(Acc_working_dir,'QA/male/QA_male_neg.csv',ROIs = QA_acc_male_neg[,1],Sex = "male",metric = "mean_qa")
View(QA_acc_male_neg_values)
QA_acc_male_neg[,1]
View(Acc_sub_info)
BoxplotCleaning <- function(wd, csvpath, ROIs, Sex, metric) {
roi_names <- c("Subjects", as.character(ROIs))
if (metric == "mean_qa") {
df <-
read.csv(paste0(wd, csvpath),
header = FALSE) %>%
filter(str_detect(V1, c("mean_qa"))) %>%
filter(!str_detect(V1, c("mean_qa_post_norm"))) }
else{
df <-read.csv(paste0(wd, csvpath),header = FALSE) %>% filter(str_detect(V1, c(metric)))
}
df <- df %>% `colnames<-`(roi_names) %>%
mutate(sex = Acc_sub_info$sex) %>%
mutate(age = Acc_sub_info$age_scan_years) %>%
mutate(repo_status = Acc_sub_info$repo_status)
#
#   if (Sex == "male") {
#     df <- df %>% filter(sex == "male")
#   } else{
#     df <- df %>% filter(sex == "female")
#   }
#
#
#
#   df <- df[,c(1,length(df)-3:length(df),2:length(ROIs)+1)]
#
# #for some reason things are being read as a a character and it needs to be a numerical value
#   df[5:length(df)] <- apply(df[5:length(df)],2, as.numeric)
return(df)
}
QA_acc_male_neg_values <- BoxplotCleaning(Acc_working_dir,'QA/male/QA_male_neg.csv',ROIs = QA_acc_male_neg[,1],Sex = "male",metric = "mean_qa")
View(QA_acc_male_neg_values)
BoxplotCleaning <- function(wd, csvpath, ROIs, Sex, metric) {
roi_names <- c("Subjects", as.character(ROIs))
df <- read.csv(paste0(wd,csvpath), header=FALSE)
if (length(df) == 1)
df <- read.delim(paste0(wd,csvpath), header=FALSE, sep="\t")
if (metric == "mean_qa") {
df <- df %>% filter(str_detect(V1, c("mean_qa")))
%>% filter(!str_detect(V1,c("mean_qa_post_norm"))) }
BoxplotCleaning <- function(wd, csvpath, ROIs, Sex, metric) {
roi_names <- c("Subjects", as.character(ROIs))
df <- read.csv(paste0(wd,csvpath), header=FALSE)
if (length(df) == 1)
df <- read.delim(paste0(wd,csvpath), header=FALSE, sep="\t")
if (metric == "mean_qa") {
df <- df %>% filter(str_detect(V1, c("mean_qa"))) %>% filter(!str_detect(V1,c("mean_qa_post_norm"))) }
else{
df <- df %>% read.csv(paste0(wd, csvpath),header = FALSE) %>% filter(str_detect(V1, c(metric)))
}
df <- df %>% `colnames<-`(roi_names) %>%
mutate(sex = Acc_sub_info$sex) %>%
mutate(age = Acc_sub_info$age_scan_years) %>%
mutate(repo_status = Acc_sub_info$repo_status)
if (Sex == "male") {
df <- df %>% filter(sex == "male")
} else{
df <- df %>% filter(sex == "female")
}
#
#
#   df <- df[,c(1,length(df)-3:length(df),2:length(ROIs)+1)]
#
# #for some reason things are being read as a a character and it needs to be a numerical value
#   df[5:length(df)] <- apply(df[5:length(df)],2, as.numeric)
return(df)
}
QA_acc_male_neg_values <- BoxplotCleaning(Acc_working_dir,'QA/male/QA_male_neg.csv',ROIs = QA_acc_male_neg[,1],Sex = "male",metric = "mean_qa")
View(QA_acc_male_neg_values)
BoxplotCleaning <- function(wd, csvpath, ROIs, Sex, metric) {
roi_names <- c("Subjects", as.character(ROIs))
df <- read.csv(paste0(wd,csvpath), header=FALSE)
if (length(df) == 1)
df <- read.delim(paste0(wd,csvpath), header=FALSE, sep="\t")
if (metric == "mean_qa") {
df <- df %>% filter(str_detect(V1, c("mean_qa"))) %>% filter(!str_detect(V1,c("mean_qa_post_norm"))) }
else{
df <- df %>% read.csv(paste0(wd, csvpath),header = FALSE) %>% filter(str_detect(V1, c(metric)))
}
df <- df %>% `colnames<-`(roi_names) %>%
mutate(sex = Acc_sub_info$sex) %>%
mutate(age = Acc_sub_info$age_scan_years) %>%
mutate(repo_status = Acc_sub_info$repo_status)
if (Sex == "male") {
df <- df %>% filter(sex == "male")
} else{
df <- df %>% filter(sex == "female")
}
#
#
df <- df[,c(1,length(df)-3:length(df),2:length(ROIs))]
#
# #for some reason things are being read as a a character and it needs to be a numerical value
#   df[5:length(df)] <- apply(df[5:length(df)],2, as.numeric)
return(df)
}
QA_acc_male_neg_values <- BoxplotCleaning(Acc_working_dir,'QA/male/QA_male_neg.csv',ROIs = QA_acc_male_neg[,1],Sex = "male",metric = "mean_qa")
View(QA_acc_male_neg_values)
BoxplotCleaning <- function(wd, csvpath, ROIs, Sex, metric) {
roi_names <- c("Subjects", as.character(ROIs))
df <- read.csv(paste0(wd,csvpath), header=FALSE)
if (length(df) == 1)
df <- read.delim(paste0(wd,csvpath), header=FALSE, sep="\t")
if (metric == "mean_qa") {
df <- df %>% filter(str_detect(V1, c("mean_qa"))) %>% filter(!str_detect(V1,c("mean_qa_post_norm"))) }
else{
df <- df %>% read.csv(paste0(wd, csvpath),header = FALSE) %>% filter(str_detect(V1, c(metric)))
}
df <- df %>% `colnames<-`(roi_names) %>%
mutate(sex = Acc_sub_info$sex) %>%
mutate(age = Acc_sub_info$age_scan_years) %>%
mutate(repo_status = Acc_sub_info$repo_status)
if (Sex == "male") {
df <- df %>% filter(sex == "male")
} else{
df <- df %>% filter(sex == "female")
}
#
#
df <- df[,c(1,length(df)-2:length(df),2:length(ROIs))]
#
# #for some reason things are being read as a a character and it needs to be a numerical value
#   df[5:length(df)] <- apply(df[5:length(df)],2, as.numeric)
return(df)
}
QA_acc_male_neg_values <- BoxplotCleaning(Acc_working_dir,'QA/male/QA_male_neg.csv',ROIs = QA_acc_male_neg[,1],Sex = "male",metric = "mean_qa")
View(QA_acc_male_neg_values)
length(ROIs)
QA_acc_male_neg[,1]
length()
length(QA_acc_male_neg[,1])
BoxplotCleaning <- function(wd, csvpath, ROIs, Sex, metric) {
roi_names <- c("Subjects", as.character(ROIs))
df <- read.csv(paste0(wd,csvpath), header=FALSE)
if (length(df) == 1)
df <- read.delim(paste0(wd,csvpath), header=FALSE, sep="\t")
if (metric == "mean_qa") {
df <- df %>% filter(str_detect(V1, c("mean_qa"))) %>% filter(!str_detect(V1,c("mean_qa_post_norm"))) }
else{
df <- df %>% read.csv(paste0(wd, csvpath),header = FALSE) %>% filter(str_detect(V1, c(metric)))
}
df <- df %>% `colnames<-`(roi_names) %>%
mutate(sex = Acc_sub_info$sex) %>%
mutate(age = Acc_sub_info$age_scan_years) %>%
mutate(repo_status = Acc_sub_info$repo_status)
if (Sex == "male") {
df <- df %>% filter(sex == "male")
} else{
df <- df %>% filter(sex == "female")
}
#
#
df <- df[,c(1,length(df)-2:length(df),2:length(ROIs)+1)]
#
# #for some reason things are being read as a a character and it needs to be a numerical value
#   df[5:length(df)] <- apply(df[5:length(df)],2, as.numeric)
return(df)
}
QA_acc_male_neg_values <- BoxplotCleaning(Acc_working_dir,'QA/male/QA_male_neg.csv',ROIs = QA_acc_male_neg[,1],Sex = "male",metric = "mean_qa")
BoxplotCleaning <- function(wd, csvpath, ROIs, Sex, metric) {
roi_names <- c("Subjects", as.character(ROIs))
df <- read.csv(paste0(wd,csvpath), header=FALSE)
if (length(df) == 1)
df <- read.delim(paste0(wd,csvpath), header=FALSE, sep="\t")
if (metric == "mean_qa") {
df <- df %>% filter(str_detect(V1, c("mean_qa"))) %>% filter(!str_detect(V1,c("mean_qa_post_norm"))) }
else{
df <- df %>% read.csv(paste0(wd, csvpath),header = FALSE) %>% filter(str_detect(V1, c(metric)))
}
df <- df %>% `colnames<-`(roi_names) %>%
mutate(sex = Acc_sub_info$sex) %>%
mutate(age = Acc_sub_info$age_scan_years) %>%
mutate(repo_status = Acc_sub_info$repo_status)
if (Sex == "male") {
df <- df %>% filter(sex == "male")
} else{
df <- df %>% filter(sex == "female")
}
#
# #for some reason things are being read as a a character and it needs to be a numerical value
df[2:length(ROIs)] <- apply(df[2:length(ROIs)],2, as.numeric)
return(df)
}
QA_acc_male_neg_values <- BoxplotCleaning(Acc_working_dir,'QA/male/QA_male_neg.csv',ROIs = QA_acc_male_neg[,1],Sex = "male",metric = "mean_qa")
View(QA_acc_male_neg_values)
class(QA_acc_male_neg_values$Cerebellum_L)
class(QA_acc_male_neg_values$Subjects)
QA_acc_female_pos_values <- BoxplotCleaning(Acc_working_dir,'maze/Accuracy/QA/female/QA_female_pos.csv',ROIs = QA_acc_female_neg[,1],Sex = "female",metric = "mean_qa")
QA_acc_female_pos_values <- BoxplotCleaning(Acc_working_dir,'QA/female/QA_female_pos.csv',ROIs = QA_acc_female_neg[,1],Sex = "female",metric = "mean_qa")
View(Acc_sub_info)
QA_acc_female_pos_values <- BoxplotCleaning(Acc_working_dir,'QA/female/QA_female_pos.csv',ROIs = QA_acc_female_pos[,1],Sex = "female",metric = "mean_qa")
View(QA_acc_female_pos_values)
QA_acc_female_neg_values<-BoxplotCleaning(Acc_working_dir,'QA/female/QA_female_neg.csv',ROIs = QA_acc_female_neg[,1],Sex = "female",metric = "mean_qa")
QA_acc_female_neg[,1]
setdiff(QA_acc_female_neg_values,QA_acc_male_neg_values)
setdiff(colnames(QA_acc_female_neg_values),colnames(QA_acc_male_neg_values))
GetSameROIs <- function(femaledf,femaleROI,maledf, maleROI){
ROI_dif <- setdiff(femaleROI , maleROI)
df1 <- femaledf[, !names(femaledf) %in% ROI_dif]
df2 <- maledf[, !names(maledf) %in% ROI_dif]
main_df <- rbind(df1,df2)
return(main_df)
}
GetSameROIs <- function(femaledf,femaleROI,maledf, maleROI){
ROI_dif <- setdiff(femaleROI , maleROI)
df1 <- femaledf[, !names(femaledf) %in% ROI_dif]
df2 <- maledf[, !names(maledf) %in% ROI_dif]
main_df <- rbind(df1,df2)
return(main_df)
}
QA_df <- GetSameROIs(QA_acc_female_pos_values,QA_acc_female_pos[,1],QA_acc_male_neg_values,QA_acc_male_neg[,1])
setdiff(colnames(QA_acc_female_pos_values),colnames(QA_acc_male_neg_values))
QA_acc_female_pos[,1],
QA_acc_female_pos[,1]
QA_acc_male_neg[,1]
ROI_dif <- setdiff(colnames(QA_acc_female_pos_values),colnames(QA_acc_male_neg_values))
df1 <- QA_acc_female_pos_values[, !names(QA_acc_female_pos_values) %in% ROI_dif]
View(df1)
df2 <- QA_acc_male_neg[, !names(QA_acc_male_neg) %in% ROI_dif]
View(df2)
QA_acc_male_neg_values <- BoxplotCleaning(Acc_working_dir,'QA/male/QA_male_neg.csv',ROIs = QA_acc_male_neg[,1],Sex = "male",metric = "mean_qa")
View(QA_acc_male_neg_values)
df2 <- QA_acc_male_neg_values[, !names(QA_acc_male_neg_values) %in% ROI_dif]
View(df2)
df1 <- femaledf[, !names(femaledf) %in% ROI_dif]
df2 <- df2 %>% (select(names(df1) %in% ROI_dif))
df2 <- df2 %>% select( names(df1) %in% ROI_dif)
df2 <- df2[,names(df1) %in% ROI_dif]
df2 <- df2[,names(df1) %in% df1]
df2 <- df2[,names(df2) %in% df1]
df2 <- names(df2) %in% df1]
names(df2) %in% df1]
names(df2) %in% df1
df2 <- QA_acc_male_neg_values[, !names(QA_acc_male_neg_values) %in% ROI_dif]
compare_df_cols(QA_acc_male_neg_values,QA_acc_female_pos_values)
compare_df_cols(QA_acc_male_neg_values,QA_acc_female_pos_values, return="match")
x <- compare_df_cols(QA_acc_male_neg_values,QA_acc_female_pos_values, return="match")
View(x)
GetSameROIs <- function(femaledf,femaleROI,maledf, maleROI){
cols <- compare_df_cols(femaledf,maledf, return="match")
colList <-c(cols$column_name)
df1 <- femaledf[,names(femaledf) %in% colList]
df2 <- maledf[,names(maledf) %in% colList]
main_df <- rbind(df1,df2)
return(main_df)
}
GetSameROIs <- function(femaledf,maledf){
cols <- compare_df_cols(femaledf,maledf, return="match")
colList <-c(cols$column_name)
df1 <- femaledf[,names(femaledf) %in% colList]
df2 <- maledf[,names(maledf) %in% colList]
main_df <- rbind(df1,df2)
return(main_df)
}
QA_df <- GetSameROIs(QA_acc_female_pos_values,QA_acc_male_neg_values)
cols <- compare_df_cols(QA_acc_female_pos_values,QA_acc_male_neg_values, return="match")
colList <-c(cols$column_name)
colList
df1 <- QA_acc_female_pos_values[,names(QA_acc_female_pos_values) %in% colList]
View(df1)
df2 <- maledf[,names(maledf) %in% colList]
df2 <- QA_acc_male_neg_values[,names(QA_acc_male_neg_values) %in% colList]
View(cols)
cols <- compare_df_cols(QA_acc_female_pos_values,QA_acc_male_neg_values, return="match") %>% na.omit()
View(cols)
df1 <- QA_acc_female_pos_values[,names(QA_acc_female_pos_values) %in% colList]
df2 <- QA_acc_male_neg_values[,names(QA_acc_male_neg_values) %in% colList]
colList <-c(cols$column_name)
df1 <- QA_acc_female_pos_values[,names(QA_acc_female_pos_values) %in% colList]
df2 <- QA_acc_male_neg_values[,names(QA_acc_male_neg_values) %in% colList]
GetSameROIs <- function(femaledf,maledf){
cols <- compare_df_cols(femaledf,maledf, return="match")
colList <-c(cols$column_name)%>% na.omit()
df1 <- femaledf[,names(femaledf) %in% colList]
df2 <- maledf[,names(maledf) %in% colList]
main_df <- rbind(df1,df2)
return(main_df)
}
QA_df <- GetSameROIs(QA_acc_female_pos_values,QA_acc_male_neg_values)
GetSameROIs <- function(femaledf,maledf){
cols <- compare_df_cols(femaledf,maledf, return="match")
colList <-c(cols$column_name)%>% na.omit()
df1 <- femaledf[,names(femaledf) %in% colList]
df2 <- maledf[,names(maledf) %in% colList]
main_df <- rbind(df1,df2)
return(main_df)
}
QA_df <- GetSameROIs(QA_acc_female_pos_values,QA_acc_male_neg_values)
QA_df <- GetSameROIs(QA_acc_female_pos_values,QA_acc_male_neg_values)
GetSameROIs <- function(femaledf,maledf){
cols <- compare_df_cols(femaledf,maledf, return="match")%>% na.omit()
colList <-c(cols$column_name)
df1 <- femaledf[,names(femaledf) %in% colList]
df2 <- maledf[,names(maledf) %in% colList]
main_df <- rbind(df1,df2)
return(main_df)
}
QA_df <- GetSameROIs(QA_acc_female_pos_values,QA_acc_male_neg_values)
View(QA_df)
View(QA_df)
View(cols)
# I will be commenting out the loop since I just need one fig
figpath <- "/Users/danielacossio/Library/CloudStorage/GoogleDrive-dcossio1@uci.edu/My Drive/White matter tract/MidlifeWM_DSI2023/DSI/maze/Accuracy/QA/"
for (ROI in colnames(QA_df[2:5])) {
print(ROI)
y <- ggplot(QA_df, aes(x=sex, y=.data[[ROI]], group=sex)) +
geom_boxplot(outlier.shape = NA,width =0.5,fill= c("#CF92BF", "#D1E7E6")) +
geom_jitter(color="black",size=0.8,alpha=0.9,width = 0.2) +
#scale_y_binned(n.breaks=10, nice.breaks = TRUE) +
stat_boxplot(geom = "errorbar",
width = 0.15) +
labs(x= "Sex", y= " QA", title =paste0(ROI) ) +
theme(axis.title.x = element_text(vjust=- 4, size = 16),
axis.title.y = element_text(vjust=8, size = 16),
axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 12),
panel.background =element_blank(),
axis.line = element_line(colour = "black"),
plot.margin = margin(1, 2, 1, 1.5, "cm"),
plot.title = element_text(hjust = 0.5, vjust = 2, size = 16, face="bold"))
#png(file = paste0(figpath,ROI,"_sexdiff_QA.png"))  #,".png"))
print(y)
#dev.off()
}
QA_acc_male_neg_values <- BoxplotCleaning(Acc_working_dir,'QA/male/QA_male_neg.csv',ROIs = QA_acc_male_neg[,1],Sex = "male",metric = "mean_qa")
QA_acc_female_pos_values <- BoxplotCleaning(Acc_working_dir,'QA/female/QA_female_pos.csv',ROIs = QA_acc_female_pos[,1],Sex = "female",metric = "mean_qa")
QA_acc_female_neg_values<-BoxplotCleaning(Acc_working_dir,'QA/female/QA_female_neg.csv',ROIs = QA_acc_female_neg[,1],Sex = "female",metric = "mean_qa")
QA_df <- GetSameROIs(QA_acc_female_pos_values,QA_acc_male_neg_values)
# I will be commenting out the loop since I just need one fig
figpath <- "/Users/danielacossio/Library/CloudStorage/GoogleDrive-dcossio1@uci.edu/My Drive/White matter tract/MidlifeWM_DSI2023/DSI/maze/Accuracy/QA/"
for (ROI in colnames(QA_df[2:5])) {
print(ROI)
y <- ggplot(QA_df, aes(x=sex, y=.data[[ROI]], group=sex)) +
geom_boxplot(outlier.shape = NA,width =0.5,fill= c("#CF92BF", "#D1E7E6")) +
geom_jitter(color="black",size=0.8,alpha=0.9,width = 0.2) +
#scale_y_binned(n.breaks=10, nice.breaks = TRUE) +
stat_boxplot(geom = "errorbar",
width = 0.15) +
labs(x= "Sex", y= " QA", title =paste0(ROI) ) +
theme(axis.title.x = element_text(vjust=- 4, size = 16),
axis.title.y = element_text(vjust=8, size = 16),
axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 12),
panel.background =element_blank(),
axis.line = element_line(colour = "black"),
plot.margin = margin(1, 2, 1, 1.5, "cm"),
plot.title = element_text(hjust = 0.5, vjust = 2, size = 16, face="bold"))
#png(file = paste0(figpath,ROI,"_sexdiff_QA.png"))  #,".png"))
print(y)
#dev.off()
}
GetSameROIs <- function(femaledf,maledf){
cols <- compare_df_cols(femaledf,maledf, return="match")%>% na.omit()
colList <-c(cols$column_name)
df1 <- femaledf[,names(femaledf) %in% colList]
df2 <- maledf[,names(maledf) %in% colList]
main_df <- rbind(df1,df2)
return(main_df)
}
