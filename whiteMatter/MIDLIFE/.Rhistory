labs(x = paste(ROI),
y = "Degrees Traveled") +
stat_cor(method = "spearman", aes(
color = sex,
label = paste(..r.label..,..rr.label.., ..p.label.., sep = "~`,`~")
)) +
theme(
legend.position = "right",
axis.text.x = element_text(size = 15),
axis.text.y = element_text(size = 15),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),
#legend.key.size = unit(2, 'cm'),
legend.title = element_text(size = 10),
legend.text = element_text(size = 10))
#plot.margin = margin(3, 2, 3, 2, "cm")) +
xlim(min(female_pos[ROI]), max(female_pos[ROI]))
# <!--      annotate("text", label = "FDR= 0.000576", x = 1.8 , y = 3, color="#E45A5A", size=7) +
# <!--      annotate("text", label = "FDR= 0.022854", x = 1.8 , y = 2.8, color="#80792B", size=7)
pdf(file = paste0(figpath,ROI,"QA_Rad3_DT_positive.pdf"),width=10, height=8)
print(y)
dev.off()
}
female_pos %>% ggplot(aes(x = .data[[ROI]], y = loop_de_rad3_degree)) +
geom_point(aes( size = 4)) +
stat_smooth(method = "lm") +
scale_color_manual(values = c(npc_saguaro[2], npc_saguaro[4]),
name = "sex") +
labs(x = paste(ROI),
y = "Degrees Traveled") +
stat_cor(method = "spearman", aes(
color = sex,
label = paste(..r.label..,..rr.label.., ..p.label.., sep = "~`,`~")
)) +
theme(
legend.position = "right",
axis.text.x = element_text(size = 15),
axis.text.y = element_text(size = 15),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),
#legend.key.size = unit(2, 'cm'),
legend.title = element_text(size = 10),
legend.text = element_text(size = 10))
#plot.margin = margin(3, 2, 3, 2, "cm")) +
xlim(min(female_pos[ROI]), max(female_pos[ROI]))
female_pos %>% ggplot(aes(x = .data[[ROI]], y = loop_de_rad3_degree)) +
geom_point(aes( size = 4)) +
stat_smooth(method = "lm") +
scale_color_manual(values = c(npc_saguaro[4]),
name = "sex") +
labs(x = paste(ROI),
y = "Degrees Traveled") +
stat_cor(method = "spearman", aes(
label = paste(..r.label..,..rr.label.., ..p.label.., sep = "~`,`~")
)) +
theme(
legend.position = "right",
axis.text.x = element_text(size = 15),
axis.text.y = element_text(size = 15),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),
#legend.key.size = unit(2, 'cm'),
legend.title = element_text(size = 10),
legend.text = element_text(size = 10))
#plot.margin = margin(3, 2, 3, 2, "cm")) +
xlim(min(female_pos[ROI]), max(female_pos[ROI]))
female_pos %>% ggplot(aes(x = .data[[ROI]], y = loop_de_rad3_degree)) +
geom_point(aes(color = sex), size = 4) +
stat_smooth(aes(color = sex, group = sex), method = "lm") +
scale_color_manual(values = c(npc_saguaro[2], npc_saguaro[4]),
name = "sex") +
labs(x = paste(ROI),
y = "Degrees Traveled") +
stat_cor(method = "spearman", aes(
color = sex,
label = paste(..r.label..,..rr.label.., ..p.label.., sep = "~`,`~")
)) +
theme(
legend.position = "right",
axis.text.x = element_text(size = 15),
axis.text.y = element_text(size = 15),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),
#legend.key.size = unit(2, 'cm'),
legend.title = element_text(size = 10),
legend.text = element_text(size = 10))
#plot.margin = margin(3, 2, 3, 2, "cm")) +
xlim(min(female_pos[ROI]), max(female_pos[ROI]))
female_pos %>% ggplot(aes(x = .data[[ROI]], y = loop_de_rad3_degree)) +
geom_point(aes(color = sex), size = 4) +
stat_smooth(aes(color = sex, group = sex), method = "lm") +
scale_color_manual(values = c(npc_saguaro[2], npc_saguaro[4]),
name = "sex") +
labs(x = paste(ROI),
y = "Degrees Traveled") +
stat_cor(method = "spearman", aes(
color = sex,
label = paste(..r.label..,..rr.label.., ..p.label.., sep = "~`,`~")
)) +
theme(
legend.position = "right",
axis.text.x = element_text(size = 25),
axis.text.y = element_text(size = 25),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),
#legend.key.size = unit(2, 'cm'),
legend.title = element_text(size = 10),
legend.text = element_text(size = 10))
plot.margin = margin(3, 2, 3, 2, "cm") +
xlim(min(female_pos[ROI]), max(female_pos[ROI]))
female_pos %>% ggplot(aes(x = .data[[ROI]], y = loop_de_rad3_degree)) +
geom_point(aes(color = sex), size = 4) +
stat_smooth(aes(color = sex, group = sex), method = "lm") +
scale_color_manual(values = c(npc_saguaro[2], npc_saguaro[4]),
name = "sex") +
labs(x = paste(ROI),
y = "Degrees Traveled") +
stat_cor(method = "spearman", aes(
color = sex,
label = paste(..r.label..,..rr.label.., ..p.label.., sep = "~`,`~")
)) +
theme(
legend.position = "right",
axis.text.x = element_text(size = 25),
axis.text.y = element_text(size = 25),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),
#legend.key.size = unit(2, 'cm'),
legend.title = element_text(size = 10),
legend.text = element_text(size = 10),
plot.margin = margin(3, 2, 3, 2, "cm")) +
xlim(min(female_pos[ROI]), max(female_pos[ROI]))
# prepping the data
female_pos <- Rad3_QA_female_pos %>% PrepforPlotting(Metric = "QA",Sex = "female",LoopVar = "loop_de_rad3_degree")
figpath <-"/Users/danielacossio/Library/CloudStorage/GoogleDrive-dcossio1@uci.edu/My Drive/White matter tract/MidlifeWM_DSI2023/DSI/loop/rad3/DE/QA/scatterplots/"
ROIcols <- colnames(female_pos[,5:length(female_pos)])
for (ROI in ROIcols) {
print(ROI)
y <-
female_pos %>% ggplot(aes(x = .data[[ROI]], y = loop_de_rad3_degree)) +
geom_point(aes(color = sex), size = 4) +
stat_smooth(aes(color = sex, group = sex), method = "lm") +
scale_color_manual(values = c(npc_saguaro[2], npc_saguaro[4]),
name = "sex") +
labs(x = paste(ROI),
y = "Degrees Traveled") +
stat_cor(method = "spearman", aes(
color = sex,
label = paste(..r.label..,..rr.label.., ..p.label.., sep = "~`,`~")
)) +
theme(
legend.position = "right",
axis.text.x = element_text(size = 15),
axis.text.y = element_text(size = 15),
axis.title = element_text(size = 20)
panel.background = element_blank(),
female_pos %>% ggplot(aes(x = .data[[ROI]], y = loop_de_rad3_degree)) +
geom_point(aes(color = sex), size = 4) +
stat_smooth(aes(color = sex, group = sex), method = "lm") +
scale_color_manual(values = c(npc_saguaro[2], npc_saguaro[4]),
name = "sex") +
labs(x = paste(ROI),
y = "Degrees Traveled") +
stat_cor(method = "spearman", aes(
color = sex,
label = paste(..r.label..,..rr.label.., ..p.label.., sep = "~`,`~")
)) +
theme(
legend.position = "right",
axis.text.x = element_text(size = 15),
axis.text.y = element_text(size = 15),
axis.title = element_text(size = 20),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),
#legend.key.size = unit(2, 'cm'),
legend.title = element_text(size = 10),
legend.text = element_text(size = 10),
plot.margin = margin(3, 2, 3, 2, "cm")) +
xlim(min(female_pos[ROI]), max(female_pos[ROI]))
# prepping the data
female_pos <- Rad3_QA_female_pos %>% PrepforPlotting(Metric = "QA",Sex = "female",LoopVar = "loop_de_rad3_degree")
figpath <-"/Users/danielacossio/Library/CloudStorage/GoogleDrive-dcossio1@uci.edu/My Drive/White matter tract/MidlifeWM_DSI2023/DSI/loop/rad3/DE/QA/scatterplots/"
ROIcols <- colnames(female_pos[,5:length(female_pos)])
for (ROI in ROIcols) {
print(ROI)
y <-
female_pos %>% ggplot(aes(x = .data[[ROI]], y = loop_de_rad3_degree)) +
geom_point(aes(color = sex), size = 4) +
stat_smooth(aes(color = sex, group = sex), method = "lm") +
scale_color_manual(values = c(npc_saguaro[2], npc_saguaro[4]),
name = "sex") +
labs(x = paste(ROI),
y = "Degrees Traveled") +
stat_cor(method = "spearman", aes(
color = sex,
label = paste(..r.label..,..rr.label.., ..p.label.., sep = "~`,`~")
)) +
theme(
legend.position = "right",
axis.text.x = element_text(size = 15),
axis.text.y = element_text(size = 15),
axis.title = element_text(size = 20),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),
#legend.key.size = unit(2, 'cm'),
legend.title = element_text(size = 10),
legend.text = element_text(size = 10),
plot.margin = margin(3, 2, 3, 2, "cm")) +
xlim(min(female_pos[ROI]), max(female_pos[ROI]))
# <!--      annotate("text", label = "FDR= 0.000576", x = 1.8 , y = 3, color="#E45A5A", size=7) +
# <!--      annotate("text", label = "FDR= 0.022854", x = 1.8 , y = 2.8, color="#80792B", size=7)
pdf(file = paste0(figpath,ROI,"QA_Rad3_DT_positive.pdf"),width=10, height=8)
print(y)
dev.off()
}
# prepping the data
female_pos <- Rad3_QA_female_pos %>% PrepforPlotting(Metric = "QA",Sex = "female",LoopVar = "loop_de_rad3_degree")
figpath <-"/Users/danielacossio/Library/CloudStorage/GoogleDrive-dcossio1@uci.edu/My Drive/White matter tract/MidlifeWM_DSI2023/DSI/loop/rad3/DE/QA/scatterplots/"
ROIcols <- colnames(female_pos[,5:length(female_pos)])
for (ROI in ROIcols) {
print(ROI)
y <-
female_pos %>% ggplot(aes(x = .data[[ROI]], y = loop_de_rad3_degree)) +
geom_point(aes(color = sex), size = 4) +
stat_smooth(aes(color = sex, group = sex), method = "lm") +
scale_color_manual(values = c(npc_saguaro[2], npc_saguaro[4]),
name = "sex") +
labs(x = "QA",
y = "Degrees Traveled",
title = paste(ROI)) +
stat_cor(method = "spearman", aes(
color = sex,
label = paste(..r.label..,..rr.label.., ..p.label.., sep = "~`,`~")
)) +
theme(
legend.position = "right",
axis.text.x = element_text(size = 15),
axis.text.y = element_text(size = 15),
axis.title = element_text(size = 20),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),
#legend.key.size = unit(2, 'cm'),
legend.title = element_text(size = 10),
legend.text = element_text(size = 10),
plot.margin = margin(3, 2, 3, 2, "cm")) +
xlim(min(female_pos[ROI]), max(female_pos[ROI]))
# <!--      annotate("text", label = "FDR= 0.000576", x = 1.8 , y = 3, color="#E45A5A", size=7) +
# <!--      annotate("text", label = "FDR= 0.022854", x = 1.8 , y = 2.8, color="#80792B", size=7)
pdf(file = paste0(figpath,ROI,"QA_Rad3_DT_positive.pdf"),width=10, height=8)
print(y)
dev.off()
}
# prepping the data
female_pos <- Rad3_QA_female_pos %>% PrepforPlotting(Metric = "QA",Sex = "female",LoopVar = "loop_de_rad3_degree")
figpath <-"/Users/danielacossio/Library/CloudStorage/GoogleDrive-dcossio1@uci.edu/My Drive/White matter tract/MidlifeWM_DSI2023/DSI/loop/rad3/DE/QA/scatterplots/"
ROIcols <- colnames(female_pos[,5:length(female_pos)])
for (ROI in ROIcols) {
print(ROI)
y <-
female_pos %>% ggplot(aes(x = .data[[ROI]], y = loop_de_rad3_degree)) +
geom_point(aes(color = sex), size = 4) +
stat_smooth(aes(color = sex, group = sex), method = "lm") +
scale_color_manual(values = c(npc_saguaro[2], npc_saguaro[4]),
name = "sex") +
labs(x = "QA",
y = "Degrees Traveled",
title = paste(ROI)) +
stat_cor(method = "spearman", aes(
color = sex,
label = paste(..r.label..,..rr.label.., ..p.label.., sep = "~`,`~")
)) +
theme(
legend.position = "right",
axis.text.x = element_text(size = 15),
axis.text.y = element_text(size = 15),
axis.title = element_text(size = 20),
plot.title = element_text(hjust = 0.5,size = 20),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),
#legend.key.size = unit(2, 'cm'),
legend.title = element_text(size = 10),
legend.text = element_text(size = 10),
plot.margin = margin(3, 2, 3, 2, "cm")) +
xlim(min(female_pos[ROI]), max(female_pos[ROI]))
# <!--      annotate("text", label = "FDR= 0.000576", x = 1.8 , y = 3, color="#E45A5A", size=7) +
# <!--      annotate("text", label = "FDR= 0.022854", x = 1.8 , y = 2.8, color="#80792B", size=7)
pdf(file = paste0(figpath,ROI,"QA_Rad3_DT_positive.pdf"),width=10, height=8)
print(y)
dev.off()
}
library(ggplot2)
#(plyr)
library(tidyverse)
# library(dplyr)
# library(tidyr)
library(stringr)
library(kableExtra)
# library(data.table)
# library(network)
# library(tidygraph)
# library(ggraph)
# library(igraph)
# library(networkD3)
# library(CINNA)
# library(umap)
# library(plotly)
#library(factoextra)
#library(lsr)
# library(car)
library(ggpubr)
#library(entropy)
#library(ds4psy)
# library(pROC)
#library(devtools)
#library(BRRR)
#library(stats)
#library(afex)
library(knitr)
library(janitor)
# library(car)
# library(ggiraph)
# library(ggiraphExtra)
# library(moonBook)
library(nationalparkcolors)
npc_everglades <- park_palette("Everglades")
npc_channel <- park_palette("ChannelIslands")
npc_saguaro <- park_palette("Saguaro")
knitr::opts_chunk$set(warning=FALSE, message=FALSE, echo = FALSE,
fig.align = "center")
Rad3_working_dir <- "/Users/danielacossio/Library/CloudStorage/GoogleDrive-dcossio1@uci.edu/My Drive/White matter tract/MidlifeWM_DSI2023/DSI/loop/rad3/DE"
Avg_working_dir <- "/Users/danielacossio/Library/CloudStorage/GoogleDrive-dcossio1@uci.edu/My Drive/White matter tract/MidlifeWM_DSI2023/DSI/loop/average/DE"
rows2grab <- c("Tract Name", "number of tracts","mean length(mm)","diameter(mm)", "volume(mm^3)")
loop_subInfo <- read.csv("/Users/danielacossio/Library/CloudStorage/GoogleDrive-dcossio1@uci.edu/My Drive/White matter tract/MidlifeWM_DSI2023/DSI/loop/loop_subinfo.csv") %>% select(c("subject_id","sex", "age_scan_years","repo_status", "loop_de_rad1_degree","loop_de_rad2_degree", "loop_de_rad3_degree","loop_de_avg_degree"))
for (row in 1:nrow(loop_subInfo)) {
if (loop_subInfo[row,2] == 0) {
loop_subInfo[row,2] <- "female"
} else {
loop_subInfo[row,2] <- "male"
}
}
VarStats <- function(Data) {
# Purpose of this function is to clean the data and then have it output the table i want
# Data is the dataframe we want to clean up
# Cleaning  up the dataframe into a new df
df <- Data %>%
remove_empty("cols") %>%
filter(V1 %in% rows2grab) %>%
t() %>%
`colnames<-`(rows2grab) %>%
`[`(-c(1),) %>%
as.data.frame()
return(
knitr::kable(df, row.names=F) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed")) %>%
scroll_box(width = "800px", height = "200px"))
}
PrepforPlotting <- function(Data,Metric,Sex,LoopVar) {
# Purpose of this function is to clean the data without me having to copy and paste everything later.
# Data = raw unclean dataframe we want to clean up
# Metric will be either MD or QA
# sex is either male or female
# Loop Var is either loop_pe_rad3_m or loop_pe_avg_m
# Let's read in our data frame
# grab  ROIcolumn names
colNames <- Data  %>% remove_empty("cols") %>%
filter(V1 == "Tract Name") %>% t() %>% `[`(-1)
# Let's grab our sub info
if (LoopVar ==  "loop_de_rad3_degree"){
subinfo <- loop_subInfo  %>% select(c("sex", "age_scan_years", LoopVar)) %>% na.omit()
}
else{
subinfo <- loop_subInfo %>% select(c("sex", "age_scan_years", LoopVar))
}
# Let's grab our values
if (Metric == "MD"){
Values <- Data %>% remove_empty("cols") %>%
filter(str_detect(V1, c("mean_md"))) %>%
`colnames<-`(c("Subjects",colNames))
}
else{
Values <- Data %>%
remove_empty("cols") %>%
filter(str_detect(V1, c("mean_qa"))) %>%
filter(!str_detect(V1, c("mean_qa_post_norm"))) %>%
`colnames<-`(c("Subjects",colNames))
}
# now let's put this together
ConvToNum <-  apply(Values[,2:length(Values)],2, as.numeric)
Values[,2:length(Values)] <- ConvToNum
cleanedDF <- cbind(subinfo,Values) %>% filter(sex== Sex)
return (cleanedDF)
}
SexDiffDF <- function(maleDF,femaleDF){
maleROIS <- colnames(maleDF)
femaleROIS <- colnames(femaleDF)
ROIS <- intersect(maleROIS,femaleROIS)
main_df <- maleDF %>% select(ROIS)
tempdf <- femaleDF %>% select(ROIS)
main_df <-rbind(main_df,tempdf)
return(main_df)
}
library(ggplot2)
#(plyr)
library(tidyverse)
# library(dplyr)
# library(tidyr)
library(stringr)
library(kableExtra)
# library(data.table)
# library(network)
# library(tidygraph)
# library(ggraph)
# library(igraph)
# library(networkD3)
# library(CINNA)
# library(umap)
# library(plotly)
#library(factoextra)
#library(lsr)
library(car)
library(ggpubr)
#library(entropy)
#library(ds4psy)
# library(pROC)
#library(devtools)
#library(BRRR)
library(stats)
#library(afex)
library(knitr)
library(janitor)
# library(car)
# library(ggiraph)
library(ggiraphExtra)
# library(moonBook)
library(nationalparkcolors)
npc_everglades <- park_palette("Everglades")
npc_channel <- park_palette("ChannelIslands")
npc_saguaro <- park_palette("Saguaro")
knitr::opts_chunk$set(warning=FALSE, message=FALSE, echo = FALSE,
fig.align = "center")
Rad3_work_dir <- "/Users/danielacossio/Library/CloudStorage/GoogleDrive-dcossio1@uci.edu/My Drive/White matter tract/MidlifeWM_DSI2023/DSI/loop/rad3/"
Avg_work_dir <- "/Users/danielacossio/Library/CloudStorage/GoogleDrive-dcossio1@uci.edu/My Drive/White matter tract/MidlifeWM_DSI2023/DSI/loop/average"
rows2grab <- c("Tract Name", "number of tracts","mean length(mm)","diameter(mm)", "volume(mm^3)")
loop_subInfo <- read.csv("/Users/danielacossio/Library/CloudStorage/GoogleDrive-dcossio1@uci.edu/My Drive/White matter tract/MidlifeWM_DSI2023/DSI/loop/loop_subinfo.csv") %>% select("subject_id", "sex", "age_scan_years", "repo_status","loop_pe_rad1_m","loop_pe_rad2_m","loop_pe_rad3_m","loop_pe_avg_m")
for (row in 1:nrow(loop_subInfo)) {
if (loop_subInfo[row,2] == 0) {
loop_subInfo[row,2] <- "female"
} else {
loop_subInfo[row,2] <- "male"
}
}
VarStats <- function(Data) {
# Purpose of this function is to clean the data and then have it output the table i want
# Data is the dataframe we want to clean up
# Cleaning  up the dataframe into a new df
df <- Data %>%
remove_empty("cols") %>%
filter(V1 %in% rows2grab) %>%
t() %>%
`colnames<-`(rows2grab) %>%
`[`(-c(1),) %>%
as.data.frame()
return(
knitr::kable(df, row.names=F) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed")) %>%
scroll_box(width = "800px", height = "200px"))
}
PrepforPlotting <- function(Data,Metric,Sex,LoopVar) {
# Purpose of this function is to clean the data without me having to copy and paste everything later.
# Data = raw unclean dataframe we want to clean up
# Metric will be either MD or QA
# sex is either male or female
# Loop Var is either loop_pe_rad3_m or loop_pe_avg_m
# Let's read in our data frame
# grab  ROIcolumn names
colNames <- Data  %>% remove_empty("cols") %>%
filter(V1 == "Tract Name") %>% t() %>% `[`(-1)
# Let's grab our sub info
if (LoopVar ==  "loop_pe_rad3_m"){
subinfo <- loop_subInfo  %>% select(c("sex", "age_scan_years", LoopVar)) %>% na.omit()
}
else{
subinfo <- loop_subInfo %>% select(c("sex", "age_scan_years", LoopVar))
}
# Let's grab our values
if (Metric == "MD"){
Values <- Data %>% remove_empty("cols") %>%
filter(str_detect(V1, c("mean_md"))) %>%
`colnames<-`(c("Subjects",colNames))
}
else{
Values <- Data %>%
remove_empty("cols") %>%
filter(str_detect(V1, c("mean_qa"))) %>%
filter(!str_detect(V1, c("mean_qa_post_norm"))) %>%
`colnames<-`(c("Subjects",colNames))
}
# now let's put this together
ConvToNum <-  apply(Values[,2:length(Values)],2, as.numeric)
Values[,2:length(Values)] <- ConvToNum
cleanedDF <- cbind(subinfo,Values) %>% filter(sex== Sex)
return (cleanedDF)
}
SexDiffDF <- function(maleDF,femaleDF){
maleROIS <- colnames(maleDF)
femaleROIS <- colnames(femaleDF)
ROIS <- intersect(maleROIS,femaleROIS)
main_df <- maleDF %>% select(ROIS)
tempdf <- femaleDF %>% select(ROIS)
main_df <-rbind(main_df,tempdf)
return(main_df)
}
