figpath <- paste0(estrogen_path, '/allscans/boxplots/')
ROIcols <- c(Est_summarystats$`Tract Name`)
# positive ROIS
for (ROI in ROIcols) {
print(ROI)
y <- Est_QA_allwks_pos_ROIs %>%
ggplot( aes(x=trimester, y=.data[[ROI]], group=trimester)) +  geom_jitter(color="black",size=0.8,alpha=0.9,width = 0.25) +
geom_boxplot(width=0.5 ,fill= c("#CF92BF", "#D1E7E6", "#A8D2C6", "#6AA390","#90A0C9")) +
scale_y_binned(n.breaks=5, nice.breaks = TRUE) +
labs(x= "Trimester", y= " QA", title =paste0(ROI) ) +
theme(axis.title.x = element_text(vjust=- 4, size = 16),
axis.title.y = element_text(vjust=8, size = 16),
axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 12),
panel.background = element_rect(fill = 'white', color='gray'),
panel.grid.major=element_line(colour='gray96'),
axis.line = element_line(colour = "black"),
plot.margin = margin(1, 2, 1, 1.5, "cm"),
plot.title = element_text(hjust = 0.5, vjust = 2, size = 16, face="bold"))
#
png(file = paste0(figpath,ROI,"_Est_QA_all_Pos.png"))
print(y)
dev.off()
}
TableOutput(Est_summarystats,"QA")
table <-  knitr::kable(Est_QA_allwks_pos_DF, row.names=F)%>%
kable_styling(bootstrap_options =  c("striped", "hover", "condensed")) %>%
scroll_box(width = "800px", height = "200px")  %>%   kableExtra::landscape()
table
table <-  knitr::kable(Est_summarystats, row.names=F)%>%
kable_styling(bootstrap_options =  c("striped", "hover", "condensed")) %>%
scroll_box(width = "800px", height = "200px")  %>%   kableExtra::landscape()
table
pdf(pdf_name, width=10, height=8)
grid.table(table,rows = NULL)
dev.off()
pdf(test, width=10, height=8)
grid.table(table,rows = NULL)
dev.off()
pdf(
"test.pdf", width=10, height=8)
grid.table(table,rows = NULL)
dev.off()
TableOutput <- function(var1,metric){
# have shiny output
table <-  knitr::kable(var1, row.names=F)%>%
kable_styling(bootstrap_options =  c("striped", "hover", "condensed")) %>%
scroll_box(width = "800px", height = "200px")
#print
pdf_name <- deparse(substitute(var1)) %>% paste0("_",metric)
pdf(pdf_name, width=10, height=8)
grid.table(table,rows = NULL)
dev.off()
}
PlotFunc <- function(data,ROI){
ggplot(data=data, aes(x=trimester, y=ROI, group=trimester)) +  geom_jitter(color="black",size=0.8,alpha=0.9,width = 0.25) +
geom_boxplot(width=0.5 ,fill= c("#CF92BF", "#D1E7E6", "#A8D2C6", "#6AA390","#90A0C9")) +
scale_y_binned(n.breaks=5, nice.breaks = TRUE) +
labs(x= "Trimester", y= " QA", title =paste0(ROI) ) +
theme(axis.title.x = element_text(vjust=- 4, size = 16),
axis.title.y = element_text(vjust=8, size = 16),
axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 12),
panel.background = element_rect(fill = 'white', color='gray'),
panel.grid.major=element_line(colour='gray96'),
axis.line = element_line(colour = "black"),
plot.margin = margin(1, 2, 1, 1.5, "cm"),
plot.title = element_text(hjust = 0.5, vjust = 2, size = 16, face="bold"))
}
TableOutput(Est_summarystats,"QA")
TableOutput <- function(var1,metric){
# have shiny output
table <-  knitr::kable(var1, row.names=F)%>%
kable_styling(bootstrap_options =  c("striped", "hover", "condensed")) %>%
scroll_box(width = "800px", height = "200px")
#print
pdf_name <- deparse(substitute(var1)) %>% paste0("_",metric,".pdf")
pdf(pdf_name, width=10, height=8)
grid.table(table,rows = NULL)
dev.off()
}
PlotFunc <- function(data,ROI){
ggplot(data=data, aes(x=trimester, y=ROI, group=trimester)) +  geom_jitter(color="black",size=0.8,alpha=0.9,width = 0.25) +
geom_boxplot(width=0.5 ,fill= c("#CF92BF", "#D1E7E6", "#A8D2C6", "#6AA390","#90A0C9")) +
scale_y_binned(n.breaks=5, nice.breaks = TRUE) +
labs(x= "Trimester", y= " QA", title =paste0(ROI) ) +
theme(axis.title.x = element_text(vjust=- 4, size = 16),
axis.title.y = element_text(vjust=8, size = 16),
axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 12),
panel.background = element_rect(fill = 'white', color='gray'),
panel.grid.major=element_line(colour='gray96'),
axis.line = element_line(colour = "black"),
plot.margin = margin(1, 2, 1, 1.5, "cm"),
plot.title = element_text(hjust = 0.5, vjust = 2, size = 16, face="bold"))
}
Est_subinfo <-subinfo_DF %>% select("new scan name","Estrogen","Trimester") %>% na.omit()
# Lets read in one main df and clean from there
Est_QA_allwks_pos_DF <-read.delim(paste0(estrogen_path, '/allscans/Est_qa_allscans_pos.csv'), header=FALSE, sep="\t") %>% as.data.frame() %>% janitor::remove_empty( which = "cols")
# ALl weeks
Est_summarystats <- Est_QA_allwks_pos_DF %>%filter(V1 %in% rows2grab) %>% t() %>% `colnames<-`(rows2grab)  %>%  `[`(-c(1),) %>% as.data.frame()
Est_QA_allwks_pos_ROIs <- Est_QA_allwks_pos_DF %>%
filter(str_detect(V1, c("mean_qa"))) %>%
filter(!str_detect(V1, c("mean_qa_post_norm"))) %>% `colnames<-`(c("Subjects", as.character(Est_summarystats[,1])))
# Need to create a loop fix the subject IDs to match
for (sub in 1:nrow((Est_QA_allwks_pos_ROIs))) {
clean_subnum <- str_split(Est_QA_allwks_pos_ROIs$Subjects[sub], "_")[[1]][1]  %>% str_split("-") %>% as.data.frame() %>% `[`(2,)
Est_QA_allwks_pos_ROIs$Subjects[sub] <-  sub("^0+", "", clean_subnum)
}
# now we cab grab the right subs
Est_QA_allwks_pos_ROIs <- Est_QA_allwks_pos_ROIs %>% filter(Subjects %in% Est_subinfo$`new scan name`) %>%  mutate(trimester = factor(Est_subinfo$Trimester, levels= c('Pre','1st','2nd', '3rd', 'Post'))) %>% mutate(estrogen = Est_subinfo$Estrogen)
# change to numeric
Est_QA_allwks_pos_ROIs[,c(Est_summarystats[,1])] <- as.numeric(unlist(Est_QA_allwks_pos_ROIs[,c(Est_summarystats[,1])]))
TableOutput(Est_summarystats,"QA")
table <-  knitr::kable(Est_summarystats, row.names=F)%>%
kable_styling(bootstrap_options =  c("striped", "hover", "condensed")) %>%
scroll_box(width = "800px", height = "200px")
table <-  knitr::kable(Est_summarystats, row.names=F)%>%
kable_styling(bootstrap_options =  c("striped", "hover", "condensed")) %>%
scroll_box(width = "800px", height = "200px")
#print
pdf_name <- deparse(substitute(Est_summarystats)) %>% paste0("_QA.pdf")
pdf(pdf_name, width=10, height=8)
grid.table(table,rows = NULL)
dev.off()
knitr::kable(Est_summarystats, row.names=F)%>%
kable_styling(bootstrap_options =  c("striped", "hover", "condensed")) %>%
scroll_box(width = "800px", height = "200px")
pdf_name <- deparse(substitute(Est_summarystats)) %>% paste0("_QA.pdf")
pdf(pdf_name, width=10, height=8)
grid.table(Est_summarystats,rows = NULL)
dev.off()
TableOutput <- function(var1,metric){
# have shiny output
knitr::kable(var1, row.names=F)%>%
kable_styling(bootstrap_options =  c("striped", "hover", "condensed")) %>%
scroll_box(width = "800px", height = "200px")
#print
pdf_name <- deparse(substitute(var1)) %>% paste0("_",metric,".pdf")
pdf(pdf_name, width=10, height=8)
grid.table(var1,rows = NULL)
dev.off()
}
PlotFunc <- function(data,ROI){
ggplot(data=data, aes(x=trimester, y=ROI, group=trimester)) +  geom_jitter(color="black",size=0.8,alpha=0.9,width = 0.25) +
geom_boxplot(width=0.5 ,fill= c("#CF92BF", "#D1E7E6", "#A8D2C6", "#6AA390","#90A0C9")) +
scale_y_binned(n.breaks=5, nice.breaks = TRUE) +
labs(x= "Trimester", y= " QA", title =paste0(ROI) ) +
theme(axis.title.x = element_text(vjust=- 4, size = 16),
axis.title.y = element_text(vjust=8, size = 16),
axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 12),
panel.background = element_rect(fill = 'white', color='gray'),
panel.grid.major=element_line(colour='gray96'),
axis.line = element_line(colour = "black"),
plot.margin = margin(1, 2, 1, 1.5, "cm"),
plot.title = element_text(hjust = 0.5, vjust = 2, size = 16, face="bold"))
}
TableOutput(Est_summarystats,"QA")
TableOutput <- function(var1,metric){
# have shiny output
knitr::kable(var1, row.names=F)%>%
kable_styling(bootstrap_options =  c("striped", "hover", "condensed")) %>%
scroll_box(width = "800px", height = "200px")
#print
pdf_name <- deparse(substitute(var1)) %>% paste0("_",metric,".pdf")
pdf(pdf_name, width=20, height=15)
grid.table(var1,rows = NULL)
dev.off()
}
PlotFunc <- function(data,ROI){
ggplot(data=data, aes(x=trimester, y=ROI, group=trimester)) +  geom_jitter(color="black",size=0.8,alpha=0.9,width = 0.25) +
geom_boxplot(width=0.5 ,fill= c("#CF92BF", "#D1E7E6", "#A8D2C6", "#6AA390","#90A0C9")) +
scale_y_binned(n.breaks=5, nice.breaks = TRUE) +
labs(x= "Trimester", y= " QA", title =paste0(ROI) ) +
theme(axis.title.x = element_text(vjust=- 4, size = 16),
axis.title.y = element_text(vjust=8, size = 16),
axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 12),
panel.background = element_rect(fill = 'white', color='gray'),
panel.grid.major=element_line(colour='gray96'),
axis.line = element_line(colour = "black"),
plot.margin = margin(1, 2, 1, 1.5, "cm"),
plot.title = element_text(hjust = 0.5, vjust = 2, size = 16, face="bold"))
}
TableOutput <- function(var1,metric){
# have shiny output
table <- knitr::kable(var1, row.names=F)%>%
kable_styling(bootstrap_options =  c("striped", "hover", "condensed")) %>%
scroll_box(width = "800px", height = "200px")
#print
pdf_name <- deparse(substitute(var1)) %>% paste0("_",metric,".pdf")
pdf(pdf_name, width=15, height=12)
grid.table(var1,rows = NULL)
dev.off()
return(table))
TableOutput <- function(var1,metric){
# have shiny output
table <- knitr::kable(var1, row.names=F)%>%
kable_styling(bootstrap_options =  c("striped", "hover", "condensed")) %>%
scroll_box(width = "800px", height = "200px")
#print
pdf_name <- deparse(substitute(var1)) %>% paste0("_",metric,".pdf")
pdf(pdf_name, width=15, height=12)
grid.table(var1,rows = NULL)
dev.off()
return(table)
}
PlotFunc <- function(data,ROI){
ggplot(data=data, aes(x=trimester, y=ROI, group=trimester)) +  geom_jitter(color="black",size=0.8,alpha=0.9,width = 0.25) +
geom_boxplot(width=0.5 ,fill= c("#CF92BF", "#D1E7E6", "#A8D2C6", "#6AA390","#90A0C9")) +
scale_y_binned(n.breaks=5, nice.breaks = TRUE) +
labs(x= "Trimester", y= " QA", title =paste0(ROI) ) +
theme(axis.title.x = element_text(vjust=- 4, size = 16),
axis.title.y = element_text(vjust=8, size = 16),
axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 12),
panel.background = element_rect(fill = 'white', color='gray'),
panel.grid.major=element_line(colour='gray96'),
axis.line = element_line(colour = "black"),
plot.margin = margin(1, 2, 1, 1.5, "cm"),
plot.title = element_text(hjust = 0.5, vjust = 2, size = 16, face="bold"))
}
TableOutput(Prog_summarystats,"QA")
TableOutput(Est_summarystats,"QA")
QA_master_DF <- read.csv(paste0(tract_workdir,"/QA_master_DF.csv")) %>% filter(!(subjects %in% c("sub-026", "sub-027")))
# Tractography working dir
tract_workdir <-"/Users/danielacossio/Library/CloudStorage/GoogleDrive-dcossio1@uci.edu/My Drive/28andB/tractography"
AllScanInfo <- read.csv(paste0(tract_workdir,"/allscansInfo.csv"), header=TRUE) %>% `colnames<-`(c("scans","gest_week","Trimester")) %>%  filter(!(scans %in% c("26", "27")))
AllScanInfo$scans <- lapply(AllScanInfo$scans, sprintf, fmt = "%03d")
AllScanInfo <- ChangeTrimesterLabels(AllScanInfo)
ROIS <- read.table(paste0(tract_workdir,"/HCp842ROIS.txt")) %>% filter(V1 !="CNX_R")
# Below is the combining and merging code. I exported as cvs so i wont re run it again
# subfiles <- list.dirs(path = tract_workdir, full.names = FALSE,recursive = FALSE)
#
# QA_master_DF <- as.data.frame(matrix(ncol = nrow(ROIS)+1, nrow = length(subfiles)))
# MD_master_DF<- as.data.frame(matrix(ncol = nrow(ROIS)+1, nrow = length(subfiles)))
#
# for(sub in 1:length(subfiles)){
#
#    print(paste("running subject",subfiles[sub]))
#
#   md_df <- as.data.frame(matrix(ncol = nrow(ROIS)+1, nrow = 1))
#   md_df[,1] <- subfiles[sub]
#
#   qa_df <- as.data.frame(matrix(ncol = nrow(ROIS)+1, nrow = 1))
#   qa_df[,1] <- subfiles[sub]
#
#   for ( roi in 1:nrow(ROIS)){
#
#   print(paste("running ",ROIS[roi,1]))
#
#     # Check if CSV exists
#     CSV_path <- paste0(tract_workdir,"/",subfiles[sub],"/",ROIS[roi,1],".stat.csv")
#
#     if (file.exists(CSV_path) == TRUE){
#
#       print("File Exists lets read it in")
#       ROI_csv <- read.delim(paste0(tract_workdir,"/",subfiles[sub],"/",ROIS[roi,1],".stat.csv"), header=FALSE, sep="\t") %>% filter(V1 %in% c("qa","md"))
#       qa_df[,roi+1] <- ROI_csv %>% filter(V1 =="qa") %>% pull(V2)
#       md_df[,roi+1] <- ROI_csv %>% filter(V1 =="md") %>% pull(V2)
#     }
#     else{
#       print("File does not exist. Add NA instead")
#
#       qa_df[,roi+1] <- NA
#       md_df[,roi+1] <- NA
#
#     }
#
#   }
#
#   QA_master_DF[sub,] <- qa_df[1,]
#   MD_master_DF[sub,] <- md_df[1,]
# }
#
# colnames(QA_master_DF) <- c("subjects",ROIS$V1)
# colnames(MD_master_DF) <- c("subjects",ROIS$V1)
#
# QA_master_DF <- QA_master_DF %>% filter(.$subjects != "boxplots")
#
# MD_master_DF <- MD_master_DF %>% filter(.$subjects != "boxplots")
#
# write.csv(QA_master_DF, paste0(tract_workdir,"/QA_master_DF.csv"), row.names=FALSE)
# write.csv(MD_master_DF, paste0(tract_workdir,"/MD_master_DF.csv"), row.names=FALSE)
QA_master_DF <- read.csv(paste0(tract_workdir,"/QA_master_DF.csv")) %>% filter(!(subjects %in% c("sub-026", "sub-027")))
MD_master_DF<- read.csv(paste0(tract_workdir,"/QA_master_DF.csv"))%>% filter(!(subjects %in% c("sub-026", "sub-027")))
QA_scans <- QA_master_DF %>%  mutate(trimester = factor(AllScanInfo$Trimester, levels= c('Pre','1st','2nd', '3rd', 'Post')))
for (ROI in 2:nrow(ROIS)) {
print(ROI)
roiname <- stringr::str_split_1(ROIS[ROI,1], '_') %>% paste(collapse=' ')
y <- ROIS[ROI,1]
QAplot <- QA_scans %>%
ggplot(aes(x = trimester, y = QA_scans[, ROI], group = trimester)) +
#geom_jitter(color = "black",size = 0.8, alpha = 0.9,width = 0.25) +
geom_boxplot(width = 0.5 , fill = grp_colors) +
scale_y_binned(n.breaks=10, nice.breaks = TRUE) +
labs(x = "Trimester", y = "QA", title = roiname) +
theme(
strip.text.x = element_text(
size = 12,
color = "black",
face = "bold.italic"
),
strip.text.y = element_text(
size = 12,
color = "black",
face = "bold.italic"
)
) + xlab("Trimester") + ylab("QA") +
theme(axis.title.x = element_text(vjust=- 4, size = 16),
axis.title.y = element_text(vjust=8, size = 16),
axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 12),
panel.background = element_rect(fill = 'white', color='gray'),
panel.grid.major=element_line(colour='gray96'),
axis.line = element_line(colour = "black"),
plot.margin = margin(1, 2, 1, 1.5, "cm"),
plot.title = element_text(hjust = 0.5, vjust = 2, size = 16, face="bold"))+ theme(legend.position = "none")
#
pdf(file = paste0(tract_workdir,"/boxplots/QA/",y,"_QA.pdf"),width=10, height=8)
print(QAplot)
dev.off()
}
QA_master_DF <- read.csv(paste0(tract_workdir,"/QA_master_DF.csv")) %>% filter(!(subjects %in% c("sub-026", "sub-027")))
MD_master_DF<- read.csv(paste0(tract_workdir,"/QA_master_DF.csv"))%>% filter(!(subjects %in% c("sub-026", "sub-027")))
QA_scans <- QA_master_DF %>%  mutate(trimester = factor(AllScanInfo$Trimester, levels= c('Pre','1st','2nd', '3rd', 'Post')))
for (ROI in 2:nrow(ROIS)) {
print(ROI)
roiname <- stringr::str_split_1(ROIS[ROI,1], '_') %>% paste(collapse=' ')
y <- ROIS[ROI,1]
QAplot <- QA_scans %>%
ggplot(aes(x = trimester, y = QA_scans[, ROI], group = trimester)) +
#geom_jitter(color = "black",size = 0.8, alpha = 0.9,width = 0.25) +
geom_boxplot(width = 0.5 , fill = grp_colors) +
scale_y_binned(n.breaks=10, nice.breaks = TRUE) +
labs(x = "Trimester", y = "QA", title = roiname) +
theme(
strip.text.x = element_text(
size = 12,
color = "black",
face = "bold.italic"
),
strip.text.y = element_text(
size = 12,
color = "black",
face = "bold.italic"
)
) + xlab("Trimester") + ylab("QA") +
theme(axis.title.x = element_text(vjust=- 4, size = 16),
axis.title.y = element_text(vjust=8, size = 16),
axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 12),
panel.background = element_rect(fill = 'white', color='gray'),
panel.grid.major=element_line(colour='gray90'),
axis.line = element_line(colour = "black"),
plot.margin = margin(1, 2, 1, 1.5, "cm"),
plot.title = element_text(hjust = 0.5, vjust = 2, size = 16, face="bold"))+ theme(legend.position = "none")
#
pdf(file = paste0(tract_workdir,"/boxplots/QA/",y,"_QA.pdf"),width=10, height=8)
print(QAplot)
dev.off()
}
TableOutput(Prog_summarystats,"QA")
Prog_subinfo <-subinfo_DF %>% select("new scan name","Progesterone","Trimester") %>% na.omit()
# Lets read in one main df and clean from there
Prog_QA_allwks_pos_DF <-read.delim(paste0(Prog_path,'/allscans/QA_prog_pos_allscans.csv'), header=FALSE, sep="\t") %>% as.data.frame() %>% janitor::remove_empty( which = "cols")
# Splitting up the big data frame into summary stats
Prog_summarystats <- Prog_QA_allwks_pos_DF %>%filter(V1 %in% rows2grab) %>% t() %>% `colnames<-`(rows2grab)  %>%  `[`(-c(1),) %>% as.data.frame()
# and QA metrics
Prog_QA_allwks_pos_ROIs <- Prog_QA_allwks_pos_DF %>%
filter(str_detect(V1, c("mean_qa"))) %>%
filter(!str_detect(V1, c("mean_qa_post_norm"))) %>% `colnames<-`(c("Subjects", as.character(Prog_summarystats[,1])))
# Need to create a loop fix the subject IDs to match
for (sub in 1:nrow((Prog_QA_allwks_pos_ROIs))) {
clean_subnum <- str_split(Prog_QA_allwks_pos_ROIs$Subjects[sub], "_")[[1]][1]  %>% str_split("-") %>% as.data.frame() %>% `[`(2,)
Prog_QA_allwks_pos_ROIs$Subjects[sub] <-  sub("^0+", "", clean_subnum)
}
# now we cab grab the right subs
Prog_QA_allwks_pos_ROIs <- Prog_QA_allwks_pos_ROIs %>% filter(Subjects %in% Prog_subinfo$`new scan name`) %>%  mutate(trimester = factor(Prog_subinfo$Trimester, levels= c('Pre','1st','2nd', '3rd', 'Post'))) %>% mutate(progesterone = Prog_subinfo$Progesterone)
# change to numeric
Prog_QA_allwks_pos_ROIs[,c(Prog_summarystats[,1])] <- as.numeric(unlist(Prog_QA_allwks_pos_ROIs[,c(Prog_summarystats[,1])]))
# let's create a check for things
TestVars <- sample(c(Prog_summarystats[,1]), size=1)
if (is.numeric(Prog_QA_allwks_pos_ROIs[,c(TestVars)])){
print(" Looks good")
} else {
print("ERROR")
}
TableOutput(Prog_summarystats,"QA")
# Tractography working dir
tract_workdir <-"/Users/danielacossio/Library/CloudStorage/GoogleDrive-dcossio1@uci.edu/My Drive/28andB/tractography"
AllScanInfo <- read.csv(paste0(tract_workdir,"/allscansInfo.csv"), header=TRUE) %>% `colnames<-`(c("scans","gest_week","Trimester")) %>%  filter(!(scans %in% c("26", "27")))
# Tractography working dir
tract_workdir <-"/Users/danielacossio/Library/CloudStorage/GoogleDrive-dcossio1@uci.edu/My Drive/28andB/ROITractography"
AllScanInfo <- read.csv(paste0(tract_workdir,"/allscansInfo.csv"), header=TRUE) %>% `colnames<-`(c("scans","gest_week","Trimester")) %>%  filter(!(scans %in% c("26", "27")))
AllScanInfo$scans <- lapply(AllScanInfo$scans, sprintf, fmt = "%03d")
AllScanInfo <- ChangeTrimesterLabels(AllScanInfo)
ROIS <- read.table(paste0(tract_workdir,"/HCp842ROIS.txt")) %>% filter(V1 !="CNX_R")
# Below is the combining and merging code. I exported as cvs so i wont re run it again
# subfiles <- list.dirs(path = tract_workdir, full.names = FALSE,recursive = FALSE)
#
# QA_master_DF <- as.data.frame(matrix(ncol = nrow(ROIS)+1, nrow = length(subfiles)))
# MD_master_DF<- as.data.frame(matrix(ncol = nrow(ROIS)+1, nrow = length(subfiles)))
#
# for(sub in 1:length(subfiles)){
#
#    print(paste("running subject",subfiles[sub]))
#
#   md_df <- as.data.frame(matrix(ncol = nrow(ROIS)+1, nrow = 1))
#   md_df[,1] <- subfiles[sub]
#
#   qa_df <- as.data.frame(matrix(ncol = nrow(ROIS)+1, nrow = 1))
#   qa_df[,1] <- subfiles[sub]
#
#   for ( roi in 1:nrow(ROIS)){
#
#   print(paste("running ",ROIS[roi,1]))
#
#     # Check if CSV exists
#     CSV_path <- paste0(tract_workdir,"/",subfiles[sub],"/",ROIS[roi,1],".stat.csv")
#
#     if (file.exists(CSV_path) == TRUE){
#
#       print("File Exists lets read it in")
#       ROI_csv <- read.delim(paste0(tract_workdir,"/",subfiles[sub],"/",ROIS[roi,1],".stat.csv"), header=FALSE, sep="\t") %>% filter(V1 %in% c("qa","md"))
#       qa_df[,roi+1] <- ROI_csv %>% filter(V1 =="qa") %>% pull(V2)
#       md_df[,roi+1] <- ROI_csv %>% filter(V1 =="md") %>% pull(V2)
#     }
#     else{
#       print("File does not exist. Add NA instead")
#
#       qa_df[,roi+1] <- NA
#       md_df[,roi+1] <- NA
#
#     }
#
#   }
#
#   QA_master_DF[sub,] <- qa_df[1,]
#   MD_master_DF[sub,] <- md_df[1,]
# }
#
# colnames(QA_master_DF) <- c("subjects",ROIS$V1)
# colnames(MD_master_DF) <- c("subjects",ROIS$V1)
#
# QA_master_DF <- QA_master_DF %>% filter(.$subjects != "boxplots")
#
# MD_master_DF <- MD_master_DF %>% filter(.$subjects != "boxplots")
#
# write.csv(QA_master_DF, paste0(tract_workdir,"/QA_master_DF.csv"), row.names=FALSE)
# write.csv(MD_master_DF, paste0(tract_workdir,"/MD_master_DF.csv"), row.names=FALSE)
View(subinfo_DF)
# Tractography working dir
tract_workdir <-"/Users/danielacossio/Library/CloudStorage/GoogleDrive-dcossio1@uci.edu/My Drive/28andB/ROITractography"
AllScanInfo <- read.csv(paste0(tract_workdir,"/allscansInfo.csv"), header=TRUE) %>% `colnames<-`(c("scans","gest_week","Trimester")) %>%  filter(!(scans %in% c("26", "27")))
AllScanInfo$scans <- lapply(AllScanInfo$scans, sprintf, fmt = "%03d")
AllScanInfo <- ChangeTrimesterLabels(AllScanInfo)
ROIS <- read.table(paste0(tract_workdir,"/HCp842ROIS.txt")) %>% filter(V1 !="CNX_R")
# Below is the combining and merging code. I exported as cvs so i wont re run it again
# subfiles <- list.dirs(path = tract_workdir, full.names = FALSE,recursive = FALSE)
#
# QA_master_DF <- as.data.frame(matrix(ncol = nrow(ROIS)+1, nrow = length(subfiles)))
# MD_master_DF<- as.data.frame(matrix(ncol = nrow(ROIS)+1, nrow = length(subfiles)))
#
# for(sub in 1:length(subfiles)){
#
#    print(paste("running subject",subfiles[sub]))
#
#   md_df <- as.data.frame(matrix(ncol = nrow(ROIS)+1, nrow = 1))
#   md_df[,1] <- subfiles[sub]
#
#   qa_df <- as.data.frame(matrix(ncol = nrow(ROIS)+1, nrow = 1))
#   qa_df[,1] <- subfiles[sub]
#
#   for ( roi in 1:nrow(ROIS)){
#
#   print(paste("running ",ROIS[roi,1]))
#
#     # Check if CSV exists
#     CSV_path <- paste0(tract_workdir,"/",subfiles[sub],"/",ROIS[roi,1],".stat.csv")
#
#     if (file.exists(CSV_path) == TRUE){
#
#       print("File Exists lets read it in")
#       ROI_csv <- read.delim(paste0(tract_workdir,"/",subfiles[sub],"/",ROIS[roi,1],".stat.csv"), header=FALSE, sep="\t") %>% filter(V1 %in% c("qa","md"))
#       qa_df[,roi+1] <- ROI_csv %>% filter(V1 =="qa") %>% pull(V2)
#       md_df[,roi+1] <- ROI_csv %>% filter(V1 =="md") %>% pull(V2)
#     }
#     else{
#       print("File does not exist. Add NA instead")
#
#       qa_df[,roi+1] <- NA
#       md_df[,roi+1] <- NA
#
#     }
#
#   }
#
#   QA_master_DF[sub,] <- qa_df[1,]
#   MD_master_DF[sub,] <- md_df[1,]
# }
#
# colnames(QA_master_DF) <- c("subjects",ROIS$V1)
# colnames(MD_master_DF) <- c("subjects",ROIS$V1)
#
# QA_master_DF <- QA_master_DF %>% filter(.$subjects != "boxplots")
#
# MD_master_DF <- MD_master_DF %>% filter(.$subjects != "boxplots")
#
# write.csv(QA_master_DF, paste0(tract_workdir,"/QA_master_DF.csv"), row.names=FALSE)
# write.csv(MD_master_DF, paste0(tract_workdir,"/MD_master_DF.csv"), row.names=FALSE)
