scale_color_manual(
values = c("#CF92BF", "#D1E7E6", "#A8D2C6", "##90A0C9"),
name = "Gestational Week"
) +
labs(x = paste(ROI,"_",stage),
y = "progesterone") +
theme(
legend.position = "right",
panel.background = element_blank(),
axis.line = element_line(colour = "black")
) +
stat_cor(method = "spearman", aes(label = paste(..rr.label.., ..p.label.., sep = "~`,`~")))
Gest_QA_pos_ROIs %>% ggplot( aes(x = .data[[ROI]], y = Gestational)) +
geom_point(aes(color = trimester, size=10)) +
stat_smooth(method = "lm", color= "#6AA390") +
scale_color_manual(
values = c("#CF92BF", "#D1E7E6", "#A8D2C6", "#90A0C9"),
name = "Gestational Week"
) +
labs(x = paste(ROI,"_",stage),
y = "progesterone") +
theme(
legend.position = "right",
panel.background = element_blank(),
axis.line = element_line(colour = "black")
) +
stat_cor(method = "spearman", aes(label = paste(..rr.label.., ..p.label.., sep = "~`,`~")))
Gest_QA_pos_ROIs %>% ggplot( aes(x = .data[[ROI]], y = Gestational)) +
geom_point(aes(color = trimester), size=10) +
stat_smooth(method = "lm", color= "#6AA390") +
scale_color_manual(
values = c("#CF92BF", "#D1E7E6", "#A8D2C6", "#90A0C9"),
name = "Gestational Week"
) +
labs(x = paste(ROI,"_",stage),
y = "progesterone") +
theme(
legend.position = "right",
panel.background = element_blank(),
axis.line = element_line(colour = "black")
) +
stat_cor(method = "spearman", aes(label = paste(..rr.label.., ..p.label.., sep = "~`,`~")))
ggplot( aes(x = .data[[ROI]], y = Gestational)) +
geom_point(aes(color = trimester), size=5) +
stat_smooth(method = "lm", color= "#6AA390") +
scale_color_manual(
values = c("#CF92BF", "#D1E7E6", "#A8D2C6", "#90A0C9"),
name = "Gestational Week"
) +
labs(x = paste(ROI,"_",stage),
y = "progesterone") +
theme(
legend.position = "right",
panel.background = element_blank(),
axis.line = element_line(colour = "black")
) +
stat_cor(method = "spearman", aes(label = paste(..rr.label.., ..p.label.., sep = "~`,`~")))
Gest_QA_pos_ROIs %>% ggplot( aes(x = .data[[ROI]], y = Gestational)) +
geom_point(aes(color = trimester), size=5) +
stat_smooth(method = "lm", color= "#6AA390") +
scale_color_manual(
values = c("#CF92BF", "#D1E7E6", "#A8D2C6", "#90A0C9"),
name = "Gestational Week"
) +
labs(x = paste(ROI,"_",stage),
y = "progesterone") +
theme(
legend.position = "right",
panel.background = element_blank(),
axis.line = element_line(colour = "black")
) +
stat_cor(method = "spearman", aes(label = paste(..rr.label.., ..p.label.., sep = "~`,`~")))
Gest_QA_pos_ROIs %>% ggplot( aes(x = .data[[ROI]], y = Gestational)) +
geom_point(aes(color = trimester), size=5) +
stat_smooth(method = "lm", color= "#6AA390") +
scale_color_manual(
values = c("#CF92BF", "#D1E7E6", "#A8D2C6", "#90A0C9"),
name = "Gestational Week"
) +
labs(x = paste(ROI,"_",stage),
y = "Gestational Week") +
theme(
legend.position = "right",
panel.background = element_blank(),
axis.line = element_line(colour = "black")
) +
stat_cor(method = "spearman", aes(label = paste(..rr.label.., ..p.label.., sep = "~`,`~")))+
xlim(0.5, 40)
Gest_QA_pos_ROIs %>% ggplot( aes(x = .data[[ROI]], y = Gestational)) +
geom_point(aes(color = trimester), size=5) +
stat_smooth(method = "lm", color= "#6AA390") +
scale_color_manual(
values = c("#CF92BF", "#D1E7E6", "#A8D2C6", "#90A0C9"),
name = "Gestational Week"
) +
labs(x = paste(ROI,"_",stage),
y = "Gestational Week") +
theme(
legend.position = "right",
panel.background = element_blank(),
axis.line = element_line(colour = "black")
) +
stat_cor(method = "spearman", aes(label = paste(..rr.label.., ..p.label.., sep = "~`,`~")))+
xlim(0.5, 40)  +
scale_x_continuous(n.breaks = 3)
ROIcols <- c(Gest_summarystats$`Tract Name`)
for (ROI in ROIcols) {
print(ROI)
y <- Gest_QA_pos_ROIs %>%
ggplot( aes(x=trimester, y=.data[[ROI]], group=trimester)) +  geom_jitter(color="black",size=0.8,alpha=0.9,width = 0.25) +
geom_boxplot(width=0.5 ,fill= c("#CF92BF", "#D1E7E6", "#A8D2C6", "#6AA390")) +
scale_y_binned(n.breaks=10, nice.breaks = TRUE) +
labs(x= "Trimester", y= " QA", title =paste0(ROI) ) +
theme(axis.title.x = element_text(vjust=- 4, size = 16),
axis.title.y = element_text(vjust=8, size = 16),
axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 12),
panel.background =element_blank(),
axis.line = element_line(colour = "black"),
plot.margin = margin(1, 2, 1, 1.5, "cm"),
plot.title = element_text(hjust = 0.5, vjust = 2, size = 16, face="bold"))
#
png(file = paste0(Gest_path,"/boxplots/",ROI,"_Gestwks_Pos_QA.png"))
print(y)
dev.off()
}
ROIcols <- c(Gest_summarystats$`Tract Name`)
for (ROI in ROIcols) {
z <- Gest_QA_pos_ROIs %>% ggplot( aes(x = .data[[ROI]], y = Gestational)) +
geom_point(aes(color = trimester), size=5) +
stat_smooth(method = "lm", color= "#6AA390") +
scale_color_manual(
values = c("#CF92BF", "#D1E7E6", "#A8D2C6", "#90A0C9"),
name = "Gestational Week"
) +
labs(x = paste(ROI,"_",stage),
y = "Gestational Week") +
theme(
legend.position = "right",
panel.background = element_blank(),
axis.line = element_line(colour = "black")
) +
stat_cor(method = "spearman", aes(label = paste(..rr.label.., ..p.label.., sep = "~`,`~")))+
xlim(0.5, 40)  +
scale_x_continuous(n.breaks = 3)
png(file = paste0(Gest_path,"/scatterplots/",ROI,"_Gestwks_Pos_QA.png"))
print(z)
dev.off()
}
library(ggplot2)
#(plyr)
library(tidyverse)
# library(dplyr)
# library(tidyr)
library(stringr)
library(kableExtra)
# library(data.table)
# library(network)
# library(tidygraph)
# library(ggraph)
# library(igraph)
# library(networkD3)
# library(CINNA)
# library(umap)
# library(plotly)
#library(factoextra)
#library(lsr)
# library(car)
library(ggpubr)
#library(entropy)
#library(ds4psy)
# library(pROC)
#library(devtools)
#library(BRRR)
#library(stats)
#library(afex)
library(knitr)
knitr::opts_chunk$set(warning=FALSE, message=FALSE, echo = FALSE,
fig.align = "center")
# working directory to data
estrogen_path <- "/Users/danielacossio/Library/CloudStorage/GoogleDrive-dcossio1@uci.edu/My Drive/28andB/PublicationRerun/QA/Estrogen"
Prog_path <- "/Users/danielacossio/Library/CloudStorage/GoogleDrive-dcossio1@uci.edu/My Drive/28andB/PublicationRerun/QA/Progesterone"
Gest_path <- "/Users/danielacossio/Library/CloudStorage/GoogleDrive-dcossio1@uci.edu/My Drive/28andB/PublicationRerun/QA/gestweek"
rows2grab <- c("Tract Name", "number of tracts","mean length(mm)","diameter(mm)", "volume(mm^3)")
# REading in subject info for each analysis
# Read in main df
subinfo_DF <- read_csv('/Users/danielacossio/Library/CloudStorage/GoogleDrive-dcossio1@uci.edu/My Drive/28andB/PublicationRerun/QA/Demographics.csv')
# changing all trimester to labels
for (row in 1:nrow(subinfo_DF)){
if(subinfo_DF$Trimester[row] == 0){
subinfo_DF$Trimester[row] <- c("Pre")
}
if(subinfo_DF$Trimester[row] == 1){
subinfo_DF$Trimester[row] <- c("1st")
}
if(subinfo_DF$Trimester[row] == 2){
subinfo_DF$Trimester[row] <- c("2nd")
}
if(subinfo_DF$Trimester[row] == 3){
subinfo_DF$Trimester[row] <- c("3rd")
}
if(subinfo_DF$Trimester[row] == 4){
subinfo_DF$Trimester[row] <- c("Post")
}
}
Est_subinfo <-subinfo_DF %>% select("new scan name","Estrogen","Trimester") %>% na.omit()
# Lets read in one main df and clean from there
Est_QA_allwks_pos_DF <-read.delim(paste0(estrogen_path, '/allscans/Est_qa_allscans_pos.csv'), header=FALSE, sep="\t") %>% as.data.frame() %>% janitor::remove_empty( which = "cols")
# ALl weeks
Est_summarystats <- Est_QA_allwks_pos_DF %>%filter(V1 %in% rows2grab) %>% t() %>% `colnames<-`(rows2grab)  %>%  `[`(-c(1),) %>% as.data.frame()
Est_QA_allwks_pos_ROIs <- Est_QA_allwks_pos_DF %>%
filter(str_detect(V1, c("mean_qa"))) %>%
filter(!str_detect(V1, c("mean_qa_post_norm"))) %>% `colnames<-`(c("Subjects", as.character(Est_summarystats[,1])))
# Need to create a loop fix the subject IDs to match
for (sub in 1:nrow((Est_QA_allwks_pos_ROIs))) {
clean_subnum <- str_split(Est_QA_allwks_pos_ROIs$Subjects[sub], "_")[[1]][1]  %>% str_split("-") %>% as.data.frame() %>% `[`(2,)
Est_QA_allwks_pos_ROIs$Subjects[sub] <-  sub("^0+", "", clean_subnum)
}
# now we cab grab the right subs
Est_QA_allwks_pos_ROIs <- Est_QA_allwks_pos_ROIs %>% filter(Subjects %in% Est_subinfo$`new scan name`) %>%  mutate(trimester = factor(Est_subinfo$Trimester, levels= c('Pre','1st','2nd', '3rd', 'Post'))) %>% mutate(estrogen = Est_subinfo$Estrogen)
# change to numeric
Est_QA_allwks_pos_ROIs[,c(Est_summarystats[,1])] <- as.numeric(unlist(Est_QA_allwks_pos_ROIs[,c(Est_summarystats[,1])]))
figpath <- paste0(estrogen_path, '/allscans/')
ROIcols <- c(Est_summarystats$`Tract Name`)
# positive ROIS
for (ROI in ROIcols) {
print(ROI)
y <- Est_QA_allwks_pos_ROIs %>%
ggplot( aes(x=trimester, y=.data[[ROI]], group=trimester)) +  geom_jitter(color="black",size=0.8,alpha=0.9,width = 0.25) +
geom_boxplot(width=0.5 ,fill= c("#CF92BF", "#D1E7E6", "#A8D2C6", "#6AA390","#90A0C9")) +
scale_y_binned(n.breaks=15, nice.breaks = TRUE) +
labs(x= "Trimester", y= " QA", title =paste0(ROI) ) +
theme(axis.title.x = element_text(vjust=- 4, size = 16),
axis.title.y = element_text(vjust=8, size = 16),
axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 12),
panel.background =element_blank(),
axis.line = element_line(colour = "black"),
plot.margin = margin(1, 2, 1, 1.5, "cm"),
plot.title = element_text(hjust = 0.5, vjust = 2, size = 16, face="bold"))
#
png(file = paste0(figpath,ROI,"_Est_QA_Pos.png"))
print(y)
dev.off()
}
pregWks <- c("1st","2nd", "3rd")
Est_pregwksinfo <-Est_subinfo %>% filter(Trimester %in% pregWks)
# Lets read in one main df and clean from there
Est_QA_preg_pos_DF <-read.delim(paste0(estrogen_path, '/pregnancy_only/Est_qa_preg_pos.csv'), header=FALSE, sep="\t") %>% as.data.frame() %>% janitor::remove_empty( which = "cols")
Est_preg_summarystats <- Est_QA_preg_pos_DF %>%filter(V1 %in% rows2grab) %>% t() %>% `colnames<-`(rows2grab)  %>%  `[`(-c(1),) %>% as.data.frame()
Est_QA_pregwks_pos_ROIs <- Est_QA_preg_pos_DF %>%
filter(str_detect(V1, c("mean_qa"))) %>%
filter(!str_detect(V1, c("mean_qa_post_norm"))) %>% `colnames<-`(c("Subjects", as.character(Est_preg_summarystats[,1])))
# Need to create a loop fix the subject IDs to match
for (sub in 1:nrow((Est_QA_pregwks_pos_ROIs))) {
clean_subnum <- str_split(Est_QA_pregwks_pos_ROIs$Subjects[sub], "_")[[1]][1]  %>% str_split("-") %>% as.data.frame() %>% `[`(2,)
Est_QA_pregwks_pos_ROIs$Subjects[sub] <-  sub("^0+", "", clean_subnum)
}
# now we cab grab the right subs
Est_QA_pregwks_pos_ROIs <- Est_QA_pregwks_pos_ROIs %>% filter(Subjects %in% Est_pregwksinfo$`new scan name`) %>%  mutate(trimester = factor(Est_pregwksinfo$Trimester, levels= c('Pre','1st','2nd', '3rd', 'Post'))) %>% mutate(estrogen = Est_pregwksinfo$Estrogen)
# change to numeric
Est_QA_pregwks_pos_ROIs[,c(Est_preg_summarystats[,1])] <- as.numeric(unlist(Est_QA_pregwks_pos_ROIs[,c(Est_preg_summarystats[,1])]))
figpath <- paste0(estrogen_path, '/pregnancy_only/')
ROIcols <- c(Est_preg_summarystats$`Tract Name`)
for (ROI in ROIcols) {
print(ROI)
y <- Est_QA_pregwks_pos_ROIs %>%
ggplot( aes(x=trimester, y=.data[[ROI]], group=trimester)) +  geom_jitter(color="black",size=0.8,alpha=0.9,width = 0.25) +
geom_boxplot(width=0.5 ,fill= c("#D1E7E6", "#A8D2C6", "#6AA390")) +
scale_y_binned(n.breaks=15, nice.breaks = TRUE) +
labs(x= "Trimester", y= " QA", title =paste0(ROI) ) +
theme(axis.title.x = element_text(vjust=- 4, size = 16),
axis.title.y = element_text(vjust=8, size = 16),
axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 12),
panel.background =element_blank(),
axis.line = element_line(colour = "black"),
plot.margin = margin(1, 2, 1, 1.5, "cm"),
plot.title = element_text(hjust = 0.5, vjust = 2, size = 16, face="bold"))
#
png(file = paste0(figpath,ROI,"_Est_QA__pregnancyonly_Pos.png"))
print(y)
dev.off()
}
Prog_subinfo <-subinfo_DF %>% select("new scan name","Progesterone","Trimester") %>% na.omit()
# Lets read in one main df and clean from there
Prog_QA_allwks_pos_DF <-read.delim(paste0(Prog_path,'/allscans/QA_prog_pos_allscans.csv'), header=FALSE, sep="\t") %>% as.data.frame() %>% janitor::remove_empty( which = "cols")
# Splitting up the big data frame into summary stats
Prog_summarystats <- Prog_QA_allwks_pos_DF %>%filter(V1 %in% rows2grab) %>% t() %>% `colnames<-`(rows2grab)  %>%  `[`(-c(1),) %>% as.data.frame()
# and QA metrics
Prog_QA_allwks_pos_ROIs <- Prog_QA_allwks_pos_DF %>%
filter(str_detect(V1, c("mean_qa"))) %>%
filter(!str_detect(V1, c("mean_qa_post_norm"))) %>% `colnames<-`(c("Subjects", as.character(Prog_summarystats[,1])))
# Need to create a loop fix the subject IDs to match
for (sub in 1:nrow((Prog_QA_allwks_pos_ROIs))) {
clean_subnum <- str_split(Prog_QA_allwks_pos_ROIs$Subjects[sub], "_")[[1]][1]  %>% str_split("-") %>% as.data.frame() %>% `[`(2,)
Prog_QA_allwks_pos_ROIs$Subjects[sub] <-  sub("^0+", "", clean_subnum)
}
# now we cab grab the right subs
Prog_QA_allwks_pos_ROIs <- Prog_QA_allwks_pos_ROIs %>% filter(Subjects %in% Prog_subinfo$`new scan name`) %>%  mutate(trimester = factor(Prog_subinfo$Trimester, levels= c('Pre','1st','2nd', '3rd', 'Post'))) %>% mutate(progesterone = Prog_subinfo$Progesterone)
# change to numeric
Prog_QA_allwks_pos_ROIs[,c(Prog_summarystats[,1])] <- as.numeric(unlist(Prog_QA_allwks_pos_ROIs[,c(Prog_summarystats[,1])]))
# let's create a check for things
TestVars <- sample(c(Prog_summarystats[,1]), size=1)
if (is.numeric(Prog_QA_allwks_pos_ROIs[,c(TestVars)])){
print(" Looks good")
} else {
print("ERROR")
}
figpath <- paste0(Prog_path, '/allscans/')
ROIcols <- c(Prog_summarystats$`Tract Name`)
for (ROI in ROIcols) {
print(ROI)
y <- Prog_QA_allwks_pos_ROIs %>%
ggplot( aes(x=trimester, y=.data[[ROI]], group=trimester)) +  geom_jitter(color="black",size=0.8,alpha=0.9,width = 0.25) +
geom_boxplot(width=0.5 ,fill= c("#CF92BF", "#D1E7E6", "#A8D2C6", "#6AA390","#90A0C9")) +
scale_y_binned(n.breaks=15, nice.breaks = TRUE) +
labs(x= "Trimester", y= " QA", title =paste0(ROI) ) +
theme(axis.title.x = element_text(vjust=- 4, size = 16),
axis.title.y = element_text(vjust=8, size = 16),
axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 12),
panel.background =element_blank(),
axis.line = element_line(colour = "black"),
plot.margin = margin(1, 2, 1, 1.5, "cm"),
plot.title = element_text(hjust = 0.5, vjust = 2, size = 16, face="bold"))
#
png(file = paste0(figpath,ROI,"_Prog_QA_allwks_Pos.png"))
print(y)
dev.off()
}
figpath <- paste0(Prog_path, '/allscans/')
ROIcols <- c(Prog_summarystats$`Tract Name`)
stages <-  unique(Prog_subinfo$Trimester)
for (stage in stages) {
print(stage)
df <- Prog_QA_allwks_pos_ROIs %>% filter(trimester == stage)
if(stage == "Pre"){
color_val <- c("#CF92BF")
}
if(stage == "1st"){
color_val <- c("#D1E7E6")
}
if(stage == "2nd"){
color_val <- c("#A8D2C6")
}
if(stage == "3rd"){
color_val <- c("#6AA390")
}
if(stage == "Post"){
color_val <- c("#90A0C9")
}
for (ROI in ROIcols) {
#pdf(file = paste0(figpath,"corr_QA_FornixL.pdf"),width=10, height=8)
z <-
ggplot(data = df, aes(
x = .data[[ROI]],
y = progesterone,
color = factor(trimester)
)) +
geom_point() +
stat_smooth(method = "lm", se = FALSE) +
scale_color_manual(
values = color_val,
name = "Trimester"
) +
labs(x = paste(ROI,"_",stage),
y = "progesterone") +
theme(
legend.position = "right",
panel.background = element_blank(),
axis.line = element_line(colour = "black")
)
# xlim(0.5, 2)     +
# #scale_x_continuous(n.breaks = 3) +
# annotate(
#   "text",
#   label = "FDR= 0.061328 ",
#   x = 1.75 ,
#   y = 1,
#   color = "#E45A5A",
#   size = 8
# ) +
# annotate(
#   "text",
#   label = "FDR= 0.012068",
#   x = 1.75 ,
#   y = 0.9,
#   color = "#80792B",
#   size = 8
# )
png(file = paste0(figpath,'Correlations/',ROI,"_",stage,"_Prog_QA_allwks_Pos.png"))
print(z)
dev.off()
}
}
Prog_preg_subinfo <-Prog_subinfo %>% filter(Trimester %in% pregWks)
# Lets read in one main df and clean from there
Prog_QA_preg_pos_DF <-read.delim(paste0(Prog_path,'/pregnancy_only/QA_prog_preg_pos.csv'), header=FALSE, sep="\t") %>% as.data.frame() %>% janitor::remove_empty( which = "cols")
# Splitting up the big data frame into summary stats
Prog_preg_summarystats <- Prog_QA_preg_pos_DF %>%filter(V1 %in% rows2grab) %>% t() %>% `colnames<-`(rows2grab)  %>%  `[`(-c(1),) %>% as.data.frame()
# and QA metrics
Prog_QA_preg_pos_ROIs <- Prog_QA_preg_pos_DF %>%
filter(str_detect(V1, c("mean_qa"))) %>%
filter(!str_detect(V1, c("mean_qa_post_norm"))) %>% `colnames<-`(c("Subjects", as.character(Prog_preg_summarystats[,1])))
# Need to create a loop fix the subject IDs to match
for (sub in 1:nrow((Prog_QA_preg_pos_ROIs))) {
clean_subnum <- str_split(Prog_QA_preg_pos_ROIs$Subjects[sub], "_")[[1]][1]  %>% str_split("-") %>% as.data.frame() %>% `[`(2,)
Prog_QA_preg_pos_ROIs$Subjects[sub] <-  sub("^0+", "", clean_subnum)
}
# now we cab grab the right subs
Prog_QA_preg_pos_ROIs <- Prog_QA_preg_pos_ROIs %>% filter(Subjects %in% Prog_preg_subinfo$`new scan name`) %>%  mutate(trimester = factor(Prog_preg_subinfo$Trimester, levels= c('Pre','1st','2nd', '3rd', 'Post'))) %>% mutate(progesterone = Prog_preg_subinfo$Progesterone)
# change to numeric
Prog_QA_preg_pos_ROIs[,c(Prog_preg_summarystats[,1])] <- as.numeric(unlist(Prog_QA_preg_pos_ROIs[,c(Prog_preg_summarystats[,1])]))
# let's create a check for things
TestVars <- sample(c(Prog_preg_summarystats[,1]), size=1)
if (is.numeric(Prog_QA_preg_pos_ROIs[,c(TestVars)])){
print(" Looks good")
} else {
print("ERROR")
}
figpath <- paste0(Prog_path, '/pregnancy_only/')
ROIcols <- c(Prog_preg_summarystats$`Tract Name`)
for (ROI in ROIcols) {
print(ROI)
y <- Prog_QA_preg_pos_ROIs %>%
ggplot( aes(x=trimester, y=.data[[ROI]], group=trimester)) +  geom_jitter(color="black",size=0.8,alpha=0.9,width = 0.25) +
geom_boxplot(width=0.5 ,fill= c("#D1E7E6", "#A8D2C6", "#6AA390")) +
scale_y_binned(n.breaks=15, nice.breaks = TRUE) +
labs(x= "Trimester", y= " QA", title =paste0(ROI) ) +
theme(axis.title.x = element_text(vjust=- 4, size = 16),
axis.title.y = element_text(vjust=8, size = 16),
axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 12),
panel.background =element_blank(),
axis.line = element_line(colour = "black"),
plot.margin = margin(1, 2, 1, 1.5, "cm"),
plot.title = element_text(hjust = 0.5, vjust = 2, size = 16, face="bold"))
#
png(file = paste0(figpath,ROI,"_Prog_QA_pregnancyonly_Pos.png"))
print(y)
dev.off()
}
Gest_subinfo <-subinfo_DF %>% select("new scan name","GestWeek","Trimester") %>% na.omit() %>% filter(GestWeek < 40)
# Lets read in one main df and clean from there
Gest_QA_pos_DF <-read.delim(paste0(Gest_path,'/QA_gestwk_pre_preg_pos.csv'), header=FALSE, sep="\t") %>% as.data.frame() %>% janitor::remove_empty( which = "cols")
# Splitting up the big data frame into summary stats
Gest_summarystats <- Gest_QA_pos_DF %>%filter(V1 %in% rows2grab) %>% t() %>% `colnames<-`(rows2grab)  %>%  `[`(-c(1),) %>% as.data.frame()
# and QA metrics
Gest_QA_pos_ROIs <- Gest_QA_pos_DF %>%
filter(str_detect(V1, c("mean_qa"))) %>%
filter(!str_detect(V1, c("mean_qa_post_norm"))) %>% `colnames<-`(c("Subjects", as.character(Gest_summarystats[,1])))
# Need to create a loop fix the subject IDs to match
for (sub in 1:nrow((Gest_QA_pos_ROIs))) {
clean_subnum <- str_split(Gest_QA_pos_ROIs$Subjects[sub], "_")[[1]][1]  %>% str_split("-") %>% as.data.frame() %>% `[`(2,)
Gest_QA_pos_ROIs$Subjects[sub] <-  sub("^0+", "", clean_subnum)
}
# now we cab grab the right subs
Gest_QA_pos_ROIs <- Gest_QA_pos_ROIs %>% filter(Subjects %in% Gest_subinfo$`new scan name`) %>%  mutate(trimester = factor(Gest_subinfo$Trimester, levels= c('Pre','1st','2nd', '3rd', 'Post'))) %>% mutate(Gestational = Gest_subinfo$GestWeek)
# change to numeric
Gest_QA_pos_ROIs[,c(Gest_summarystats[,1])] <- as.numeric(unlist(Gest_QA_pos_ROIs[,c(Gest_summarystats[,1])]))
# let's create a check for things
TestVars <- sample(c(Gest_summarystats[,1]), size=1)
if (is.numeric(Gest_QA_pos_ROIs[,c(TestVars)])){
print(" Looks good")
} else {
print("ERROR")
}
ROIcols <- c(Gest_summarystats$`Tract Name`)
for (ROI in ROIcols) {
print(ROI)
y <- Gest_QA_pos_ROIs %>%
ggplot( aes(x=trimester, y=.data[[ROI]], group=trimester)) +  geom_jitter(color="black",size=0.8,alpha=0.9,width = 0.25) +
geom_boxplot(width=0.5 ,fill= c("#CF92BF", "#D1E7E6", "#A8D2C6", "#6AA390")) +
scale_y_binned(n.breaks=10, nice.breaks = TRUE) +
labs(x= "Trimester", y= " QA", title =paste0(ROI) ) +
theme(axis.title.x = element_text(vjust=- 4, size = 16),
axis.title.y = element_text(vjust=8, size = 16),
axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 12),
panel.background =element_blank(),
axis.line = element_line(colour = "black"),
plot.margin = margin(1, 2, 1, 1.5, "cm"),
plot.title = element_text(hjust = 0.5, vjust = 2, size = 16, face="bold"))
#
png(file = paste0(Gest_path,"/boxplots/",ROI,"_Gestwks_Pos_QA.png"))
print(y)
dev.off()
}
ROIcols <- c(Gest_summarystats$`Tract Name`)
for (ROI in ROIcols) {
z <- Gest_QA_pos_ROIs %>% ggplot( aes(x = .data[[ROI]], y = Gestational)) +
geom_point(aes(color = trimester), size=5) +
stat_smooth(method = "lm", color= "#6AA390") +
scale_color_manual(
values = c("#CF92BF", "#D1E7E6", "#A8D2C6", "#90A0C9"),
name = "Gestational Week"
) +
labs(x = paste(ROI,"_",stage),
y = "Gestational Week") +
theme(
legend.position = "right",
panel.background = element_blank(),
axis.line = element_line(colour = "black")
) +
stat_cor(method = "spearman", aes(label = paste(..rr.label.., ..p.label.., sep = "~`,`~")))+
xlim(0.5, 40)  +
scale_x_continuous(n.breaks = 3)
png(file = paste0(Gest_path,"/scatterplots/",ROI,"_Gestwks_Pos_QA.png"))
print(z)
dev.off()
}
