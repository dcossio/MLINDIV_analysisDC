remove_empty("cols") %>%
filter(V1 %in% rows2grab) %>%
t() %>%
`colnames<-`(rows2grab) %>%
`[`(-c(1),) %>%
as.data.frame()
return(DF)
}
Extract_raw_values <- function(DF,Metric) {
# Purpose of this function is to clean the data without me having to copy and paste everything later.
# Data = raw unclean dataframe we want to clean up
# Metric will be either MD or QA
# sex is either male or female
# Let's read in our data frame
# grab  ROIcolumn names
colNames <- DF  %>% remove_empty("cols") %>%
filter(V1 == "Tract Name") %>% t() %>% `[`(-1)
subinfo <- sub_info  %>% select(c("subject_id", "sex", "age_scan_years", "maze_accuracy_pct"))
# Let's grab our values
if (Metric == "MD"){
Values <- DF %>% remove_empty("cols") %>%
filter(str_detect(V1, c("mean_md"))) %>%
`colnames<-`(c("Subjects",colNames))
}
else{
Values <- DF %>%
remove_empty("cols") %>%
filter(str_detect(V1, c("mean_qa"))) %>%
`colnames<-`(c("Subjects",colNames)) %>% filter(!str_detect(Subjects, c("sub-369")))
}
# now let's put this together
ConvToNum <-  apply(Values[,2:length(Values)],2, as.numeric)
Values[,2:length(Values)] <- ConvToNum
cleanedDF <- cbind(subinfo,Values) %>% na.omit() %>% select(-c("Subjects"))
return (cleanedDF)
}
TableOutput <- function(df){
knitr::kable(df, row.names=F) %>%
kable_styling(bootstrap_options =  c("striped", "hover", "condensed")) %>%
scroll_box(width = "800px", height = "300px")
}
working_dir <- "/Users/danielacossio/Documents/Chrastil_Lab/Projects/SNAG/DSI_rerun_data/DSP/"
rows2grab <- c("Tract Name", "number of tracts","mean length(mm)","diameter(mm)", "volume(mm^3)")
sub_info <- read.csv("/Users/danielacossio/Documents/Chrastil_Lab/Projects/SNAG/DSI_rerun_data/subject_info.csv")
#check visualisation and normality of all dsp data not just the scans ones
ggplot(sub_info, aes(x=dsp_si_true_pct)) +
geom_freqpoly(bins=10)
#check visualisation and normality of all dsp data not just the scans ones
ggplot(sub_info, aes(x=dsp_si_true_pct)) +
geom_bar(bins=10)
#check visualisation and normality of all dsp data not just the scans ones
ggplot(sub_info, aes(x=dsp_si_true_pct)) +
geom_bar(bins=5)
#check visualisation and normality of all dsp data not just the scans ones
ggplot(sub_info, aes(x=dsp_si_true_pct)) +
geom_bar()
help("geom_bar")
#check visualisation and normality of all dsp data not just the scans ones
ggplot(sub_info, aes(x=dsp_si_true_pct)) +
geom_bar(width = 8)
#check visualisation and normality of all dsp data not just the scans ones
ggplot(sub_info, aes(x=dsp_si_true_pct)) +
geom_bar(width = 2)
#check visualisation and normality of all dsp data not just the scans ones
ggplot(sub_info, aes(x=dsp_si_true_pct)) +
geom_bar(width = 0.9)
#check visualisation and normality of all dsp data not just the scans ones
ggplot(sub_info, aes(x=dsp_si_true_pct)) +
geom_bar(width = 1)
#check visualisation and normality of all dsp data not just the scans ones
ggplot(sub_info, aes(x=dsp_si_true_pct)) +
geom_bar(width = 0.5)
#check visualisation and normality of all dsp data not just the scans ones
ggplot(sub_info, aes(x=dsp_si_true_pct)) +
geom_bar(width = 0.1)
shapiro.test(sub_info$dsp_si_true_pct)
sub_info$sex.1
all_women_df <- sub_info %>% filter(sex.1==0)
ggplot(all_women_df, aes(x=dsp_si_true_pct)) +
geom_bar(width = 0.1)
#check visualisation and normality of all dsp data not just the scans ones
ggplot(sub_info, aes(x=dsp_si_true_pct)) +
geom_bar(width = 0.1)
shapiro.test(sub_info$dsp_si_true_pct)
all_women_df <- sub_info %>% filter(sex.1==0)
ggplot(all_women_df, aes(x=dsp_si_true_pct)) +
geom_bar(width = 0.1)
shapiro.test(all_women_df$dsp_si_true_pct)
shapiro.test(all_women_df$dsp_si_true_pct)
# This is a data frame which cotains a folder for each subject with 2 text files
path2data <- ("/Users/danielacossio/Documents/Chrastil_Lab/Projects/SNAG/mediation_test_data/data_from_Midlife_20230103")
# List of all subject directories
subfiles <- list.dirs("/Users/danielacossio/Documents/Chrastil_Lab/Projects/SNAG/mediation_test_data/data_from_Midlife_20230103", full.names = FALSE,recursive = FALSE)
# create an empty dataframe to loop into
fornix_output_df <-  data.frame(matrix(ncol = 5, nrow = 0)) %>% `colnames<-`(c("subjects","QA_L_fornix","QA_R_fornix","MD_L_fornix","MD_R_fornix"))
# creating a loop to go into each sub dir. read in each txt file and extract the
for(file in 1:length((subfiles))){
# creating an empty single row dataframe
empty_loop_df <- data.frame(matrix(ncol = 5, nrow = 1))  %>% `colnames<-`(c("subjects","QA_L_fornix","QA_R_fornix","MD_L_fornix","MD_R_fornix"))
# inputting the subject id
empty_loop_df$subjects <- str_remove(subfiles[file],"sub-")
# Let's do a quick folder check to make sure it's not empty
if(file.size(paste0(path2data,"/",subfiles[file])) < 128) next
#grabbing all the left and right variables
L_fornix <- read_delim(paste0(path2data,"/",subfiles[file],"/",subfiles[file],"_space-T1w_desc-preproc_dwi.ProjectionBasalGanglia_FornixL.stat.txt"),col_names = FALSE) %>% filter(X1 %in% c("qa","md"))
R_fornix <- read_delim(paste0(path2data,"/",subfiles[file],"/",subfiles[file],"_space-T1w_desc-preproc_dwi.ProjectionBasalGanglia_FornixR.stat.txt"),col_names = FALSE) %>% filter(X1 %in% c("qa","md"))
# Putting them into out dataframe
#Grab all QA values
empty_loop_df$QA_L_fornix <- L_fornix$X2[1] # row 1 is QA
empty_loop_df$QA_R_fornix <- R_fornix$X2[1]
empty_loop_df$MD_L_fornix <- L_fornix$X2[2] # row 2 is MD
empty_loop_df$MD_R_fornix <- R_fornix$X2[2]
fornix_output_df <- rbind(fornix_output_df,empty_loop_df)
}
# now we have to grab the information from sub info and combine
altered_sub_info <- sub_info %>% filter(subject_id %in% c(fornix_output_df$subjects))
fornix_output_df <- fornix_output_df %>%  filter(subjects %in% c(altered_sub_info$subject_id))
clean_DF <- cbind(altered_sub_info,fornix_output_df)
clean_DF$QA_Whole_Fornix <- rowMeans(clean_DF[,c("QA_L_fornix","QA_R_fornix")])
clean_DF$MD_Whole_Fornix <- rowMeans(clean_DF[,c("MD_L_fornix","MD_R_fornix")])
all_women_clean_df <- sub_info %>% filter(sex.1==0)
ggplot(all_women_clean_df, aes(x=dsp_si_true_pct)) +
geom_bar(width = 0.1)
shapiro.test(all_women_clean_df$dsp_si_true_pct)
shapiro.test(all_women_clean_df$dsp_si_true_pct)
View(sub_info)
View(all_women_df)
View(clean_DF)
View(sub_info)
View(sub_info)
View(all_women_clean_df)
all_women_clean_df <- clean_DF %>% filter(sex.1==0)
ggplot(all_women_clean_df, aes(x=dsp_si_true_pct)) +
geom_bar(width = 0.1)
shapiro.test(all_women_clean_df$dsp_si_true_pct)
cor.test(all_women_df$estradiol_scan_pg_ml,
all_women_df$dsp_si_true_pct,
conf.level = 0.95,
method = "pearson")
cor.test(all_women_df$estradiol_scan_pg_ml,
all_women_df$dsp_si_true_pct,
conf.level = 0.95,
method = "spearman")
hist(sqrt(all_women_df$dsp_si_true_pct))
shapiro.test(sqrt(all_women_df$dsp_si_true_pct))
shapiro.test(log(all_women_df$dsp_si_true_pct))
hist(log(all_women_df$dsp_si_true_pct))
View(sub_info)
View(clean_DF)
shapiro.test(sub_info$dsp_si_true_pct)
shapiro.test(log(sub_info$dsp_si_true_pct))
log(sub_info$dsp_si_true_pct)
data_dsp <- sub_info %>%  filter(dsp_useable == "Yes")
View(sub_info)
data_dsp <- sub_info %>%  filter(!is.na(dsp_si_true_pct))
View(data_dsp)
shapiro.test(log(data_dsp$dsp_si_true_pct))
x <- log(data_dsp$dsp_si_true_pct)
class(x)
shapiro.test(x)
x <- sqrt(data_dsp$dsp_si_true_pct)
class(x)
shapiro.test(x)
#check visualization and normality of all dsp data not just the scans ones
ggplot(sub_info, aes(x=dsp_si_true_pct)) +
geom_bar(width = 0.1)
shapiro.test(log(data_dsp$dsp_si_true_pct))
ggplot(sub_info, aes(x=log(dsp_si_true_pct))) +
geom_bar(width = 0.1)
shapiro.test(log(sub_info$dsp_si_true_pct))
dsp_norm <- sub_info %>% mutate_at(scale, .vars = vars(estradiol_spatial_pg_ml,
fsh_spatial_miu_ml,
dsp_si_true_pct))
View(sub_info)
View(sub_info)
View(sub_info)
View(clean_DF)
working_dir <- "/Users/danielacossio/Documents/Chrastil_Lab/Projects/SNAG/DSI_rerun_data/DSP/"
rows2grab <- c("Tract Name", "number of tracts","mean length(mm)","diameter(mm)", "volume(mm^3)")
All_sub_info <- read.csv("/Users/danielacossio/Documents/Chrastil_Lab/Projects/SNAG/sub_info_sheets/SNAG_Behavior.csv")
DSP_DSI_DF <- read.csv("/Users/danielacossio/Documents/Chrastil_Lab/Projects/SNAG/sub_info_sheets/SNAG_DSP_scans.csv")
working_dir <- "/Users/danielacossio/Documents/Chrastil_Lab/Projects/SNAG/DSI_rerun_data/DSP/"
rows2grab <- c("Tract Name", "number of tracts","mean length(mm)","diameter(mm)", "volume(mm^3)")
All_sub_info <- read.csv("/Users/danielacossio/Documents/Chrastil_Lab/Projects/SNAG/sub_info_sheets/SNAG_Behavior.csv")
DSP_DSI_DF <- read.csv("/Users/danielacossio/Documents/Chrastil_Lab/Projects/SNAG/sub_info_sheets/SNAG_DSP_scans.csv")
View(DSP_DSI_DF)
All_sub_info <- read.csv("/Users/danielacossio/Documents/Chrastil_Lab/Projects/SNAG/sub_info_sheets/SNAG_Behavior.csv") %>% drop_na()
DSP_DSI_DF <- read.csv("/Users/danielacossio/Documents/Chrastil_Lab/Projects/SNAG/sub_info_sheets/SNAG_DSP_scans.csv") %>% drop_na()
View(DSP_DSI_DF)
DSP_DSI_DF <- read.csv("/Users/danielacossio/Documents/Chrastil_Lab/Projects/SNAG/sub_info_sheets/SNAG_DSP_scans.csv") %>% remove_empty("rows")
View(DSP_DSI_DF)
View(sub_info)
DSP_DSI_DF <- read.csv("/Users/danielacossio/Documents/Chrastil_Lab/Projects/SNAG/sub_info_sheets/SNAG_DSP_scans.csv") %>% filter(!is.na(subject_id))
View(sub_info)
View(All_sub_info)
All_sub_info <- read.csv("/Users/danielacossio/Documents/Chrastil_Lab/Projects/SNAG/sub_info_sheets/SNAG_Behavior.csv")
View(All_sub_info)
TableOutput(All_sub_info)
View(clean_DF)
This is a data frame which cotains a folder for each subject with 2 text files
# This is a data frame which cotains a folder for each subject with 2 text files
path2data <- ("/Users/danielacossio/Documents/Chrastil_Lab/Projects/SNAG/mediation_test_data/data_from_Midlife_20230103")
# List of all subject directories
subfiles <- list.dirs("/Users/danielacossio/Documents/Chrastil_Lab/Projects/SNAG/mediation_test_data/data_from_Midlife_20230103", full.names = FALSE,recursive = FALSE)
# create an empty dataframe to loop into
fornix_output_df <-  data.frame(matrix(ncol = 5, nrow = 0)) %>% `colnames<-`(c("subjects","QA_L_fornix","QA_R_fornix","MD_L_fornix","MD_R_fornix"))
# creating a loop to go into each sub dir. read in each txt file and extract the
for(file in 1:length((subfiles))){
# creating an empty single row dataframe
empty_loop_df <- data.frame(matrix(ncol = 5, nrow = 1))  %>% `colnames<-`(c("subjects","QA_L_fornix","QA_R_fornix","MD_L_fornix","MD_R_fornix"))
# inputting the subject id
empty_loop_df$subjects <- str_remove(subfiles[file],"sub-")
# Let's do a quick folder check to make sure it's not empty
if(file.size(paste0(path2data,"/",subfiles[file])) < 128) next
#grabbing all the left and right variables
L_fornix <- read_delim(paste0(path2data,"/",subfiles[file],"/",subfiles[file],"_space-T1w_desc-preproc_dwi.ProjectionBasalGanglia_FornixL.stat.txt"),col_names = FALSE) %>% filter(X1 %in% c("qa","md"))
R_fornix <- read_delim(paste0(path2data,"/",subfiles[file],"/",subfiles[file],"_space-T1w_desc-preproc_dwi.ProjectionBasalGanglia_FornixR.stat.txt"),col_names = FALSE) %>% filter(X1 %in% c("qa","md"))
# Putting them into out dataframe
#Grab all QA values
empty_loop_df$QA_L_fornix <- L_fornix$X2[1] # row 1 is QA
empty_loop_df$QA_R_fornix <- R_fornix$X2[1]
empty_loop_df$MD_L_fornix <- L_fornix$X2[2] # row 2 is MD
empty_loop_df$MD_R_fornix <- R_fornix$X2[2]
fornix_output_df <- rbind(fornix_output_df,empty_loop_df)
}
fornix_output_df <- fornix_output_df %>%  filter(subjects %in% c(DSP_DSI_DF$subject_id))
View(fornix_output_df)
path2data <- ("/Users/danielacossio/Documents/Chrastil_Lab/Projects/SNAG/mediation_test_data/data_from_Midlife_20230103")
# List of all subject directories
subfiles <- list.dirs("/Users/danielacossio/Documents/Chrastil_Lab/Projects/SNAG/mediation_test_data/data_from_Midlife_20230103", full.names = FALSE,recursive = FALSE)
# create an empty dataframe to loop into
fornix_output_df <-  data.frame(matrix(ncol = 5, nrow = 0)) %>% `colnames<-`(c("subjects","QA_L_fornix","QA_R_fornix","MD_L_fornix","MD_R_fornix"))
# creating a loop to go into each sub dir. read in each txt file and extract the
for(file in 1:length((subfiles))){
# creating an empty single row dataframe
empty_loop_df <- data.frame(matrix(ncol = 5, nrow = 1))  %>% `colnames<-`(c("subjects","QA_L_fornix","QA_R_fornix","MD_L_fornix","MD_R_fornix"))
# inputting the subject id
empty_loop_df$subjects <- str_remove(subfiles[file],"sub-")
# Let's do a quick folder check to make sure it's not empty
if(file.size(paste0(path2data,"/",subfiles[file])) < 128) next
#grabbing all the left and right variables
L_fornix <- read_delim(paste0(path2data,"/",subfiles[file],"/",subfiles[file],"_space-T1w_desc-preproc_dwi.ProjectionBasalGanglia_FornixL.stat.txt"),col_names = FALSE) %>% filter(X1 %in% c("qa","md"))
R_fornix <- read_delim(paste0(path2data,"/",subfiles[file],"/",subfiles[file],"_space-T1w_desc-preproc_dwi.ProjectionBasalGanglia_FornixR.stat.txt"),col_names = FALSE) %>% filter(X1 %in% c("qa","md"))
# Putting them into out dataframe
#Grab all QA values
empty_loop_df$QA_L_fornix <- L_fornix$X2[1] # row 1 is QA
empty_loop_df$QA_R_fornix <- R_fornix$X2[1]
empty_loop_df$MD_L_fornix <- L_fornix$X2[2] # row 2 is MD
empty_loop_df$MD_R_fornix <- R_fornix$X2[2]
fornix_output_df <- rbind(fornix_output_df,empty_loop_df)
}
altered_sub_info <- DSP_DSI_DF %>% filter(subject_id %in% c(fornix_output_df$subjects))
fornix_output_df <- fornix_output_df %>%  filter(subjects %in% c(DSP_DSI_DF$subject_id))
clean_DF <- cbind(altered_sub_info,fornix_output_df)
clean_DF$QA_Whole_Fornix <- rowMeans(clean_DF[,c("QA_L_fornix","QA_R_fornix")])
clean_DF$MD_Whole_Fornix <- rowMeans(clean_DF[,c("MD_L_fornix","MD_R_fornix")])
View(All_sub_info)
ggplot(All_sub_info, aes(x=dsp_si_true_pct)) +
geom_bar(width = 0.1)
data_dsp <- All_sub_info %>% filter(dsp_useable == "Yes")
data_dsp <- All_sub_info %>% filter(dsp_useable == "Yes")
f_data_dsp <- data_dsp %>% filter(Sex="Female")
f_data_dsp <- data_dsp %>% filter(Sex=="Female")
f_data_dsp <- data_dsp %>% filter(sex == "Female")
m_data_dsp<- data_dsp %>% filter(sex=="Male")
ggplot(data_dsp, aes(x=dsp_si_true_pct)) +
geom_bar(width = 0.1)
shapiro.test(data_dsp)
shapiro.test(data_dsp$dsp_si_true_pct)
ggplot(f_data_dsp, aes(x=dsp_si_true_pct)) +
geom_bar(width = 0.1)
shapiro.test(f_data_dsp$dsp_si_true_pct)
ggplot(m_data_dsp, aes(x=dsp_si_true_pct)) +
geom_bar(width = 0.1)
shapiro.test(m_data_dsp$dsp_si_true_pct)
ggplot(data_dsp, aes(x=estradiol_scan_pg_ml)) +
geom_bar(width = 0.1)
shapiro.test(data_dsp$estradiol_scan_pg_ml)
ggplot(f_data_dsp, aes(x=estradiol_scan_pg_ml)) +
geom_bar(width = 0.1)
shapiro.test(f_data_dsp$estradiol_scan_pg_ml)
ggplot(f_data_dsp, aes(x=estradiol_scan_pg_ml)) +
geom_bar(width = 0.2)
ggplot(f_data_dsp, aes(x=estradiol_scan_pg_ml)) +
geom_bar(width = 1)
shapiro.test(f_data_dsp$estradiol_scan_pg_ml)
shapiro.test(f_data_dsp$fsh_spatial_miu_ml)
shapiro.test(log(f_data_dsp$estradiol_scan_pg_ml))
shapiro.test(log(f_data_dsp$fsh_spatial_miu_ml))
shapiro.test(f_data_dsp$fsh_spatial_miu_ml)
shapiro.test(log(f_data_dsp$fsh_spatial_miu_ml))
shapiro.test(sqrt(f_data_dsp$fsh_spatial_miu_ml))
shapiro.test(sqrt(f_data_dsp$estradiol_scan_pg_ml))
ggplot(m_data_dsp, aes(x=log(f_data_dsp$estradiol_scan_pg_ml))) +
geom_bar(width = 0.1)
ggplot(f_data_dsp, aes(x=log(f_data_dsp$estradiol_scan_pg_ml))) +
geom_bar(width = 0.1)
ggplot(f_data_dsp, aes(x=log(f_data_dsp$estradiol_scan_pg_ml))) +
geom_freqpoly(width = 0.1)
ggplot(f_data_dsp, aes(x=sqrt(f_data_dsp$estradiol_scan_pg_ml))) +
geom_freqpoly(width = 0.1)
ggplot(f_data_dsp, aes(x=sqrt(f_data_dsp$estradiol_scan_pg_ml))) +
geom_bar(width = 0.1)
ggplot(f_data_dsp, aes(x=sqrt(f_data_dsp$estradiol_scan_pg_ml))) +
geom_freqpoly(width = 0.1)
ggplot(f_data_dsp, aes(x=log(f_data_dsp$dsp_si_true_pct))) +
geom_bar(width = 0.1)
shapiro.test(log(f_data_dsp$dsp_si_true_pct))
ggplot(data_dsp, aes(x=dsp_si_true_pct)) +
geom_bar(width = 0.1)
ggplot(f_data_dsp, aes(x=dsp_si_true_pct)) +
geom_bar(width = 0.1)
shapiro.test(log(f_data_dsp$dsp_si_true_pct))
ggplot(f_data_dsp, aes(x=sqrt(f_data_dsp$dsp_si_true_pct))) +
geom_freqpoly(width = 0.1)
shapiro.test(sqrt(f_data_dsp$dsp_si_true_pct))
ggplot(f_data_dsp, aes(x=sqrt(f_data_dsp$dsp_si_true_pct))) +
geom_bar(width = 0.1)
shapiro.test(sqrt(f_data_dsp$dsp_si_true_pct))
ggplot(f_data_dsp, aes(x=log(f_data_dsp$dsp_si_true_pct))) +
geom_bar(width = 0.1)
library(ggplot2)
#(plyr)
library(tidyverse)
# library(dplyr)
# library(tidyr)
library(stringr)
library(kableExtra)
# library(data.table)
# library(network)
# library(tidygraph)
# library(ggraph)
# library(igraph)
# library(networkD3)
# library(CINNA)
# library(umap)
# library(plotly)
#library(factoextra)
#library(lsr)
# library(car)
library(ggpubr)
#library(entropy)
#library(ds4psy)
# library(pROC)
#library(devtools)
#library(BRRR)
#library(stats)
#library(afex)
library(knitr)
library(janitor)
library(car)
library(ggiraph)
library(ggiraphExtra)
library(moonBook)
library(nationalparkcolors)
library(gridExtra)
library(markdown)
library(ggplot2)
#(plyr)
library(tidyverse)
# library(dplyr)
# library(tidyr)
library(stringr)
library(kableExtra)
# library(data.table)
# library(network)
# library(tidygraph)
# library(ggraph)
# library(igraph)
# library(networkD3)
# library(CINNA)
# library(umap)
# library(plotly)
#library(factoextra)
#library(lsr)
# library(car)
library(ggpubr)
#library(entropy)
#library(ds4psy)
# library(pROC)
#library(devtools)
#library(BRRR)
#library(stats)
#library(afex)
library(knitr)
library(janitor)
library(car)
library(ggiraph)
library(ggiraphExtra)
library(moonBook)
library(nationalparkcolors)
library(gridExtra)
library(markdown)
ReadingCSVFunc <- function(pathname){
read.delim(paste0(working_dir, pathname), header=FALSE,sep = "\t")
}
CleanInput <- function(DF){
DF <- DF %>%
remove_empty("cols") %>%
filter(V1 %in% rows2grab) %>%
t() %>%
`colnames<-`(rows2grab) %>%
`[`(-c(1),) %>%
as.data.frame()
return(DF)
}
Extract_raw_values <- function(DF,Metric) {
# Purpose of this function is to clean the data without me having to copy and paste everything later.
# Data = raw unclean dataframe we want to clean up
# Metric will be either MD or QA
# sex is either male or female
# Let's read in our data frame
# grab  ROIcolumn names
colNames <- DF  %>% remove_empty("cols") %>%
filter(V1 == "Tract Name") %>% t() %>% `[`(-1)
subinfo <- sub_info  %>% select(c("subject_id", "sex", "age_scan_years", "maze_accuracy_pct"))
# Let's grab our values
if (Metric == "MD"){
Values <- DF %>% remove_empty("cols") %>%
filter(str_detect(V1, c("mean_md"))) %>%
`colnames<-`(c("Subjects",colNames))
}
else{
Values <- DF %>%
remove_empty("cols") %>%
filter(str_detect(V1, c("mean_qa"))) %>%
`colnames<-`(c("Subjects",colNames)) %>% filter(!str_detect(Subjects, c("sub-369")))
}
# now let's put this together
ConvToNum <-  apply(Values[,2:length(Values)],2, as.numeric)
Values[,2:length(Values)] <- ConvToNum
cleanedDF <- cbind(subinfo,Values) %>% na.omit() %>% select(-c("Subjects"))
return (cleanedDF)
}
TableOutput <- function(df){
knitr::kable(df, row.names=F) %>%
kable_styling(bootstrap_options =  c("striped", "hover", "condensed")) %>%
scroll_box(width = "800px", height = "300px")
}
working_dir <- "/Users/danielacossio/Documents/Chrastil_Lab/Projects/SNAG/DSI_rerun_data/DSP/"
rows2grab <- c("Tract Name", "number of tracts","mean length(mm)","diameter(mm)", "volume(mm^3)")
All_sub_info <- read.csv("/Users/danielacossio/Documents/Chrastil_Lab/Projects/SNAG/sub_info_sheets/SNAG_Behavior.csv") # This is a sheet that has all of the subjects with at least one useable behavior task (Loop, maze, dsp)
DSP_DSI_DF <- read.csv("/Users/danielacossio/Documents/Chrastil_Lab/Projects/SNAG/sub_info_sheets/SNAG_DSP_scans.csv") %>% filter(!is.na(subject_id)) # This is from the main subject sheet and includes all subjects that have a dsp score AND should have a scan with them
# This is a data frame which cotains a folder for each subject with 2 text files
path2data <- ("/Users/danielacossio/Documents/Chrastil_Lab/Projects/SNAG/mediation_test_data/data_from_Midlife_20230103")
# List of all subject directories
subfiles <- list.dirs("/Users/danielacossio/Documents/Chrastil_Lab/Projects/SNAG/mediation_test_data/data_from_Midlife_20230103", full.names = FALSE,recursive = FALSE) # all of the data extracted from dsi
# create an empty dataframe to loop into
fornix_output_df <-  data.frame(matrix(ncol = 5, nrow = 0)) %>% `colnames<-`(c("subjects","QA_L_fornix","QA_R_fornix","MD_L_fornix","MD_R_fornix"))
# creating a loop to go into each sub dir. read in each txt file and extract the
for(file in 1:length((subfiles))){
# creating an empty single row dataframe
empty_loop_df <- data.frame(matrix(ncol = 5, nrow = 1))  %>% `colnames<-`(c("subjects","QA_L_fornix","QA_R_fornix","MD_L_fornix","MD_R_fornix"))
# inputting the subject id
empty_loop_df$subjects <- str_remove(subfiles[file],"sub-")
# Let's do a quick folder check to make sure it's not empty
if(file.size(paste0(path2data,"/",subfiles[file])) < 128) next
#grabbing all the left and right variables
L_fornix <- read_delim(paste0(path2data,"/",subfiles[file],"/",subfiles[file],"_space-T1w_desc-preproc_dwi.ProjectionBasalGanglia_FornixL.stat.txt"),col_names = FALSE) %>% filter(X1 %in% c("qa","md"))
R_fornix <- read_delim(paste0(path2data,"/",subfiles[file],"/",subfiles[file],"_space-T1w_desc-preproc_dwi.ProjectionBasalGanglia_FornixR.stat.txt"),col_names = FALSE) %>% filter(X1 %in% c("qa","md"))
# Putting them into out dataframe
#Grab all QA values
empty_loop_df$QA_L_fornix <- L_fornix$X2[1] # row 1 is QA
empty_loop_df$QA_R_fornix <- R_fornix$X2[1]
empty_loop_df$MD_L_fornix <- L_fornix$X2[2] # row 2 is MD
empty_loop_df$MD_R_fornix <- R_fornix$X2[2]
fornix_output_df <- rbind(fornix_output_df,empty_loop_df)
}
# now we have to grab the information from sub info and combine but we need to make sure we're grabbing all the correct subjects from each dataframe
altered_sub_info <- DSP_DSI_DF %>% filter(subject_id %in% c(fornix_output_df$subjects))
fornix_output_df <- fornix_output_df %>%  filter(subjects %in% c(DSP_DSI_DF$subject_id))
clean_DF <- cbind(altered_sub_info,fornix_output_df)
clean_DF$QA_Whole_Fornix <- rowMeans(clean_DF[,c("QA_L_fornix","QA_R_fornix")])
clean_DF$MD_Whole_Fornix <- rowMeans(clean_DF[,c("MD_L_fornix","MD_R_fornix")])
#check visualization and normality of all dsp data not just the scans ones
data_dsp <- All_sub_info %>% filter(dsp_useable == "Yes") # dataframe with all subjects that have useable DSP
f_data_dsp <- data_dsp %>% filter(sex == "Female") # Women only
m_data_dsp<- data_dsp %>% filter(sex=="Male") # Men only
ggplot(data_dsp, aes(x=dsp_si_true_pct)) +
geom_bar(width = 0.1)
shapiro.test(data_dsp$dsp_si_true_pct)
ggplot(f_data_dsp, aes(x=dsp_si_true_pct)) +
geom_bar(width = 0.1)
shapiro.test(f_data_dsp$dsp_si_true_pct)
ggplot(m_data_dsp, aes(x=dsp_si_true_pct)) +
geom_bar(width = 0.1)
shapiro.test(m_data_dsp$dsp_si_true_pct)
shapiro.test(f_data_dsp$estradiol_scan_pg_ml)
shapiro.test(f_data_dsp$fsh_spatial_miu_ml)
data_dsp <- All_sub_info %>% filter(dsp_useable == "Yes")
View(data_dsp)
data_dsp <- All_sub_info %>% filter(dsp_useable == "Yes") %>% filter(subject_id < 500) # dataframe with all subjects that have useable DSP
data_dsp <- All_sub_info %>% filter(dsp_useable == "Yes") %>% filter(subject_id < 500) # dataframe with all subjects that have usable DSP
ggplot(data_dsp, aes(x=dsp_si_true_pct)) +
geom_bar(width = 0.1)
shapiro.test(data_dsp$dsp_si_true_pct)
install.packages("psych")
library(psych)
desc_statby(data_dsp)
help("desc_statby")
describe(data_dsp)
data_dsp <- All_sub_info %>% filter(dsp_useable == "Yes") %>% filter(subject_id < 500) # dataframe with all subjects that have usable DSP
ggplot(data_dsp, aes(x=dsp_si_true_pct)) +
geom_bar(width = 0.1)
shapiro.test(data_dsp$dsp_si_true_pct)
TableOutputdescribe(data_dsp))
data_dsp <- All_sub_info %>% filter(dsp_useable == "Yes") %>% filter(subject_id < 500) # dataframe with all subjects that have usable DSP
ggplot(data_dsp, aes(x=dsp_si_true_pct)) +
geom_bar(width = 0.1)
shapiro.test(data_dsp$dsp_si_true_pct)
TableOutput(describe(data_dsp))
View(data_dsp)
