# Data = raw unclean dataframe we want to clean up
# Metric will be either MD or QA
# sex is either male or female
# Let's read in our data frame
# grab  ROIcolumn names
colNames <- DF  %>% remove_empty("cols") %>%
filter(V1 == "Tract Name") %>% t() %>% `[`(-1)
subinfo <- sub_info  %>% select(c("subject_id", "sex", "age_scan_years", "maze_accuracy_pct", "REPO"))
# Let's grab our values
if (Metric == "MD"){
Values <- DF %>% remove_empty("cols") %>%
filter(str_detect(V1, c("mean_md"))) %>%
`colnames<-`(c("Subjects",colNames))
}
else{
Values <- DF %>%
remove_empty("cols") %>%
filter(str_detect(V1, c("mean_qa"))) %>%
`colnames<-`(c("Subjects",colNames)) %>% filter(!str_detect(Subjects, c("sub-369")))
}
# now let's put this together
ConvToNum <-  apply(Values[,2:length(Values)],2, as.numeric)
Values[,2:length(Values)] <- ConvToNum
cleanedDF <- cbind(subinfo,Values) %>% na.omit() %>% select(-c("Subjects"))
return (cleanedDF)
}
View(figDF)
figDF <- Extract_raw_values(ReadingCSVFunc("maze_acc/QA/fname_covariate/female.mazelearningacc.pos.csv"), "QA") select(c("subject_id", "sex", "age_scan_years", "maze_accuracy_pct", "REPO", "Corticospinal_Tract_L", "Corticospinal_Tract_R")) %>% filter(sex == "Female")
figDF <- Extract_raw_values(ReadingCSVFunc("maze_acc/QA/fname_covariate/female.mazelearningacc.pos.csv"), "QA") %>%  select(c("subject_id", "sex", "age_scan_years", "maze_accuracy_pct", "REPO", "Corticospinal_Tract_L", "Corticospinal_Tract_R")) %>% filter(sex == "Female")
View(figDF)
temp <- Extract_raw_values(ReadingCSVFunc("maze_acc/QA/fname_covariate/male.mazelearning.acc.pos.csv"), "QA") %>%  select(c("subject_id", "sex", "age_scan_years", "maze_accuracy_pct", "REPO", "Corticospinal_Tract_L", "Corticospinal_Tract_R")) %>% filter(sex == "Male")
figDF <- rbind(figDF, temp)
View(figDF)
ggplot(data = figDF, aes(x = Corticospinal_Tract_L, y = maze_accuracy_pct)) +
geom_point(aes(color = factor(sex))) +
geom_smooth(method = "lm",
aes(color = factor(sex)))
ggplot(figDF,aes(y=maze_accuracy_pct,x=Corticospinal_Tract_L,color=sex,1))+geom_point() +
geom_smooth(formula = y ~ x, method = "lm")+
scale_color_manual(values = c('#4F5791FF','#EE404EFF')) +
theme(
axis.title.x = element_text(vjust = -4, size = 16),
axis.title.y = element_text(vjust = 8, size = 16),
axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 12),
panel.background = element_blank(),
panel.grid.major = element_blank(),
axis.line = element_line(colour = "black"),
plot.margin = margin(1, 2, 1, 1.5, "cm"),
plot.title = element_text(
hjust = 0.5,
vjust = 2,
size = 16,
face = "bold"
)
)
ggplot(figDF,aes(y=maze_accuracy_pct,x=Corticospinal_Tract_R,color=sex,1))+geom_point() +
geom_smooth(formula = y ~ x, method = "lm")+
scale_color_manual(values = c('#4F5791FF','#EE404EFF')) +
theme(
axis.title.x = element_text(vjust = -4, size = 16),
axis.title.y = element_text(vjust = 8, size = 16),
axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 12),
panel.background = element_blank(),
panel.grid.major = element_blank(),
axis.line = element_line(colour = "black"),
plot.margin = margin(1, 2, 1, 1.5, "cm"),
plot.title = element_text(
hjust = 0.5,
vjust = 2,
size = 16,
face = "bold"
)
)
ggplot(figDF,aes(y=maze_accuracy_pct,x=Corticospinal_Tract_L,color=sex,1))+geom_point() +
geom_smooth(formula = y ~ x, method = "lm")+
scale_color_manual(values = c('#de5285','#00cdff')) +
theme(
axis.title.x = element_text(vjust = -4, size = 16),
axis.title.y = element_text(vjust = 8, size = 16),
axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 12),
panel.background = element_blank(),
panel.grid.major = element_blank(),
axis.line = element_line(colour = "black"),
plot.margin = margin(1, 2, 1, 1.5, "cm"),
plot.title = element_text(
hjust = 0.5,
vjust = 2,
size = 16,
face = "bold"
)
)
ggplot(figDF,aes(y=maze_accuracy_pct,x=Corticospinal_Tract_L,color=sex,1))+geom_point() +
geom_smooth()+
scale_color_manual(values = c('#de5285','#00cdff')) +
theme(
axis.title.x = element_text(vjust = -4, size = 16),
axis.title.y = element_text(vjust = 8, size = 16),
axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 12),
panel.background = element_blank(),
panel.grid.major = element_blank(),
axis.line = element_line(colour = "black"),
plot.margin = margin(1, 2, 1, 1.5, "cm"),
plot.title = element_text(
hjust = 0.5,
vjust = 2,
size = 16,
face = "bold"
)
)
ggplot(figDF,aes(y=maze_accuracy_pct,x=Corticospinal_Tract_L,color=sex,1))+geom_point() +
geom_smooth(method="lm")+
scale_color_manual(values = c('#de5285','#00cdff')) +
theme(
axis.title.x = element_text(vjust = -4, size = 16),
axis.title.y = element_text(vjust = 8, size = 16),
axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 12),
panel.background = element_blank(),
panel.grid.major = element_blank(),
axis.line = element_line(colour = "black"),
plot.margin = margin(1, 2, 1, 1.5, "cm"),
plot.title = element_text(
hjust = 0.5,
vjust = 2,
size = 16,
face = "bold"
)
)
ggplot(figDF,aes(y=maze_accuracy_pct,x=Corticospinal_Tract_R,color=sex,1))+geom_point() +
geom_smooth(method="lm")+
scale_color_manual(values = c('#de5285','#00cdff')) +
theme(
axis.title.x = element_text(vjust = -4, size = 16),
axis.title.y = element_text(vjust = 8, size = 16),
axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 12),
panel.background = element_blank(),
panel.grid.major = element_blank(),
axis.line = element_line(colour = "black"),
plot.margin = margin(1, 2, 1, 1.5, "cm"),
plot.title = element_text(
hjust = 0.5,
vjust = 2,
size = 16,
face = "bold"
)
)
figDF %>% filter(REPO != 0)
figDF %>% filter(REPO != 0) %>% ggplot(figDF,aes(y=maze_accuracy_pct,x=Corticospinal_Tract_R,color=REPO,1))+geom_point() +
geom_smooth(method="lm")+
scale_color_manual(values = c('#de5285','#00cdff')) +
theme(
axis.title.x = element_text(vjust = -4, size = 16),
axis.title.y = element_text(vjust = 8, size = 16),
axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 12),
panel.background = element_blank(),
panel.grid.major = element_blank(),
axis.line = element_line(colour = "black"),
plot.margin = margin(1, 2, 1, 1.5, "cm"),
plot.title = element_text(
hjust = 0.5,
vjust = 2,
size = 16,
face = "bold"
)
)
figDF %>% filter(REPO != 0) %>% ggplot(aes(y=maze_accuracy_pct,x=Corticospinal_Tract_R,color=REPO,1))+geom_point() +
geom_smooth(method="lm")+
scale_color_manual(values = c('#de5285','#00cdff')) +
theme(
axis.title.x = element_text(vjust = -4, size = 16),
axis.title.y = element_text(vjust = 8, size = 16),
axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 12),
panel.background = element_blank(),
panel.grid.major = element_blank(),
axis.line = element_line(colour = "black"),
plot.margin = margin(1, 2, 1, 1.5, "cm"),
plot.title = element_text(
hjust = 0.5,
vjust = 2,
size = 16,
face = "bold"
)
)
class(figDF$REPO)
ggplot(aes(y=maze_accuracy_pct,x=Corticospinal_Tract_R,color=as.factor(REPO),1))+geom_point() +
geom_smooth(method="lm")+
scale_color_manual(values = c('#de5285','#00cdff')) +
theme(
axis.title.x = element_text(vjust = -4, size = 16),
axis.title.y = element_text(vjust = 8, size = 16),
axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 12),
panel.background = element_blank(),
panel.grid.major = element_blank(),
axis.line = element_line(colour = "black"),
plot.margin = margin(1, 2, 1, 1.5, "cm"),
plot.title = element_text(
hjust = 0.5,
vjust = 2,
size = 16,
face = "bold"
)
)
figDF %>% filter(REPO != 0) %>%  ggplot(aes(y=maze_accuracy_pct,x=Corticospinal_Tract_R,color=factor(REPO),1))+geom_point() +
geom_smooth(method="lm")+
scale_color_manual(values = c('#de5285','#00cdff')) +
theme(
axis.title.x = element_text(vjust = -4, size = 16),
axis.title.y = element_text(vjust = 8, size = 16),
axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 12),
panel.background = element_blank(),
panel.grid.major = element_blank(),
axis.line = element_line(colour = "black"),
plot.margin = margin(1, 2, 1, 1.5, "cm"),
plot.title = element_text(
hjust = 0.5,
vjust = 2,
size = 16,
face = "bold"
)
)
View(sub_info)
figDF %>% filter(REPO != 0) %>%  ggplot(aes(y=maze_accuracy_pct,x=Corticospinal_Tract_R,color=factor(REPO),1))+geom_point() +
geom_smooth(method="lm")+
scale_color_manual(values = c('#de5285','#00cdff','#f4a2d0')) +
theme(
axis.title.x = element_text(vjust = -4, size = 16),
axis.title.y = element_text(vjust = 8, size = 16),
axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 12),
panel.background = element_blank(),
panel.grid.major = element_blank(),
axis.line = element_line(colour = "black"),
plot.margin = margin(1, 2, 1, 1.5, "cm"),
plot.title = element_text(
hjust = 0.5,
vjust = 2,
size = 16,
face = "bold"
)
)
figDF <- Extract_raw_values(ReadingCSVFunc("maze_acc/QA/fname_covariate/female.mazelearningacc.pos.csv"), "QA") %>%  select(c("subject_id", "sex", "age_scan_years", "maze_accuracy_pct", "REPO", "Corticospinal_Tract_L", "Corticospinal_Tract_R")) %>% filter(sex == "Female")
temp <- Extract_raw_values(ReadingCSVFunc("maze_acc/QA/fname_covariate/male.mazelearning.acc.pos.csv"), "QA") %>%  select(c("subject_id", "sex", "age_scan_years", "maze_accuracy_pct", "REPO", "Corticospinal_Tract_L", "Corticospinal_Tract_R")) %>% filter(sex == "Male")
figDF <- rbind(figDF, temp)
paletteer_d(`"LaCroixColoR::MelonPomelo"`)
figDF <- Extract_raw_values(ReadingCSVFunc("maze_acc/QA/fname_covariate/female.mazelearningacc.pos.csv"), "QA") %>%  select(c("subject_id", "sex", "age_scan_years", "maze_accuracy_pct", "REPO", "Corticospinal_Tract_L", "Corticospinal_Tract_R")) %>% filter(sex == "Female")
temp <- Extract_raw_values(ReadingCSVFunc("maze_acc/QA/fname_covariate/male.mazelearning.acc.pos.csv"), "QA") %>%  select(c("subject_id", "sex", "age_scan_years", "maze_accuracy_pct", "REPO", "Corticospinal_Tract_L", "Corticospinal_Tract_R")) %>% filter(sex == "Male")
figDF <- rbind(figDF, temp)
jpeg("CorticoSpinalL.jpeg")
ggplot(figDF,aes(y=maze_accuracy_pct,x=Corticospinal_Tract_L,color=sex,1))+geom_point() +
geom_smooth(method="lm")+
scale_color_manual(values = c('#de5285','#00cdff')) +
theme(
axis.title.x = element_text(vjust = -4, size = 16),
axis.title.y = element_text(vjust = 8, size = 16),
axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 12),
panel.background = element_blank(),
panel.grid.major = element_blank(),
axis.line = element_line(colour = "black"),
plot.margin = margin(1, 2, 1, 1.5, "cm"),
plot.title = element_text(
hjust = 0.5,
vjust = 2,
size = 16,
face = "bold"
)
)
dev.off()
jpeg("CorticoSpinalR.jpeg")
ggplot(figDF,aes(y=maze_accuracy_pct,x=Corticospinal_Tract_R,color=sex,1))+geom_point() +
geom_smooth(method="lm")+
scale_color_manual(values = c('#de5285','#00cdff')) +
theme(
axis.title.x = element_text(vjust = -4, size = 16),
axis.title.y = element_text(vjust = 8, size = 16),
axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 12),
panel.background = element_blank(),
panel.grid.major = element_blank(),
axis.line = element_line(colour = "black"),
plot.margin = margin(1, 2, 1, 1.5, "cm"),
plot.title = element_text(
hjust = 0.5,
vjust = 2,
size = 16,
face = "bold"
)
)
dev.off()
jpeg("REPOCorticoSpinalR.jpeg")
figDF %>% filter(REPO != 0) %>%  ggplot(aes(y=maze_accuracy_pct,x=Corticospinal_Tract_R,color=factor(REPO),1))+geom_point() +
geom_smooth(method="lm")+
scale_color_manual(values = c('#de5285','#00cdff','#f4a2d0')) +
theme(
axis.title.x = element_text(vjust = -4, size = 16),
axis.title.y = element_text(vjust = 8, size = 16),
axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 12),
panel.background = element_blank(),
panel.grid.major = element_blank(),
axis.line = element_line(colour = "black"),
plot.margin = margin(1, 2, 1, 1.5, "cm"),
plot.title = element_text(
hjust = 0.5,
vjust = 2,
size = 16,
face = "bold"
)
)
dev.off()
jpeg("REPOCorticoSpinalL.jpeg")
figDF %>% filter(REPO != 0) %>%  ggplot(aes(y=maze_accuracy_pct,x=Corticospinal_Tract_L,color=factor(REPO),1))+geom_point() +
geom_smooth(method="lm")+
scale_color_manual(values = c('#de5285','#00cdff','#f4a2d0')) +
theme(
axis.title.x = element_text(vjust = -4, size = 16),
axis.title.y = element_text(vjust = 8, size = 16),
axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 12),
panel.background = element_blank(),
panel.grid.major = element_blank(),
axis.line = element_line(colour = "black"),
plot.margin = margin(1, 2, 1, 1.5, "cm"),
plot.title = element_text(
hjust = 0.5,
vjust = 2,
size = 16,
face = "bold"
)
)
dev.off()
x <- Extract_raw_values(ReadingCSVFunc("maze_acc/QA/fname_covariate/female.mazelearningacc.pos.csv"), "QA")
library(ggplot2)
#(plyr)
library(tidyverse)
# library(dplyr)
# library(tidyr)
library(stringr)
library(kableExtra)
# library(data.table)
# library(network)
# library(tidygraph)
# library(ggraph)
# library(igraph)
# library(networkD3)
# library(CINNA)
# library(umap)
# library(plotly)
#library(factoextra)
#library(lsr)
# library(car)
library(ggpubr)
#library(entropy)
#library(ds4psy)
# library(pROC)
#library(devtools)
#library(BRRR)
#library(stats)
#library(afex)
library(knitr)
library(janitor)
library(car)
library(ggiraph)
library(ggiraphExtra)
library(moonBook)
library(nationalparkcolors)
library(gridExtra)
library(markdown)
conames(Extract_raw_values(ReadingCSVFunc("maze_acc/QA/fname)
)
)
d
colnames(Extract_raw_values(ReadingCSVFunc("maze_acc/QA/fname_covariate/female.mazelearningacc.pos.csv"), "QA"))
View(temp)
View(sub_info)
x <- Extract_raw_values(ReadingCSVFunc("maze_acc/QA/fname_covariate/QA_positive_mazeacc_all_fname.csv"), "QA")
View(x)
Extract_raw_values(ReadingCSVFunc("maze_acc/QA/fname_covariate/QA_positive_mazeacc_all_fname.csv"), "QA") %>%  ggplot(aes(y=maze_accuracy_pct,x=Cingulum_Frontal_Parietal_L,color= sex,1))+geom_point() +
geom_smooth(method="lm")+
scale_color_manual(values = c('#de5285','#00cdff','#f4a2d0')) +
theme(
axis.title.x = element_text(vjust = -4, size = 16),
axis.title.y = element_text(vjust = 8, size = 16),
axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 12),
panel.background = element_blank(),
panel.grid.major = element_blank(),
axis.line = element_line(colour = "black"),
plot.margin = margin(1, 2, 1, 1.5, "cm"),
plot.title = element_text(
hjust = 0.5,
vjust = 2,
size = 16,
face = "bold"
)
)
library(ggplot2)
#(plyr)
library(tidyverse)
# library(dplyr)
# library(tidyr)
library(stringr)
library(kableExtra)
# library(data.table)
# library(network)
# library(tidygraph)
# library(ggraph)
# library(igraph)
# library(networkD3)
# library(CINNA)
# library(umap)
# library(plotly)
#library(factoextra)
#library(lsr)
# library(car)
library(ggpubr)
#library(entropy)
#library(ds4psy)
# library(pROC)
#library(devtools)
#library(BRRR)
#library(stats)
#library(afex)
library(knitr)
library(janitor)
library(car)
library(ggiraph)
library(ggiraphExtra)
library(moonBook)
library(nationalparkcolors)
library(gridExtra)
library(markdown)
# working_dir <- "/Users/danielacossio/Documents/Chrastil_Lab/Projects/SNAG/DSI_rerun_data/"
working_dir <- "/Users/danielacossio/Library/CloudStorage/GoogleDrive-dcossio1@uci.edu/Other computers/My iMac/Chrastil_Lab/Projects/SNAG/DSI_rerun_data" # Laptop path
rows2grab <- c("Tract Name", "number of tracts","mean length(mm)","diameter(mm)", "volume(mm^3)")
sub_info <- read.csv("/Users/danielacossio/Documents/Chrastil_Lab/Projects/SNAG/DSI_rerun_data/subject_info.csv")
# working_dir <- "/Users/danielacossio/Documents/Chrastil_Lab/Projects/SNAG/DSI_rerun_data/"
working_dir <- "/Users/danielacossio/Library/CloudStorage/GoogleDrive-dcossio1@uci.edu/Other computers/My iMac/Chrastil_Lab/Projects/SNAG/DSI_rerun_data/" # Laptop path
rows2grab <- c("Tract Name", "number of tracts","mean length(mm)","diameter(mm)", "volume(mm^3)")
#sub_info <- read.csv("/Users/danielacossio/Documents/Chrastil_Lab/Projects/SNAG/DSI_rerun_data/subject_info.csv")
sub_info <- read.csv(paste0(working_dir,"subject_info.csv")
ReadingCSVFunc <- function(pathname){
read.delim(paste0(working_dir, pathname), header=FALSE,sep = "\t")
}
CleanInput <- function(DF){
DF <- DF %>% remove_empty("cols")
if(length(DF) < 3){
DF <- DF %>%
filter(V1 %in% rows2grab) %>%
t() %>%
`colnames<-`(rows2grab) %>%
as.data.frame() %>%
`[`(-c(1),)
} else{
DF <- DF %>%
filter(V1 %in% rows2grab) %>%
t() %>%
`colnames<-`(rows2grab) %>%
`[`(-c(1),) %>%
as.data.frame() %>%
arrange(`Tract Name`)
}
return(DF)
}
Extract_raw_values <- function(DF,Metric) {
# Purpose of this function is to clean the data without me having to copy and paste everything later.
# Data = raw unclean dataframe we want to clean up
# Metric will be either MD or QA
# sex is either male or female
# Let's read in our data frame
# grab  ROIcolumn names
colNames <- DF  %>% remove_empty("cols") %>%
filter(V1 == "Tract Name") %>% t() %>% `[`(-1)
subinfo <- sub_info  %>% select(c("subject_id", "sex", "age_scan_years", "maze_accuracy_pct", "REPO"))
# Let's grab our values
if (Metric == "MD"){
Values <- DF %>% remove_empty("cols") %>%
filter(str_detect(V1, c("mean_md"))) %>%
`colnames<-`(c("Subjects",colNames))
}
else{
Values <- DF %>%
remove_empty("cols") %>%
filter(str_detect(V1, c("mean_qa"))) %>%
`colnames<-`(c("Subjects",colNames)) %>% filter(!str_detect(Subjects, c("sub-369")))
}
# now let's put this together
ConvToNum <-  apply(Values[,2:length(Values)],2, as.numeric)
Values[,2:length(Values)] <- ConvToNum
cleanedDF <- cbind(subinfo,Values) %>% na.omit() %>% select(-c("Subjects"))
return (cleanedDF)
}
TableOutput <- function(df, style, width, height, caption){
if (style == "classic"){
knitr::kable(df, row.names=F) %>% kable_classic(full_width = F, html_font = "Cambria")
} else {
knitr::kable(df, row.names=F) %>% kable_styling(bootstrap_options =  c("striped", "hover", "condensed")) %>% scroll_box(width = paste0(width,"px"), height = paste0(height,"px"))
}
}
TableOutput(CleanInput(ReadingCSVFunc("maze_acc/QA/fname_covariate/QA_positive_mazeacc_all_fname.csv")),"classic", 500, 200)
TableOutput(CleanInput(ReadingCSVFunc("maze_acc/QA/fname_covariate/female.mazelearningacc.pos.csv")), "classic", 500, 200)
TableOutput(CleanInput(ReadingCSVFunc("maze_acc/MD/FNAME/maze.MD.all.pos.csv")), "classic", 500, 200)
sub_info <- read.csv(paste0(working_dir,"subject_info.csv"))
