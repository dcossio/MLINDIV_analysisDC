sub_info <- read.csv(paste0(working_dir,"subject_info.csv"))
TableOutput(CleanInput(ReadingCSVFunc("maze_acc/QA/fname_covariate/QA_positive_mazeacc_all_fname.csv")))
library(ggplot2)
#(plyr)
library(tidyverse)
# library(dplyr)
# library(tidyr)
library(stringr)
library(kableExtra)
# library(data.table)
# library(network)
# library(tidygraph)
# library(ggraph)
# library(igraph)
# library(networkD3)
# library(CINNA)
# library(umap)
# library(plotly)
#library(factoextra)
#library(lsr)
# library(car)
library(ggpubr)
#library(entropy)
#library(ds4psy)
# library(pROC)
#library(devtools)
#library(BRRR)
#library(stats)
#library(afex)
library(knitr)
library(janitor)
library(car)
library(ggiraph)
library(ggiraphExtra)
library(moonBook)
library(nationalparkcolors)
library(gridExtra)
library(markdown)
TableOutput(CleanInput(ReadingCSVFunc("maze_acc/QA/fname_covariate/QA_positive_mazeacc_all_fname.csv")))
library(ggplot2)
#(plyr)
library(tidyverse)
# library(dplyr)
# library(tidyr)
library(stringr)
library(kableExtra)
# library(data.table)
# library(network)
# library(tidygraph)
# library(ggraph)
# library(igraph)
# library(networkD3)
# library(CINNA)
# library(umap)
# library(plotly)
#library(factoextra)
#library(lsr)
# library(car)
library(ggpubr)
#library(entropy)
#library(ds4psy)
# library(pROC)
#library(devtools)
#library(BRRR)
#library(stats)
#library(afex)
library(knitr)
library(janitor)
library(car)
library(ggiraph)
library(ggiraphExtra)
library(moonBook)
library(nationalparkcolors)
library(gridExtra)
library(markdown)
options(width = 100)
library(ggplot2)
#(plyr)
library(tidyverse)
# library(dplyr)
# library(tidyr)
library(stringr)
library(kableExtra)
# library(data.table)
# library(network)
# library(tidygraph)
# library(ggraph)
# library(igraph)
# library(networkD3)
# library(CINNA)
# library(umap)
# library(plotly)
#library(factoextra)
#library(lsr)
# library(car)
library(ggpubr)
#library(entropy)
#library(ds4psy)
# library(pROC)
#library(devtools)
#library(BRRR)
#library(stats)
#library(afex)
library(knitr)
library(janitor)
library(car)
library(ggiraph)
library(ggiraphExtra)
library(moonBook)
library(nationalparkcolors)
library(gridExtra)
library(markdown)
#working_dir <- "/Users/danielacossio/Documents/Chrastil_Lab/Projects/SNAG/DSI_rerun_data/"
working_dir <- "/Users/danielacossio/Library/CloudStorage/GoogleDrive-dcossio1@uci.edu/Other computers/My iMac/Chrastil_Lab/Projects/SNAG/DSI_rerun_data/" # Laptop path
rows2grab <- c("Tract Name", "number of tracts","mean length(mm)","diameter(mm)", "volume(mm^3)")
# sub_info <- read.csv("/Users/danielacossio/Documents/Chrastil_Lab/Projects/SNAG/DSI_rerun_data/subject_info.csv")
sub_info <- read.csv(paste0(working_dir,"subject_info.csv"))
#working_dir <- "/Users/danielacossio/Documents/Chrastil_Lab/Projects/SNAG/DSI_rerun_data/"
working_dir <- "/Users/danielacossio/Library/CloudStorage/GoogleDrive-dcossio1@uci.edu/Other computers/My iMac/Chrastil_Lab/Projects/SNAG/DSI_rerun_data/" # Laptop path
rows2grab <- c("Tract Name", "number of tracts","mean length(mm)","diameter(mm)", "volume(mm^3)")
sub_info <- read.csv("/Users/danielacossio/Documents/Chrastil_Lab/Projects/SNAG/DSI_rerun_data/subject_info.csv")
#sub_info <- read.csv(paste0(working_dir,"subject_info.csv"))
ReadingCSVFunc <- function(pathname){
read.delim(paste0(working_dir, pathname), header=FALSE,sep = "\t")
}
CleanInput <- function(DF){
DF <- DF %>% remove_empty("cols")
if(length(DF) < 3){
DF <- DF %>%
filter(V1 %in% rows2grab) %>%
t() %>%
`colnames<-`(rows2grab) %>%
as.data.frame() %>%
`[`(-c(1),)
} else{
DF <- DF %>%
filter(V1 %in% rows2grab) %>%
t() %>%
`colnames<-`(rows2grab) %>%
`[`(-c(1),) %>%
as.data.frame()
}
return(DF)
}
Extract_raw_values <- function(DF,Metric) {
# Purpose of this function is to clean the data without me having to copy and paste everything later.
# Data = raw unclean dataframe we want to clean up
# Metric will be either MD or QA
# sex is either male or female
# Let's read in our data frame
colNames <- DF  %>% remove_empty("cols") %>%
filter(V1 == "Tract Name") %>% t() %>% `[`(-1)
# grab  ROIcolumn names
subinfo <- sub_info  %>% select(c("subject_id", "sex", "age_scan_years", "loop_pe_rad3_m", "loop_de_rad3_degree","REPO"))
# Let's grab our values
if (Metric == "MD"){
Values <- DF %>% remove_empty("cols") %>%
filter(str_detect(V1, c("mean_md"))) %>%
`colnames<-`(c("Subjects",colNames)) %>% filter(!str_detect(Subjects, c("sub-369")))
}
else{
Values <- DF %>%
remove_empty("cols") %>%
filter(str_detect(V1, c("mean_qa"))) %>%
`colnames<-`(c("Subjects",colNames)) %>% filter(!str_detect(Subjects, c("sub-369")))
}
# now let's put this together
if (length(Values) < 3) {
Values[,2] <- as.numeric(Values[,2])
}else{
ConvToNum <-  apply(Values[,2:length(Values)],2, as.numeric)
Values[,2:length(Values)] <- ConvToNum
}
cleanedDF <- cbind(subinfo,Values) %>% na.omit() %>% select(-c("Subjects"))
return (cleanedDF)
}
TableOutput <- function(df){
knitr::kable(df, row.names=F) %>% kable_styling(bootstrap_options =  c("striped", "hover", "condensed")) %>% scroll_box(width = "600px", height = "300px")
}
# TableOutput <- function(df, style, width, height, caption){
#
#   if (style == "classic"){
#       knitr::kable(df, row.names=F) %>% kable_classic(full_width = F, html_font = "Cambria")
#   } else {
#       knitr::kable(df, row.names=F) %>% kable_styling(bootstrap_options =  c("striped", "hover", "condensed")) %>% scroll_box(width = paste0(width,"px"), height = paste0(height,"px"))
#
#   }
#
# }
View(sub_info)
M_PE_avg <- sub_info %>% filter(sex == "Male") %>% select(loop_pe_avg_m)
M_PE_rad3 <- sub_info %>% filter(sex == "Male") %>% select(loop_pe_rad3_m)
#Females
F_PE_avg <- sub_info %>% filter(sex == "Female") %>% select(loop_pe_avg_m)
F_PE_rad3 <- sub_info %>% filter(sex == "Female") %>% select(loop_pe_rad3_m)
View(F_PE_avg)
male_acc <- Acc_sub_info %>% filter(sex == "male") %>% select(maze_accuracy_pct) %>% na.omit()
M_PE_avg <- sub_info %>% filter(sex == "Male") %>% select(loop_pe_avg_m)%>% na.omit()
View(M_PE_avg)
M_PE_avg <- sub_info %>% filter(sex == "Male") %>% select(loop_pe_avg_m)%>% na.omit()
M_PE_rad3 <- sub_info %>% filter(sex == "Male") %>% select(loop_pe_rad3_m)%>% na.omit()
#Females
F_PE_avg <- sub_info %>% filter(sex == "Female") %>% select(loop_pe_avg_m)%>% na.omit()
F_PE_rad3 <- sub_info %>% filter(sex == "Female") %>% select(loop_pe_rad3_m)%>% na.omit()
# creating our separated databases
m_subinfo <- sub_info %>% filter(sex == "Male")
f_subinfo <- sub_info %>% filter(sex == "Female")
m_subinfo %>% select(loop_pe_avg_m)%>% na.omit() %>% shapiro.test()
class(m_subinfo$loop_pe_avg_m)
m_subinfo %>% select(loop_pe_avg_m)%>% na.omit() %>% shapiro.test()
m_subinfo %>% select(loop_pe_avg_m) %>% shapiro.test()
shapiro.test(m_subinfo$loop_pe_avg_m)
M_PE_avg_norm <-shapiro.test(m_subinfo$loop_pe_avg_m)
M_PE_rad3_norm <- shapiro.test(m_subinfo$loop_pe_rad3_m)
M_PE_rad3_norm
M_PE_avg_norm
F_PE_avg_norm <- shapiro.test(m_subinfo$loop_pe_avg_m)
F_PE_rad3_norm <- shapiro.test(m_subinfo$loop_pe_rad3_m)
shapiro.test(m_subinfo$loop_pe_rad3_m)
shapiro.test(m_subinfo$loop_pe_avg_m)
shapiro.test(f_subinfo$loop_pe_rad3_m)
shapiro.test(f_subinfo$loop_pe_avg_m)
p1 <- qplot(m_subinfo$loop_pe_avg_m)
p2 <- qplot(m_subinfo$loop_pe_rad3_m)
p3 <- qplot(f_subinfo$loop_pe_avg_m)
p4 <- qplot(f_subinfo$loop_pe_rad3_m)
#sexdif_acc <- wilcox.test(male_acc$maze_accuracy_pct,female_acc$maze_accuracy_pct) %>% broom::tidy()
ggplot(f_subinfo$loop_pe_rad3_m)
ggplot(loop_pe_rad3_m, data= f_subinfo)
ggplot("loop_pe_rad3_m", data= f_subinfo)
ggplot(f_subinfo, aes(x=loop_pe_rad3_m)) +geom_histogram()
ggplot(f_subinfo, aes(x=loop_pe_rad3_m)) +geom_histogram(bins=10)
ggplot(f_subinfo, aes(x=loop_pe_rad3_m)) +geom_histogram(bins=5)
ggplot(f_subinfo, aes(x=loop_pe_rad3_m)) +geom_histogram(bins=20)
ggplot(f_subinfo, aes(x=loop_pe_rad3_m)) +geom_histogram(bins=15)
p1 <- ggplot(m_subinfo$loop_pe_avg_m)
p1 <- ggplot(m_subinfo, aes(x=loop_pe_avg_m)) +geom_histogram(bins=15)
p2 <- ggplot(m_subinfo, aes(x=loop_pe_rad3_m)) +geom_histogram(bins=15)
p3 <- ggplot(f_subinfo, aes(x=loop_pe_avg_m)) +geom_histogram(bins=15)
p4 <- ggplot(f_subinfo, aes(x=loop_pe_rad3_m)) +geom_histogram(bins=15)
grid.arrange(p1, p2, nrow = 1)
#sexdif_acc <- wilcox.test(male_acc$maze_accuracy_pct,female_acc$maze_accuracy_pct) %>% broom::tidy()
p1 <- ggplot(m_subinfo, aes(x=loop_pe_avg_m)) +geom_histogram(bins=15) +labs(title="male")
p2 <- ggplot(m_subinfo, aes(x=loop_pe_rad3_m)) +geom_histogram(bins=15) +labs(title="male")
p3 <- ggplot(f_subinfo, aes(x=loop_pe_avg_m)) +geom_histogram(bins=15)+labs(title="female")
p4 <- ggplot(f_subinfo, aes(x=loop_pe_rad3_m)) +geom_histogram(bins=15)+labs(title="female")
grid.arrange(p1, p2,p3,p4, nrow = 2)
#sexdif_acc <- wilcox.test(male_acc$maze_accuracy_pct,female_acc$maze_accuracy_pct) %>% broom::tidy()
p1 <- ggplot(m_subinfo, aes(x=loop_pe_avg_m)) +geom_histogram(bins=10) +labs(title="male")
p2 <- ggplot(m_subinfo, aes(x=loop_pe_rad3_m)) +geom_histogram(bins=10) +labs(title="male")
p3 <- ggplot(f_subinfo, aes(x=loop_pe_avg_m)) +geom_histogram(bins=10)+labs(title="female")
p4 <- ggplot(f_subinfo, aes(x=loop_pe_rad3_m)) +geom_histogram(bins=10)+labs(title="female")
grid.arrange(p1, p2,p3,p4, nrow = 2)
#sexdif_acc <- wilcox.test(male_acc$maze_accuracy_pct,female_acc$maze_accuracy_pct) %>% broom::tidy()
p1 <- ggplot(m_subinfo, aes(x=loop_pe_avg_m)) +geom_histogram(bins=10,color=#028476
) +labs(title="male")
p1 <- ggplot(m_subinfo, aes(x=loop_pe_avg_m)) +geom_histogram(bins=10,color="#028476") +labs(title="male")
p2 <- ggplot(m_subinfo, aes(x=loop_pe_rad3_m)) +geom_histogram(bins=10,color="#028476") +labs(title="male")
p3 <- ggplot(f_subinfo, aes(x=loop_pe_avg_m)) +geom_histogram(bins=10)+labs(title="female")
p4 <- ggplot(f_subinfo, aes(x=loop_pe_rad3_m)) +geom_histogram(bins=10)+labs(title="female")
grid.arrange(p1, p2,p3,p4, nrow = 2)
#sexdif_acc <- wilcox.test(male_acc$maze_accuracy_pct,female_acc$maze_accuracy_pct) %>% broom::tidy()
p1 <- ggplot(m_subinfo, aes(x=loop_pe_avg_m)) +geom_histogram(bins=10,fill="#028476") +labs(title="male")
p2 <- ggplot(m_subinfo, aes(x=loop_pe_rad3_m)) +geom_histogram(bins=10,fill="#028476") +labs(title="male")
p3 <- ggplot(f_subinfo, aes(x=loop_pe_avg_m)) +geom_histogram(bins=10)+labs(title="female")
p4 <- ggplot(f_subinfo, aes(x=loop_pe_rad3_m)) +geom_histogram(bins=10)+labs(title="female")
grid.arrange(p1, p2,p3,p4, nrow = 2)
#sexdif_acc <- wilcox.test(male_acc$maze_accuracy_pct,female_acc$maze_accuracy_pct) %>% broom::tidy()
p1 <- ggplot(m_subinfo, aes(x=loop_pe_avg_m)) +geom_histogram(bins=10,fill="#028476") +labs(title="male")
p2 <- ggplot(m_subinfo, aes(x=loop_pe_rad3_m)) +geom_histogram(bins=10,fill="#028476") +labs(title="male")
p3 <- ggplot(f_subinfo, aes(x=loop_pe_avg_m)) +geom_histogram(bins=10,fill="#FB6B90")+labs(title="female")
p4 <- ggplot(f_subinfo, aes(x=loop_pe_rad3_m)) +geom_histogram(bins=10,fill="#FB6B90")+labs(title="female")
grid.arrange(p1, p2,p3,p4, nrow = 2)
#sexdif_acc <- wilcox.test(male_acc$maze_accuracy_pct,female_acc$maze_accuracy_pct) %>% broom::tidy()
TableOutput(CleanInput(ReadingCSVFunc("Loop/QA/PE/noFNAME/rad3pe.all.qa.neg.csv")))
paste0(working_dir,"Loop/QA/PE/noFNAME/rad3pe.all.qa.neg.csv")
working_dir <- "/Users/danielacossio/Documents/Chrastil_Lab/Projects/SNAG/DSI_rerun_data/"
#working_dir <- "/Users/danielacossio/Library/CloudStorage/GoogleDrive-dcossio1@uci.edu/Other computers/My iMac/Chrastil_Lab/Projects/SNAG/DSI_rerun_data/" # Laptop path
rows2grab <- c("Tract Name", "number of tracts","mean length(mm)","diameter(mm)", "volume(mm^3)")
#sub_info <- read.csv("/Users/danielacossio/Documents/Chrastil_Lab/Projects/SNAG/DSI_rerun_data/subject_info.csv")
sub_info <- read.csv(paste0(working_dir,"subject_info.csv"))
ReadingCSVFunc <- function(pathname){
read.delim(paste0(working_dir, pathname), header=FALSE,sep = "\t")
}
CleanInput <- function(DF){
DF <- DF %>% remove_empty("cols")
if(length(DF) < 3){
DF <- DF %>%
filter(V1 %in% rows2grab) %>%
t() %>%
`colnames<-`(rows2grab) %>%
as.data.frame() %>%
`[`(-c(1),)
} else{
DF <- DF %>%
filter(V1 %in% rows2grab) %>%
t() %>%
`colnames<-`(rows2grab) %>%
`[`(-c(1),) %>%
as.data.frame()
}
return(DF)
}
Extract_raw_values <- function(DF,Metric) {
# Purpose of this function is to clean the data without me having to copy and paste everything later.
# Data = raw unclean dataframe we want to clean up
# Metric will be either MD or QA
# sex is either male or female
# Let's read in our data frame
colNames <- DF  %>% remove_empty("cols") %>%
filter(V1 == "Tract Name") %>% t() %>% `[`(-1)
# grab  ROIcolumn names
subinfo <- sub_info  %>% select(c("subject_id", "sex", "age_scan_years", "loop_pe_rad3_m", "loop_de_rad3_degree","REPO"))
# Let's grab our values
if (Metric == "MD"){
Values <- DF %>% remove_empty("cols") %>%
filter(str_detect(V1, c("mean_md"))) %>%
`colnames<-`(c("Subjects",colNames)) %>% filter(!str_detect(Subjects, c("sub-369")))
}
else{
Values <- DF %>%
remove_empty("cols") %>%
filter(str_detect(V1, c("mean_qa"))) %>%
`colnames<-`(c("Subjects",colNames)) %>% filter(!str_detect(Subjects, c("sub-369")))
}
# now let's put this together
if (length(Values) < 3) {
Values[,2] <- as.numeric(Values[,2])
}else{
ConvToNum <-  apply(Values[,2:length(Values)],2, as.numeric)
Values[,2:length(Values)] <- ConvToNum
}
cleanedDF <- cbind(subinfo,Values) %>% na.omit() %>% select(-c("Subjects"))
return (cleanedDF)
}
TableOutput <- function(df){
knitr::kable(df, row.names=F) %>% kable_styling(bootstrap_options =  c("striped", "hover", "condensed")) %>% scroll_box(width = "600px", height = "300px")
}
# TableOutput <- function(df, style, width, height, caption){
#
#   if (style == "classic"){
#       knitr::kable(df, row.names=F) %>% kable_classic(full_width = F, html_font = "Cambria")
#   } else {
#       knitr::kable(df, row.names=F) %>% kable_styling(bootstrap_options =  c("striped", "hover", "condensed")) %>% scroll_box(width = paste0(width,"px"), height = paste0(height,"px"))
#
#   }
#
# }
p1 <- ggplot(m_subinfo, aes(x=loop_pe_avg_m)) +geom_histogram(bins=10,fill="#028476") +labs(title="male")
p2 <- ggplot(m_subinfo, aes(x=loop_pe_rad3_m)) +geom_histogram(bins=10,fill="#028476") +labs(title="male")
p3 <- ggplot(f_subinfo, aes(x=loop_pe_avg_m)) +geom_histogram(bins=10,fill="#FB6B90")+labs(title="female")
p4 <- ggplot(f_subinfo, aes(x=loop_pe_rad3_m)) +geom_histogram(bins=10,fill="#FB6B90")+labs(title="female")
wilcox.test(m_subinfo$loop_pe_avg_m,f_subinfo$loop_pe_avg_m) %>% broom::tidy()
a <- wilcox.test(m_subinfo$loop_pe_avg_m,f_subinfo$loop_pe_avg_m) %>% broom::tidy()
View(a)
a <- wilcox.test(m_subinfo$loop_pe_avg_m,f_subinfo$loop_pe_avg_m) %>% broom::tidy() %>% select(p.value)
View(a)
wilcox.test(m_subinfo$loop_pe_avg_m,f_subinfo$loop_pe_avg_m) %>% broom::tidy()
wilcox.test(m_subinfo$loop_pe_avg_m,f_subinfo$loop_pe_avg_m) %>% broom::tidy() %>% knitr::kable( row.names=F)
wilcox.test(m_subinfo$loop_pe_avg_m,f_subinfo$loop_pe_avg_m) %>% broom::tidy() %>% as.data.frame()%>% knitr::kable()
wilcox.test(m_subinfo$loop_pe_avg_m,f_subinfo$loop_pe_avg_m) %>% broom::tidy() %>% knitr::kable( booktabs = TRUE)
View(a)
a <- wilcox.test(m_subinfo$loop_pe_avg_m,f_subinfo$loop_pe_avg_m) %>% broom::tidy() %>% knitr::kable( booktabs = TRUE)
a <- wilcox.test(m_subinfo$loop_pe_avg_m,f_subinfo$loop_pe_avg_m) %>% broom::tidy()
View(a)
a <- wilcox.test(m_subinfo$loop_pe_avg_m,f_subinfo$loop_pe_avg_m) %>% broom::tidy() %>% knitr::kable()  kable_styling(full_width = F)
a <- wilcox.test(m_subinfo$loop_pe_avg_m,f_subinfo$loop_pe_avg_m) %>% broom::tidy() %>% knitr::kable() %>%  kable_styling(full_width = F)
wilcox.test(m_subinfo$loop_pe_rad3_m,f_subinfo$loop_pe_rad3_m) %>% broom::tidy() %>% knitr::kable() %>%  kable_styling(full_width = F)
t.test(m_subinfo$loop_pe_avg_m,f_subinfo$loop_pe_avg_m) %>% broom::tidy() %>% knitr::kable() %>%  kable_styling(full_width = F)
t.test(m_subinfo$loop_pe_rad3_m,f_subinfo$loop_pe_rad3_m) %>% broom::tidy() %>% knitr::kable() %>%  kable_styling(full_width = F)
t.test(m_subinfo$loop_pe_rad3_m,f_subinfo$loop_pe_rad3_m)
p1 <- ggplot(m_subinfo, aes(x=loop_ae_avg_degree)) +geom_histogram(bins=10,fill="#028476") +labs(title="male")
p2 <- ggplot(m_subinfo, aes(x=loop_ae_rad3_degree)) +geom_histogram(bins=10,fill="#028476") +labs(title="male")
p3 <- ggplot(f_subinfo, aes(x=loop_ae_avg_degree)) +geom_histogram(bins=10,fill="#FB6B90")+labs(title="female")
p4 <- ggplot(f_subinfo, aes(x=loop_ae_rad3_degree)) +geom_histogram(bins=10,fill="#FB6B90")+labs(title="female")
shapiro.test(m_subinfo$loop_ae_avg_degree)
shapiro.test(f_subinfo$loop_ae_avg_degree) %>% broom::tidy() %>% knitr::kable() %>%  kable_styling()
shapiro.test(f_subinfo$loop_ae_rad3_degree) %>% broom::tidy() %>% knitr::kable() %>%  kable_styling()
t.test(m_subinfo$loop_ae_avg_degree,f_subinfo$loop_ae_avg_degree) %>% broom::tidy() %>% knitr::kable() %>%  kable_styling()
wilcox.test(m_subinfo$loop_ae_avg_degree,f_subinfo$loop_ae_avg_degree) %>% broom::tidy() %>% knitr::kable() %>%  kable_styling()
t.test(m_subinfo$loop_ae_rad3_degree,f_subinfo$loop_ae_rad3_degree) %>% broom::tidy() %>% knitr::kable() %>%  kable_styling(full_width = F)
# Let's check out normality
p1 <- ggplot(m_subinfo, aes(x=loop_de_avg_degree)) +geom_histogram(bins=10,fill="#028476") +labs(title="male")
library(ggplot2)
#(plyr)
library(tidyverse)
# library(dplyr)
# library(tidyr)
library(stringr)
library(kableExtra)
# library(data.table)
# library(network)
# library(tidygraph)
# library(ggraph)
# library(igraph)
# library(networkD3)
# library(CINNA)
# library(umap)
# library(plotly)
#library(factoextra)
#library(lsr)
# library(car)
library(ggpubr)
#library(entropy)
#library(ds4psy)
# library(pROC)
#library(devtools)
#library(BRRR)
#library(stats)
#library(afex)
library(knitr)
library(janitor)
library(car)
library(ggiraph)
library(ggiraphExtra)
library(moonBook)
library(nationalparkcolors)
library(gridExtra)
library(markdown)
working_dir <- "/Users/danielacossio/Documents/Chrastil_Lab/Projects/SNAG/DSI_rerun_data/"
#working_dir <- "/Users/danielacossio/Library/CloudStorage/GoogleDrive-dcossio1@uci.edu/Other computers/My iMac/Chrastil_Lab/Projects/SNAG/DSI_rerun_data/" # Laptop path
rows2grab <- c("Tract Name", "number of tracts","mean length(mm)","diameter(mm)", "volume(mm^3)")
#sub_info <- read.csv("/Users/danielacossio/Documents/Chrastil_Lab/Projects/SNAG/DSI_rerun_data/subject_info.csv")
sub_info <- read.csv(paste0(working_dir,"subject_info.csv"))
ReadingCSVFunc <- function(pathname){
read.delim(paste0(working_dir, pathname), header=FALSE,sep = "\t")
}
CleanInput <- function(DF){
DF <- DF %>% remove_empty("cols")
if(length(DF) < 3){
DF <- DF %>%
filter(V1 %in% rows2grab) %>%
t() %>%
`colnames<-`(rows2grab) %>%
as.data.frame() %>%
`[`(-c(1),)
} else{
DF <- DF %>%
filter(V1 %in% rows2grab) %>%
t() %>%
`colnames<-`(rows2grab) %>%
`[`(-c(1),) %>%
as.data.frame()
}
return(DF)
}
Extract_raw_values <- function(DF,Metric) {
# Purpose of this function is to clean the data without me having to copy and paste everything later.
# Data = raw unclean dataframe we want to clean up
# Metric will be either MD or QA
# sex is either male or female
# Let's read in our data frame
colNames <- DF  %>% remove_empty("cols") %>%
filter(V1 == "Tract Name") %>% t() %>% `[`(-1)
# grab  ROIcolumn names
subinfo <- sub_info  %>% select(c("subject_id", "sex", "age_scan_years", "loop_pe_rad3_m", "loop_de_rad3_degree","REPO"))
# Let's grab our values
if (Metric == "MD"){
Values <- DF %>% remove_empty("cols") %>%
filter(str_detect(V1, c("mean_md"))) %>%
`colnames<-`(c("Subjects",colNames)) %>% filter(!str_detect(Subjects, c("sub-369")))
}
else{
Values <- DF %>%
remove_empty("cols") %>%
filter(str_detect(V1, c("mean_qa"))) %>%
`colnames<-`(c("Subjects",colNames)) %>% filter(!str_detect(Subjects, c("sub-369")))
}
# now let's put this together
if (length(Values) < 3) {
Values[,2] <- as.numeric(Values[,2])
}else{
ConvToNum <-  apply(Values[,2:length(Values)],2, as.numeric)
Values[,2:length(Values)] <- ConvToNum
}
cleanedDF <- cbind(subinfo,Values) %>% na.omit() %>% select(-c("Subjects"))
return (cleanedDF)
}
TableOutput <- function(df){
knitr::kable(df, row.names=F) %>% kable_styling(bootstrap_options =  c("striped", "hover", "condensed")) %>% scroll_box(width = "600px", height = "300px")
}
# TableOutput <- function(df, style, width, height, caption){
#
#   if (style == "classic"){
#       knitr::kable(df, row.names=F) %>% kable_classic(full_width = F, html_font = "Cambria")
#   } else {
#       knitr::kable(df, row.names=F) %>% kable_styling(bootstrap_options =  c("striped", "hover", "condensed")) %>% scroll_box(width = paste0(width,"px"), height = paste0(height,"px"))
#
#   }
#
# }
# Let's check out normality
p1 <- ggplot(m_subinfo, aes(x=loop_de_avg_degree)) +geom_histogram(bins=10,fill="#028476") +labs(title="male")
shapiro.test(m_subinfo$loop_de_avg_degree) %>% broom::tidy() %>% knitr::kable() %>%  kable_styling()
p2 <- ggplot(m_subinfo, aes(x=loop_ae_rad3_degree)) +geom_histogram(bins=10,fill="#028476") +labs(title="male")
shapiro.test(m_subinfo$loop_de_rad3_degree)%>% broom::tidy() %>% knitr::kable() %>%  kable_styling()
grid.arrange(p1, p2, nrow = 1)
p2 <- ggplot(m_subinfo, aes(x=loop_de_rad3_degree)) +geom_histogram(bins=10,fill="#028476") +labs(title="male")
shapiro.test(m_subinfo$loop_de_rad3_degree)%>% broom::tidy() %>% knitr::kable() %>%  kable_styling()
grid.arrange(p1, p2, nrow = 1)
p3 <- ggplot(f_subinfo, aes(x=loop_de_avg_degree)) +geom_histogram(bins=10,fill="#FB6B90")+labs(title="female")
shapiro.test(f_subinfo$loop_de_avg_degree) %>% broom::tidy() %>% knitr::kable() %>%  kable_styling()
p4 <- ggplot(f_subinfo, aes(x=loop_de_rad3_degree)) +geom_histogram(bins=10,fill="#FB6B90")+labs(title="female")
shapiro.test(f_subinfo$loop_de_rad3_degree) %>% broom::tidy() %>% knitr::kable() %>%  kable_styling()
grid.arrange(p3,p4, nrow = 1)
t.test(m_subinfo$loop_de_avg_degree,f_subinfo$loop_de_avg_degree) %>% broom::tidy() %>% knitr::kable() %>%  kable_styling(full_width = F)
wilcox.test(m_subinfo$loop_de_rad3_degree,f_subinfo$loop_de_rad3_degree) %>% broom::tidy() %>% knitr::kable() %>%  kable_styling(full_width = F)
mean(m_subinfo$loop_de_avg_degree)
class(m_subinfo$loop_de_avg_degree)
class(m_subinfo$loop_de_avg_degree)
mean(m_subinfo$loop_de_avg_degree)
mean(m_subinfo$loop_de_avg_degree,na.rm = TRUE)
