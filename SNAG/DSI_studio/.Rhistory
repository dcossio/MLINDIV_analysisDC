library(ggplot2)
#(plyr)
library(tidyverse)
# library(dplyr)
# library(tidyr)
library(stringr)
library(kableExtra)
# library(data.table)
# library(network)
# library(tidygraph)
# library(ggraph)
# library(igraph)
# library(networkD3)
# library(CINNA)
# library(umap)
# library(plotly)
#library(factoextra)
#library(lsr)
# library(car)
library(ggpubr)
#library(entropy)
#library(ds4psy)
# library(pROC)
#library(devtools)
#library(BRRR)
#library(stats)
#library(afex)
library(knitr)
library(janitor)
library(car)
library(ggiraph)
library(ggiraphExtra)
library(moonBook)
library(nationalparkcolors)
library(gridExtra)
library(markdown)
working_dir <-"/Users/danielacossio/Documents/Chrastil_Lab/Projects/SNAG/DSI/Maze/"
# PE_working_dir <- "/Users/danielacossio/Library/CloudStorage/GoogleDrive-dcossio1@uci.edu/My Drive/White matter tract/MidlifeWM_DSI2023/DSI/maze/Path_eff/"
rows2grab <- c("Tract Name", "number of tracts","mean length(mm)", "total volume(mm^3)")
sub_info <- read.csv(paste0(working_dir,"MazeDSI.csv"))
ReadingCSVFunc <- function(pathname){
read.delim(paste0(working_dir, pathname), header=FALSE,sep = "\t")
}
CleanInput <- function(DF){
DF <- DF %>% remove_empty("cols")
if(length(DF) < 3){
DF <- DF %>%
filter(V1 %in% rows2grab) %>%
t() %>%
`colnames<-`(rows2grab) %>%
as.data.frame() %>%
`[`(-c(1),)
} else{
DF <- DF %>%
filter(V1 %in% rows2grab) %>%
t() %>%
`colnames<-`(rows2grab) %>%
`[`(-c(1),) %>%
as.data.frame()
}
return(DF)
}
Extract_raw_values <- function(DF,Metric) {
# Purpose of this function is to clean the data without me having to copy and paste everything later.
# Data = raw unclean dataframe we want to clean up
# Metric will be either MD or QA
# sex is either male or female
# Let's read in our data frame
colNames <- DF  %>% remove_empty("cols") %>%
filter(V1 == "Tract Name") %>% t() %>% `[`(-1)
# grab  ROIcolumn names
subinfo <- sub_info  %>% select(c("subject_id", "sex", "age_scan_years", "loop_pe_rad3_m", "loop_de_rad3_degree","REPO"))
# Let's grab our values
if (Metric == "MD"){
Values <- DF %>% remove_empty("cols") %>%
filter(str_detect(V1, c("mean_md"))) %>%
`colnames<-`(c("Subjects",colNames)) %>% filter(!str_detect(Subjects, c("sub-369")))
}
else{
Values <- DF %>%
remove_empty("cols") %>%
filter(str_detect(V1, c("mean_qa"))) %>%
`colnames<-`(c("Subjects",colNames)) %>% filter(!str_detect(Subjects, c("sub-369")))
}
# now let's put this together
if (length(Values) < 3) {
Values[,2] <- as.numeric(Values[,2])
}else{
ConvToNum <-  apply(Values[,2:length(Values)],2, as.numeric)
Values[,2:length(Values)] <- ConvToNum
}
cleanedDF <- cbind(subinfo,Values) %>% na.omit() %>% select(-c("Subjects"))
return (cleanedDF)
}
TableOutput <- function(df){
knitr::kable(df, row.names=F) %>% kable_styling(bootstrap_options =  c("striped", "hover", "condensed")) %>% scroll_box(width = "600px", height = "300px")
}
# TableOutput <- function(df, style, width, height, caption){
#
#   if (style == "classic"){
#       knitr::kable(df, row.names=F) %>% kable_classic(full_width = F, html_font = "Cambria")
#   } else {
#       knitr::kable(df, row.names=F) %>% kable_styling(bootstrap_options =  c("striped", "hover", "condensed")) %>% scroll_box(width = paste0(width,"px"), height = paste0(height,"px"))
#
#   }
#
# }
TableOutput(CleanInput(ReadingCSVFunc("NO_FNAME/QA/All/QA_NOFNAME_all.csv")))
TableOutput(CleanInput(ReadingCSVFunc("NO_FNAME/QA/female/QA_NOFNAME_female_2.csv")))
TableOutput(CleanInput(ReadingCSVFunc("NO_FNAME/QA/post/QA_NOFNAME_post_dec.csv")))
TableOutput(CleanInput(ReadingCSVFunc("FNAME/MD/male/MD_FNAME_male_inc.csv")))
TableOutput(CleanInput(ReadingCSVFunc("FNAME/MD/peri/MD_FNAME_peri.csv")))
TableOutput(CleanInput(ReadingCSVFunc("NO_FNAME/MD/pre/MD_NOFNAME_pre.csv")))
library(ggplot2)
#(plyr)
library(tidyverse)
# library(dplyr)
# library(tidyr)
library(stringr)
library(kableExtra)
# library(data.table)
# library(network)
# library(tidygraph)
# library(ggraph)
# library(igraph)
# library(networkD3)
# library(CINNA)
# library(umap)
# library(plotly)
#library(factoextra)
#library(lsr)
# library(car)
library(ggpubr)
#library(entropy)
#library(ds4psy)
# library(pROC)
#library(devtools)
#library(BRRR)
#library(stats)
#library(afex)
library(knitr)
library(janitor)
library(car)
library(ggiraph)
library(ggiraphExtra)
library(moonBook)
library(nationalparkcolors)
library(gridExtra)
library(markdown)
library(psych)
library(ppcor)
library(mediation)
library(ggplot2)
#(plyr)
library(tidyverse)
# library(dplyr)
# library(tidyr)
library(stringr)
library(kableExtra)
# library(data.table)
# library(network)
# library(tidygraph)
# library(ggraph)
# library(igraph)
# library(networkD3)
# library(CINNA)
# library(umap)
# library(plotly)
#library(factoextra)
#library(lsr)
# library(car)
library(ggpubr)
#library(entropy)
#library(ds4psy)
# library(pROC)
#library(devtools)
#library(BRRR)
#library(stats)
#library(afex)
library(knitr)
library(janitor)
library(car)
library(ggiraph)
library(ggiraphExtra)
library(moonBook)
library(nationalparkcolors)
library(gridExtra)
library(markdown)
library(psych)
library(ppcor)
library(mediation)
ReadingCSVFunc <- function(pathname){
read.delim(paste0(working_dir, pathname), header=FALSE,sep = "\t")
}
CleanInput <- function(DF){
DF <- DF %>%
remove_empty("cols") %>%
filter(V1 %in% rows2grab) %>%
t() %>%
`colnames<-`(rows2grab) %>%
`[`(-c(1),) %>%
as.data.frame()
return(DF)
}
Extract_raw_values <- function(DF,Metric) {
# Purpose of this function is to clean the data without me having to copy and paste everything later.
# Data = raw unclean dataframe we want to clean up
# Metric will be either MD or QA
# sex is either male or female
# Let's read in our data frame
# grab  ROIcolumn names
colNames <- DF  %>% remove_empty("cols") %>%
filter(V1 == "Tract Name") %>% t() %>% `[`(-1)
subinfo <- sub_info  %>% select(c("subject_id", "sex", "age_scan_years", "maze_accuracy_pct"))
# Let's grab our values
if (Metric == "MD"){
Values <- DF %>% remove_empty("cols") %>%
filter(str_detect(V1, c("mean_md"))) %>%
`colnames<-`(c("Subjects",colNames))
}
else{
Values <- DF %>%
remove_empty("cols") %>%
filter(str_detect(V1, c("mean_qa"))) %>%
`colnames<-`(c("Subjects",colNames)) %>% filter(!str_detect(Subjects, c("sub-369")))
}
# now let's put this together
ConvToNum <-  apply(Values[,2:length(Values)],2, as.numeric)
Values[,2:length(Values)] <- ConvToNum
cleanedDF <- cbind(subinfo,Values) %>% na.omit() %>% select(-c("Subjects"))
return (cleanedDF)
}
TableOutput <- function(df){
knitr::kable(df, row.names=F) %>%
kable_styling(bootstrap_options =  c("striped", "hover", "condensed")) %>%
scroll_box(width = "800px", height = "300px")
}
working_dir <- "/Users/danielacossio/Documents/Chrastil_Lab/Projects/SNAG/DSI_rerun_data/DSP/"
rows2grab <- c("Tract Name", "number of tracts","mean length(mm)","diameter(mm)", "volume(mm^3)")
All_sub_info <- read.csv("/Users/danielacossio/Documents/Chrastil_Lab/Projects/SNAG/sub_info_sheets/SNAG_Behavior.csv") # This is a sheet that has all of the subjects with at least one usable behavior task (Loop, maze, dsp)
DSP_DSI_DF <- read.csv("/Users/danielacossio/Documents/Chrastil_Lab/Projects/SNAG/sub_info_sheets/SNAG_DSP_scans.csv") %>% filter(!is.na(subject_id)) # This is from the main subject sheet and includes all subjects that have a dsp score AND should have a scan with them
# This is a data frame which cotains a folder for each subject with 2 text files
path2data <- ("/Users/danielacossio/Documents/Chrastil_Lab/Projects/SNAG/mediation_test_data/data_from_Midlife_20230103")
# List of all subject directories
subfiles <- list.dirs("/Users/danielacossio/Documents/Chrastil_Lab/Projects/SNAG/mediation_test_data/data_from_Midlife_20230103", full.names = FALSE,recursive = FALSE) # all of the data extracted from dsi
# create an empty dataframe to loop into
fornix_output_df <-  data.frame(matrix(ncol = 5, nrow = 0)) %>% `colnames<-`(c("subjects","QA_L_fornix","QA_R_fornix","MD_L_fornix","MD_R_fornix"))
# creating a loop to go into each sub dir. read in each txt file and extract the
for(file in 1:length((subfiles))){
# creating an empty single row dataframe
empty_loop_df <- data.frame(matrix(ncol = 5, nrow = 1))  %>% `colnames<-`(c("subjects","QA_L_fornix","QA_R_fornix","MD_L_fornix","MD_R_fornix"))
# inputting the subject id
empty_loop_df$subjects <- str_remove(subfiles[file],"sub-")
# Let's do a quick folder check to make sure it's not empty
if(file.size(paste0(path2data,"/",subfiles[file])) < 128) next
#grabbing all the left and right variables
L_fornix <- read_delim(paste0(path2data,"/",subfiles[file],"/",subfiles[file],"_space-T1w_desc-preproc_dwi.ProjectionBasalGanglia_FornixL.stat.txt"),col_names = FALSE) %>% filter(X1 %in% c("qa","md"))
R_fornix <- read_delim(paste0(path2data,"/",subfiles[file],"/",subfiles[file],"_space-T1w_desc-preproc_dwi.ProjectionBasalGanglia_FornixR.stat.txt"),col_names = FALSE) %>% filter(X1 %in% c("qa","md"))
# Putting them into out dataframe
#Grab all QA values
empty_loop_df$QA_L_fornix <- L_fornix$X2[1] # row 1 is QA
empty_loop_df$QA_R_fornix <- R_fornix$X2[1]
empty_loop_df$MD_L_fornix <- L_fornix$X2[2] # row 2 is MD
empty_loop_df$MD_R_fornix <- R_fornix$X2[2]
fornix_output_df <- rbind(fornix_output_df,empty_loop_df)
}
# now we have to grab the information from sub info and combine but we need to make sure we're grabbing all the correct subjects from each dataframe. Something to note is that this final fornix data frame is based off of scans and includes some people who do not have a DSP score
altered_sub_info <- DSP_DSI_DF %>% filter(subject_id %in% c(fornix_output_df$subjects))
fornix_output_df <- fornix_output_df %>%  filter(subjects %in% c(DSP_DSI_DF$subject_id))
clean_DF <- cbind(altered_sub_info,fornix_output_df)
clean_DF$QA_Whole_Fornix <- rowMeans(clean_DF[,c("QA_L_fornix","QA_R_fornix")])
clean_DF$MD_Whole_Fornix <- rowMeans(clean_DF[,c("MD_L_fornix","MD_R_fornix")])
data_dsp <- All_sub_info %>% filter(dsp_useable == "Yes") %>% filter(subject_id < 500) # dataframe with all subjects that have usable DSP
ggplot(data_dsp, aes(x=dsp_si_true_pct)) +
geom_bar(width = 0.1)
shapiro.test(data_dsp$dsp_si_true_pct)
mediation_estradiol_DF <- clean_DF %>% dplyr::select(subject_id,sex,age_spatial_years,repo_status,dsp_si_true_pct,estradiol_scan_pg_ml,estradiol_spatial_pg_ml, progesterone_scan_ng_ml,testosterone_scan_ng_dl,fsh_scan_miu_ml,QA_L_fornix,QA_R_fornix,MD_L_fornix,MD_R_fornix, MD_Whole_Fornix, QA_Whole_Fornix) %>% filter(!is.na(dsp_si_true_pct )) %>% filter(!is.na(estradiol_spatial_pg_ml)) %>% filter(sex== "Female")
fsh <- f_data_dsp %>% filter(is.na(fsh_spatial_miu_ml) != TRUE)
f_data_dsp_outlier_e <- f_data_dsp  %>%  filter(!subject_id %in% c(
"415", "355"))
f_data_dsp <- data_dsp %>% filter(sex == "Female") # Women only
ggplot(f_data_dsp, aes(x=dsp_si_true_pct)) +
geom_bar(width = 0.1)
shapiro.test(f_data_dsp$dsp_si_true_pct)
df_dsp_norm <- f_data_dsp %>%
mutate_at(scale, .vars = vars(estradiol_spatial_pg_ml,
fsh_spatial_miu_ml,
dsp_si_true_pct))
f_data_dsp_outlier_e <- f_data_dsp  %>%  filter(!subject_id %in% c(
"415", "355"))
cor.test(f_data_dsp_outlier_e$estradiol_spatial_pg_ml,
f_data_dsp_outlier_e$dsp_si_true_pct,
alternative = "greater",
conf.level = 0.95,
method = "spearman") #p-value:0.003529
fsh <- f_data_dsp %>% filter(is.na(fsh_spatial_miu_ml) != TRUE)
cor.test(fsh$fsh_spatial_miu_ml,
fsh$dsp_si_true_pct,
conf.level = 0.95,
alternative = "less",
method = "spearman")
pcor.test(fsh$fsh_spatial_miu_ml,
fsh$dsp_si_true_pct,
fsh$age_spatial_years,
method = "spearman")
fsh <- f_data_dsp %>% filter(is.na(fsh_spatial_miu_ml) != TRUE)
cor.test(fsh$fsh_spatial_miu_ml,
fsh$dsp_si_true_pct,
conf.level = 0.95,
alternative = "less",
method = "spearman")
pcor.test(fsh$fsh_spatial_miu_ml,
fsh$dsp_si_true_pct,
fsh$age_spatial_years,
method = "spearman")
x <- f_data_dsp$fsh_spatial_miu_ml
y <- f_data_dsp$dsp_si_true_pct
z <- f_data_dsp$age_spatial_years
cor.test(lm(x ~ z)$residuals,
lm(y ~ z)$residuals,
alternative = "less",
conf.level = 0.95,
method = "spearman")
x <- f_data_dsp$fsh_spatial_miu_ml
y <- f_data_dsp$dsp_si_true_pct
z <- f_data_dsp$age_spatial_years
cor.test(lm(x ~ z)$residuals,
lm(y ~ z)$residuals,
alternative = "less",
conf.level = 0.95,
method = "spearman")
length(x)
length(y)
length(z)
lm(x ~ z)$residuals
length(lm(x ~ z)$residuals)
length(lm(y ~ z)$residuals)
w <- lm(x ~ z)$residuals
y <- lm(y ~ z)$residuals
t <- lm(y ~ z)$residuals
y <- f_data_dsp$dsp_si_true_pct
as.data.frame(t)
t <- as.data.frame(t)
View(t)
w <- as.data.frame(w)
View(w)
x <- as.data.frame()
x <- as.data.frame(x)
View(x)
View(fsh)
View(w)
View(t)
summary(lm(y ~ z))
summary(lm(x~ z))
summary(lm(x ~ z))
x <- f_data_dsp$fsh_spatial_miu_ml
summary(lm(x ~ z))
x
x <- fsh$fsh_spatial_miu_ml
y <- fsh$dsp_si_true_pct
z <- fsh$age_spatial_years
z <- fsh$age_spatial_years
cor.test(lm(x ~ z)$residuals,
lm(y ~ z)$residuals,
alternative = "less",
conf.level = 0.95,
method = "spearman")
cor.test(fsh$fsh_spatial_miu_ml,
fsh$dsp_si_true_pct,
conf.level = 0.95,
alternative = "less",
method = "spearman")
pcor.test(fsh$fsh_spatial_miu_ml,
fsh$dsp_si_true_pct,
fsh$age_spatial_years,
method = "spearman")
x <- fsh$fsh_spatial_miu_ml
y <- fsh$dsp_si_true_pct
z <- fsh$age_spatial_years
cor.test(lm(x ~ z)$residuals,
lm(y ~ z)$residuals,
alternative = "less",
conf.level = 0.95,
method = "spearman")
model.2 <- lm(estradiol_scan_pg_ml  ~ MD_Whole_Fornix, mediation_estradiol_DF)
summary(model.2)
model.2 <- lm(estradiol_spatial_pg_ml  ~ MD_Whole_Fornix, mediation_estradiol_DF)
summary(model.2)
all_women_clean_df <- clean_DF %>% filter(sex=="Female")
ggplot(all_women_clean_df, aes(x=dsp_si_true_pct)) +
geom_bar(width = 0.1)
shapiro.test(all_women_clean_df$dsp_si_true_pct)
View(all_women_clean_df)
ggplot(data=all_women_clean_df, aes(x=estradiol_scan_pg_ml)
ggplot(data=all_women_clean_df, aes(x=estradiol_scan_pg_ml))
ggplot(data=all_women_clean_df, aes(x=estradiol_scan_pg_ml)) +
geom_density()
ggplot(data=all_women_clean_df, aes(x=estradiol_scan_pg_ml)) +
geom_density()
ggplot(data=all_women_clean_df, aes(x=estradiol_spatial_pg_ml)) +
geom_density()
hormones_df <- all_women_clean_df %>% select(subject_id,estradiol_scan_pg_ml,estradiol_spatial_pg_ml,progesterone_scan_ng_ml,progesterone_spatial_ng_ml,fsh_scan_miu_ml,fsh_spatial_miu_ml)
hormones_df <- all_women_clean_df %>% select(subject_id,estradiol_scan_pg_ml,estradiol_spatial_pg_ml,progesterone_scan_ng_ml,progesterone_spatial_ng_ml,fsh_scan_miu_ml,fsh_spatial_miu_ml)
hormones_df <- all_women_clean_df %>% select("subject_id","estradiol_scan_pg_ml","estradiol_spatial_pg_ml","progesterone_scan_ng_ml","progesterone_spatial_ng_ml","fsh_scan_miu_ml","fsh_spatial_miu_ml")
hormones_df <- all_women_clean_df %>% select("subject_id","estradiol_scan_pg_ml","estradiol_spatial_pg_ml","progesterone_scan_ng_ml","progesterone_spatial_ng_ml","fsh_scan_miu_ml","fsh_spatial_miu_ml")
hormones_df <- all_women_clean_df %>% select(subject_id,estradiol_scan_pg_ml,estradiol_spatial_pg_ml,progesterone_scan_ng_ml,progesterone_spatial_ng_ml,fsh_scan_miu_ml,fsh_spatial_miu_ml)
hormones_df <- all_women_clean_df %>% select(c("subject_id","estradiol_scan_pg_ml","estradiol_spatial_pg_ml","progesterone_scan_ng_ml","progesterone_spatial_ng_ml","fsh_scan_miu_ml","fsh_spatial_miu_ml"))
hormones_df <- all_women_clean_df %>% select(c("subject_id","estradiol_scan_pg_ml","estradiol_spatial_pg_ml","progesterone_scan_ng_ml","progesterone_spatial_ng_ml","fsh_scan_miu_ml","fsh_spatial_miu_ml"))
hormones_df <- all_women_clean_df %>% dplyr::select(c("subject_id","estradiol_scan_pg_ml","estradiol_spatial_pg_ml","progesterone_scan_ng_ml","progesterone_spatial_ng_ml","fsh_scan_miu_ml","fsh_spatial_miu_ml"))
View(hormones_df)
ggplot(data=all_women_clean_df, aes(x=estradiol_scan_pg_ml)) +
geom_bar()
ggplot(data=all_women_clean_df, aes(x=estradiol_scan_pg_ml)) +
geom_density()
ggplot(data=all_women_clean_df, aes(x=estradiol_scan_pg_ml,y=subject_id)) +
geom_density()
ggplot(data=all_women_clean_df, aes(x=estradiol_scan_pg_ml,y=subject_id)) +
geom_bar()
ggplot(data=all_women_clean_df, aes(x=subject_id,y=estradiol_scan_pg_ml)) +
geom_bar()
ggplot(data=all_women_clean_df, aes(x=subject_id,y=estradiol_scan_pg_ml))
ggplot(data=all_women_clean_df, aes(x=estradiol_scan_pg_ml))
geom_density()
ggplot(data=all_women_clean_df, aes(x=estradiol_spatial_pg_ml)) +
geom_density()
ggplot(data=all_women_clean_df, aes(x=estradiol_scan_pg_ml))
geom_density()
hormones_df <- all_women_clean_df %>% dplyr::select(c("subject_id","estradiol_scan_pg_ml","estradiol_spatial_pg_ml","progesterone_scan_ng_ml","progesterone_spatial_ng_ml","fsh_scan_miu_ml","fsh_spatial_miu_ml"))
ggplot(data=all_women_clean_df, aes(x=estradiol_scan_pg_ml))
geom_density()
ggplot(data=all_women_clean_df, aes(x=estradiol_spatial_pg_ml)) +
geom_density()
ggplot(data=all_women_clean_df, aes(x=estradiol_scan_pg_ml)) +
geom_density()
ggplot(data=all_women_clean_df, aes(x=estradiol_spatial_pg_ml)) +
geom_density()
```{r}
model.2 <- lm(dsp_si_true_pct ~ fsh_scan_miu_ml, mediation_FSH_DF)
cor.test(fsh$fsh_scan_miu_ml,
fsh$dsp_si_true_pct,
conf.level = 0.95,
alternative = "less",
method = "spearman")
cor.test(f_data_dsp$estradiol_scan_pg_ml,
f_data_dsp$dsp_si_true_pct,
conf.level = 0.95,
alternative = "greater",
method = "spearman")
cor.test(f_data_dsp$estradiol_spatial_pg_ml,
f_data_dsp$dsp_si_true_pct,
conf.level = 0.95,
alternative = "greater",
method = "spearman")
pcor.test(f_data_dsp$estradiol_scan_pg_ml,
f_data_dsp$dsp_si_true_pct,
f_data_dsp$age_spatial_years,
method = "spearman")
pcor.test(f_data_dsp$estradiol_scan_pg_ml,
f_data_dsp$dsp_si_true_pct,
f_data_dsp$age_spatial_years,
method = "spearman")
pcor.test(f_data_dsp$estradiol_spatial_pg_ml,
f_data_dsp$dsp_si_true_pct,
f_data_dsp$age_spatial_years,
method = "spearman") #p-value=0.02876795
pcor.test(f_data_dsp$estradiol_scan_pg_ml,
f_data_dsp$dsp_si_true_pct,
f_data_dsp$age_spatial_years,
method = "spearman")
cor.test(f_data_dsp_outlier_e$estradiol_scan_pg_ml,
f_data_dsp_outlier_e$dsp_si_true_pct,
alternative = "greater",
conf.level = 0.95,
method = "spearman")
cor.test(f_data_dsp_outlier_e$estradiol_spatial_pg_ml,
f_data_dsp_outlier_e$dsp_si_true_pct,
alternative = "greater",
conf.level = 0.95,
method = "spearman")
cor.test(f_data_dsp_outlier_e$estradiol_scan_pg_ml,
f_data_dsp_outlier_e$dsp_si_true_pct,
alternative = "greater",
conf.level = 0.95,
method = "spearman")
model.1 <- lm(  dsp_si_true_pct ~  MD_Whole_Fornix , mediation_estradiol_DF)
summary(model.1)
model.2 <- lm(estradiol_spatial_pg_ml  ~ MD_Whole_Fornix, mediation_estradiol_DF)
summary(model.2)
model.1 <- lm(dsp_si_true_pct ~ MD_Whole_Fornix , mediation_FSH_DF)
mediation_estradiol_DF <- clean_DF %>% dplyr::select(subject_id,sex,age_spatial_years,repo_status,dsp_si_true_pct,estradiol_scan_pg_ml,estradiol_spatial_pg_ml, progesterone_scan_ng_ml,testosterone_scan_ng_dl,fsh_scan_miu_ml,QA_L_fornix,QA_R_fornix,MD_L_fornix,MD_R_fornix, MD_Whole_Fornix, QA_Whole_Fornix) %>% filter(!is.na(dsp_si_true_pct )) %>% filter(!is.na(estradiol_spatial_pg_ml)) %>% filter(sex== "Female")
mediation_test_DF <- clean_DF %>% dplyr::select(subject_id,sex,age_spatial_years,repo_status,dsp_si_true_pct,estradiol_scan_pg_ml,progesterone_scan_ng_ml,testosterone_scan_ng_dl,fsh_scan_miu_ml,QA_L_fornix,QA_R_fornix,MD_L_fornix,MD_R_fornix) %>% filter(!is.na(dsp_si_true_pct )) %>% filter(!is.na(testosterone_scan_ng_dl)) %>% filter(sex== "Female")
mediation_FSH_DF <- clean_DF %>% dplyr::select(subject_id,sex,age_spatial_years,repo_status,dsp_si_true_pct,estradiol_scan_pg_ml,progesterone_scan_ng_ml,testosterone_scan_ng_dl,fsh_scan_miu_ml,fsh_spatial_miu_ml,QA_L_fornix,QA_R_fornix,MD_L_fornix,MD_R_fornix,MD_Whole_Fornix, QA_Whole_Fornix) %>% filter(!is.na(dsp_si_true_pct )) %>% filter(!is.na(fsh_scan_miu_ml)) %>% filter(sex== "Female")
model.1 <- lm(dsp_si_true_pct ~ MD_Whole_Fornix , mediation_FSH_DF)
summary(model.1)
model.2 <- lm(dsp_si_true_pct ~ fsh_spatial_miu_ml, mediation_FSH_DF)
summary(model.2)
model.2 <- lm(fsh_spatial_miu_ml ~ MD_Whole_Fornix , mediation_FSH_DF)
summary(model.2)
model.2 <- lm(fsh_spatial_miu_ml ~ MD_Whole_Fornix , mediation_FSH_DF)
summary(model.2)
model.2 <- lm(estradiol_spatial_pg_ml  ~ dsp_si_true_pct, mediation_estradiol_DF)
summary(model.2)
model.2 <- lm(estradiol_spatial_pg_ml  ~ dsp_si_true_pct, mediation_estradiol_DF)
summary(model.2)
model.2 <- lm(dsp_si_true_pct  ~ estradiol_spatial_pg_ml, mediation_estradiol_DF)
summary(model.2)
model.2 <- lm(estradiol_spatial_pg_ml  ~ MD_Whole_Fornix , mediation_estradiol_DF)
summary(model.2)
model.2 <- lm(estradiol_spatial_pg_ml  ~ MD_Whole_Fornix , mediation_estradiol_DF)
summary(model.2)
model.2 <- lm(fsh_spatial_miu_ml ~ MD_Whole_Fornix , mediation_FSH_DF)
summary(model.2)
