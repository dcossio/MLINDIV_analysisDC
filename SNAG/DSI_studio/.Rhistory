axis.line = element_line(colour = "black"))+
ylim(min(figDF$maze_accuracy_pct), max(figDF$maze_accuracy_pct))+
annotate("text", label = "FDR< 0.0001 ", x = 0.25 , y = 0.9, color="#00cdff", size=4) +
annotate("text", label = "FDR<0.001", x = 0.25 , y = 0.8, color="#de5285", size=4)
dev.off()
tiff("CorticoSpinalL.noFNAME.tiff", units="in", width=5, height=3, res=300)
ggplot(figDF,aes(y=maze_accuracy_pct,x=Corticospinal_Tract_L,color=sex,1))+geom_point() +
stat_smooth(method="lm", se=FALSE)+
scale_color_manual(values = c('#de5285','#00cdff')) +
labs( x = "CorticoSpinalR.",
y = "% Correct")+
scale_y_continuous(breaks=c(0,1)) +
theme(
axis.title.x = element_text(vjust = -2, size = 16),
axis.title.y = element_text(vjust = 4, size = 16),
axis.text.x = element_text(size = 12, color="black"),
axis.text.y = element_text(size = 12,color="black"),
panel.background = element_blank(),
panel.grid.major = element_blank(),
axis.line = element_line(colour = "black"))+
ylim(min(figDF$maze_accuracy_pct), max(figDF$maze_accuracy_pct))+
annotate("text", label = "FDR< 0.0001 ", x = 0.35 , y = 0.9, color="#00cdff", size=4) +
annotate("text", label = "FDR<0.001", x = 0.3 , y = 0.8, color="#de5285", size=4)
dev.off()
tiff("CorticoSpinalL.noFNAME.tiff", units="in", width=5, height=3, res=300)
ggplot(figDF,aes(y=maze_accuracy_pct,x=Corticospinal_Tract_L,color=sex,1))+geom_point() +
stat_smooth(method="lm", se=FALSE)+
scale_color_manual(values = c('#de5285','#00cdff')) +
labs( x = "CorticoSpinalR.",
y = "% Correct")+
scale_y_continuous(breaks=c(0,1)) +
theme(
axis.title.x = element_text(vjust = -2, size = 16),
axis.title.y = element_text(vjust = 4, size = 16),
axis.text.x = element_text(size = 12, color="black"),
axis.text.y = element_text(size = 12,color="black"),
panel.background = element_blank(),
panel.grid.major = element_blank(),
axis.line = element_line(colour = "black"))+
ylim(min(figDF$maze_accuracy_pct), max(figDF$maze_accuracy_pct))+
annotate("text", label = "FDR< 0.0001 ", x = 0.25 , y = 0.9, color="#00cdff", size=4) +
annotate("text", label = "FDR<0.001", x = 0.25 , y = 0.8, color="#de5285", size=4)
dev.off()
tiff("CorticoSpinalL.noFNAME.tiff", units="in", width=5, height=3, res=300)
ggplot(figDF,aes(y=maze_accuracy_pct,x=Corticospinal_Tract_L,color=sex,1))+geom_point() +
stat_smooth(method="lm", se=FALSE)+
scale_color_manual(values = c('#de5285','#00cdff')) +
labs( x = "CorticoSpinalR.",
y = "% Correct")+
scale_y_continuous(breaks=c(0,1)) +
theme(
axis.title.x = element_text(vjust = -2, size = 16),
axis.title.y = element_text(vjust = 4, size = 16),
axis.text.x = element_text(size = 12, color="black"),
axis.text.y = element_text(size = 12,color="black"),
panel.background = element_blank(),
panel.grid.major = element_blank(),
axis.line = element_line(colour = "black"))+
ylim(min(figDF$maze_accuracy_pct), max(figDF$maze_accuracy_pct))+
annotate("text", label = "FDR< 0.0001 ", x = 0.26 , y = 0.9, color="#00cdff", size=4) +
annotate("text", label = "FDR<0.001", x = 0.25 , y = 0.8, color="#de5285", size=4)
dev.off()
tiff("CorticoSpinalL.noFNAME.tiff", units="in", width=5, height=3, res=300)
ggplot(figDF,aes(y=maze_accuracy_pct,x=Corticospinal_Tract_L,color=sex,1))+geom_point() +
stat_smooth(method="lm", se=FALSE)+
scale_color_manual(values = c('#de5285','#00cdff')) +
labs( x = "CorticoSpinalR.",
y = "% Correct")+
scale_y_continuous(breaks=c(0,1)) +
theme(
axis.title.x = element_text(vjust = -2, size = 16),
axis.title.y = element_text(vjust = 4, size = 16),
axis.text.x = element_text(size = 12, color="black"),
axis.text.y = element_text(size = 12,color="black"),
panel.background = element_blank(),
panel.grid.major = element_blank(),
axis.line = element_line(colour = "black"))+
ylim(min(figDF$maze_accuracy_pct), max(figDF$maze_accuracy_pct))+
annotate("text", label = "FDR< 0.0001 ", x = 0.255 , y = 0.9, color="#00cdff", size=4) +
annotate("text", label = "FDR<0.001", x = 0.25 , y = 0.8, color="#de5285", size=4)
dev.off()
tiff("REPOCorticoSpinalR.tiff", units="in", width=5, height=3, res=300)
figDF %>% filter(REPO != 0) %>%  ggplot(aes(y=maze_accuracy_pct,x=Corticospinal_Tract_R,color=factor(REPO),1))+geom_point() +
stat_smooth(method="lm", se=FALSE)+
scale_color_manual(values = c('#de5285','#00cdff','#f4a2d0')) +
labs( x = "CorticoSpinalR.",
y = "% Correct")+
scale_y_continuous(breaks=c(0,1)) +
theme(
axis.title.x = element_text(vjust = -2, size = 16),
axis.title.y = element_text(vjust = 4, size = 16),
axis.text.x = element_text(size = 12, color="black"),
axis.text.y = element_text(size = 12,color="black"),
panel.background = element_blank(),
panel.grid.major = element_blank(),
axis.line = element_line(colour = "black"))+
ylim(min(figDF$maze_accuracy_pct), max(figDF$maze_accuracy_pct))
dev.off()
ggplot(figDF,aes(y=maze_accuracy_pct,x=Fornix_L,color=REPO))+geom_point() +
stat_smooth(method="lm", se=FALSE)+
scale_color_manual(values = c('#de5285','#00cdff','#f4a2d0'))+
labs( x = "Fornix L",
y = "% Correct")+
scale_y_continuous(breaks=c(0,1)) +
theme(
axis.title.x = element_text(vjust = -2, size = 16),
axis.title.y = element_text(vjust = 4, size = 16),
axis.text.x = element_text(size = 12, color="black"),
axis.text.y = element_text(size = 12,color="black"),
panel.background = element_blank(),
panel.grid.major = element_blank(),
axis.line = element_line(colour = "black"))+
ylim(min(figDF$maze_accuracy_pct), max(figDF$maze_accuracy_pct))+
annotate("text", label = "FDR= 0.018970 ", x = 1.8 , y = 0.9, color="#00cdff", size=4) +
annotate("text", label = "FDR= 0.241458", x = 1.8 , y = 0.8, color="#de5285", size=4)
figDF <- Extract_raw_values(ReadingCSVFunc("maze_acc/MD/noFNAME/newversion/maze.MD.all.pos.csv"), "MD") %>%  select(c("subject_id", "sex", "age_scan_years", "maze_accuracy_pct", "REPO", "Fornix_L", "Fornix_R"))
ggplot(figDF,aes(y=maze_accuracy_pct,x=Fornix_L,color=REPO))+geom_point() +
stat_smooth(method="lm", se=FALSE)+
scale_color_manual(values = c('#de5285','#00cdff','#f4a2d0'))+
labs( x = "Fornix L",
y = "% Correct")+
scale_y_continuous(breaks=c(0,1)) +
theme(
axis.title.x = element_text(vjust = -2, size = 16),
axis.title.y = element_text(vjust = 4, size = 16),
axis.text.x = element_text(size = 12, color="black"),
axis.text.y = element_text(size = 12,color="black"),
panel.background = element_blank(),
panel.grid.major = element_blank(),
axis.line = element_line(colour = "black"))+
ylim(min(figDF$maze_accuracy_pct), max(figDF$maze_accuracy_pct))+
annotate("text", label = "FDR= 0.018970 ", x = 1.8 , y = 0.9, color="#00cdff", size=4) +
annotate("text", label = "FDR= 0.241458", x = 1.8 , y = 0.8, color="#de5285", size=4)
ggplot(figDF,aes(y=maze_accuracy_pct,x=Fornix_L,color=factor(REPO)))+geom_point() +
stat_smooth(method="lm", se=FALSE)+
scale_color_manual(values = c('#de5285','#00cdff','#f4a2d0'))+
labs( x = "Fornix L",
y = "% Correct")+
scale_y_continuous(breaks=c(0,1)) +
theme(
axis.title.x = element_text(vjust = -2, size = 16),
axis.title.y = element_text(vjust = 4, size = 16),
axis.text.x = element_text(size = 12, color="black"),
axis.text.y = element_text(size = 12,color="black"),
panel.background = element_blank(),
panel.grid.major = element_blank(),
axis.line = element_line(colour = "black"))+
ylim(min(figDF$maze_accuracy_pct), max(figDF$maze_accuracy_pct))+
annotate("text", label = "FDR= 0.018970 ", x = 1.8 , y = 0.9, color="#00cdff", size=4) +
annotate("text", label = "FDR= 0.241458", x = 1.8 , y = 0.8, color="#de5285", size=4)
ggplot(figDF,aes(y=maze_accuracy_pct,x=Fornix_L,color=factor(REPO)))+geom_point() +
stat_smooth(method="lm", se=FALSE)
figDF <- Extract_raw_values(ReadingCSVFunc("maze_acc/MD/noFNAME/newversion/maze.MD.all.pos.csv"), "MD") %>%  select(c("subject_id", "sex", "age_scan_years", "maze_accuracy_pct", "REPO", "Fornix_L", "Fornix_R"))  %>% filter(REPO != 0)
ggplot(figDF,aes(y=maze_accuracy_pct,x=Fornix_L,color=factor(REPO)))+geom_point() +
stat_smooth(method="lm", se=FALSE)+
scale_color_manual(values = c('#de5285','#00cdff','#f4a2d0'))+
labs( x = "Fornix L",
y = "% Correct")+
scale_y_continuous(breaks=c(0,1)) +
theme(
axis.title.x = element_text(vjust = -2, size = 16),
axis.title.y = element_text(vjust = 4, size = 16),
axis.text.x = element_text(size = 12, color="black"),
axis.text.y = element_text(size = 12,color="black"),
panel.background = element_blank(),
panel.grid.major = element_blank(),
axis.line = element_line(colour = "black"))+
ylim(min(figDF$maze_accuracy_pct), max(figDF$maze_accuracy_pct))+
annotate("text", label = "FDR= 0.018970 ", x = 1.8 , y = 0.9, color="#00cdff", size=4) +
annotate("text", label = "FDR= 0.241458", x = 1.8 , y = 0.8, color="#de5285", size=4)
ggplot(figDF,aes(y=maze_accuracy_pct,x=Fornix_L,color=factor(REPO)))+geom_point() +
stat_smooth(method="lm", se=FALSE)+
scale_color_manual(values = c('#de5285','#00cdff','#f4a2d0'),labels = c("Pre", "Peri", "Post")))+
ggplot(figDF,aes(y=maze_accuracy_pct,x=Fornix_L,color=factor(REPO)))+geom_point() +
stat_smooth(method="lm", se=FALSE)+
scale_color_manual(values = c('#de5285','#00cdff','#f4a2d0'),labels = c("Pre", "Peri", "Post"))+
labs( x = "Fornix L",
y = "% Correct")+
scale_y_continuous(breaks=c(0,1)) +
theme(
axis.title.x = element_text(vjust = -2, size = 16),
axis.title.y = element_text(vjust = 4, size = 16),
axis.text.x = element_text(size = 12, color="black"),
axis.text.y = element_text(size = 12,color="black"),
panel.background = element_blank(),
panel.grid.major = element_blank(),
axis.line = element_line(colour = "black"))+
ylim(min(figDF$maze_accuracy_pct), max(figDF$maze_accuracy_pct))+
annotate("text", label = "FDR= 0.018970 ", x = 1.8 , y = 0.9, color="#00cdff", size=4) +
annotate("text", label = "FDR= 0.241458", x = 1.8 , y = 0.8, color="#de5285", size=4)
tiff("MD_fornixL.REPO.nofname.tiff", units="in", width=5, height=3, res=300)
ggplot(figDF,aes(y=maze_accuracy_pct,x=Fornix_L,color=factor(REPO)))+geom_point() +
stat_smooth(method="lm", se=FALSE)+
scale_color_manual(values = c('#de5285','#00cdff','#f4a2d0'),labels = c("Pre", "Peri", "Post"))+
labs( x = "Fornix L",
y = "% Correct")+
scale_y_continuous(breaks=c(0,1)) +
theme(
axis.title.x = element_text(vjust = -2, size = 16),
axis.title.y = element_text(vjust = 4, size = 16),
axis.text.x = element_text(size = 12, color="black"),
axis.text.y = element_text(size = 12,color="black"),
panel.background = element_blank(),
panel.grid.major = element_blank(),
axis.line = element_line(colour = "black"))+
ylim(min(figDF$maze_accuracy_pct), max(figDF$maze_accuracy_pct))+
annotate("text", label = "FDR< 0.001", x = 1.8 , y = 0.9, color="#de5285", size=4) +
annotate("text", label = "FDRFDR< 0.001", x = 1.8 , y = 0.8, color="#de5285", size=4)  +
annotate("text", label = "FDR<0.001", x = 1.8 , y = 0.8, color="#f4a2d0", size=4)
dev.off()
tiff("MD_fornixL.REPO.nofname.tiff", units="in", width=5, height=3, res=300)
ggplot(figDF,aes(y=maze_accuracy_pct,x=Fornix_L,color=factor(REPO)))+geom_point() +
stat_smooth(method="lm", se=FALSE)+
scale_color_manual(values = c('#de5285','#00cdff','#f4a2d0'),labels = c("Pre", "Peri", "Post"))+
labs( x = "Fornix L",
y = "% Correct")+
scale_y_continuous(breaks=c(0,1)) +
theme(
axis.title.x = element_text(vjust = -2, size = 16),
axis.title.y = element_text(vjust = 4, size = 16),
axis.text.x = element_text(size = 12, color="black"),
axis.text.y = element_text(size = 12,color="black"),
panel.background = element_blank(),
panel.grid.major = element_blank(),
axis.line = element_line(colour = "black"))+
ylim(min(figDF$maze_accuracy_pct), max(figDF$maze_accuracy_pct))+
annotate("text", label = "FDR< 0.001", x = 1.8 , y = 0.9, color="#de5285", size=4) +
annotate("text", label = "FDRFDR< 0.001", x = 1.8 , y = 0.8, color="#00cdff", size=4)  +
annotate("text", label = "FDR<0.001", x = 1.8 , y = 0.7, color="#f4a2d0", size=4)
dev.off()
tiff("MD_fornixL.REPO.nofname.tiff", units="in", width=5, height=3, res=300)
ggplot(figDF,aes(y=maze_accuracy_pct,x=Fornix_L,color=factor(REPO)))+geom_point() +
stat_smooth(method="lm", se=FALSE)+
scale_color_manual(values = c('#de5285','#00cdff','#f4a2d0'),labels = c("Pre", "Peri", "Post"))+
labs( x = "Fornix L",
y = "% Correct")+
scale_y_continuous(breaks=c(0,1)) +
theme(
axis.title.x = element_text(vjust = -2, size = 16),
axis.title.y = element_text(vjust = 4, size = 16),
axis.text.x = element_text(size = 12, color="black"),
axis.text.y = element_text(size = 12,color="black"),
panel.background = element_blank(),
panel.grid.major = element_blank(),
axis.line = element_line(colour = "black"))+
ylim(min(figDF$maze_accuracy_pct), max(figDF$maze_accuracy_pct))+
annotate("text", label = "FDR< 0.001", x = 1.8 , y = 0.9, color="#de5285", size=4) +
annotate("text", label = "FDR< 0.001", x = 1.8 , y = 0.8, color="#00cdff", size=4)  +
annotate("text", label = "FDR<0.001", x = 1.8 , y = 0.7, color="#f4a2d0", size=4)
dev.off()
tiff("MD_fornixL.REPO.nofname.tiff", units="in", width=5, height=3, res=300)
ggplot(figDF,aes(y=maze_accuracy_pct,x=Fornix_L,color=factor(REPO)))+geom_point() +
stat_smooth(method="lm", se=FALSE)+
scale_color_manual(values = c('#de5285','#00cdff','#f4a2d0'),labels = c("Pre", "Peri", "Post"))+
labs( x = "Fornix L",
y = "% Correct")+
scale_y_continuous(breaks=c(0,1)) +
theme(
axis.title.x = element_text(vjust = -2, size = 16),
axis.title.y = element_text(vjust = 4, size = 16),
axis.text.x = element_text(size = 12, color="black"),
axis.text.y = element_text(size = 12,color="black"),
panel.background = element_blank(),
panel.grid.major = element_blank(),
axis.line = element_line(colour = "black"),
legend.title=element_blank())+
ylim(min(figDF$maze_accuracy_pct), max(figDF$maze_accuracy_pct))+
annotate("text", label = "FDR< 0.001", x = 1.8 , y = 0.9, color="#de5285", size=4) +
annotate("text", label = "FDR< 0.001", x = 1.8 , y = 0.8, color="#00cdff", size=4)  +
annotate("text", label = "FDR<0.001", x = 1.8 , y = 0.7, color="#f4a2d0", size=4)
dev.off()
tiff("MD_fornixR.REPO.nofname.tiff", units="in", width=5, height=3, res=300)
ggplot(figDF,aes(y=maze_accuracy_pct,x=Fornix_R,color=factor(REPO)))+geom_point() +
stat_smooth(method="lm", se=FALSE)+
scale_color_manual(values = c('#de5285','#00cdff','#f4a2d0'),labels = c("Pre", "Peri", "Post"))+
labs( x = "Fornix R",
y = "% Correct")+
scale_y_continuous(breaks=c(0,1)) +
theme(
axis.title.x = element_text(vjust = -2, size = 16),
axis.title.y = element_text(vjust = 4, size = 16),
axis.text.x = element_text(size = 12, color="black"),
axis.text.y = element_text(size = 12,color="black"),
panel.background = element_blank(),
panel.grid.major = element_blank(),
axis.line = element_line(colour = "black"),
legend.title=element_blank())+
ylim(min(figDF$maze_accuracy_pct), max(figDF$maze_accuracy_pct))+
annotate("text", label = "FDR< 0.001", x = 1.8 , y = 0.9, color="#de5285", size=4) +
annotate("text", label = "FDR< 0.001", x = 1.8 , y = 0.8, color="#00cdff", size=4)  +
annotate("text", label = "FDR<0.001", x = 1.8 , y = 0.7, color="#f4a2d0", size=4)
dev.off()
ggplot(figDF,aes(y=maze_accuracy_pct,x=Fornix_R,color=factor(REPO)))+geom_point() +
stat_smooth(method="lm", se=FALSE)+
scale_color_manual(values = c('#de5285','#00cdff','#f4a2d0'),labels = c("Pre", "Peri", "Post"))+
labs( x = "Fornix R",
y = "% Correct")+
scale_y_continuous(breaks=c(0,1)) +
theme(
axis.title.x = element_text(vjust = -2, size = 16),
axis.title.y = element_text(vjust = 4, size = 16),
axis.text.x = element_text(size = 12, color="black"),
axis.text.y = element_text(size = 12,color="black"),
panel.background = element_blank(),
panel.grid.major = element_blank(),
axis.line = element_line(colour = "black"),
legend.title=element_blank())+
ylim(min(figDF$maze_accuracy_pct), max(figDF$maze_accuracy_pct))
tiff("MD_fornixR.REPO.nofname.tiff", units="in", width=5, height=3, res=300)
ggplot(figDF,aes(y=maze_accuracy_pct,x=Fornix_R,color=factor(REPO)))+geom_point() +
stat_smooth(method="lm", se=FALSE)+
scale_color_manual(values = c('#de5285','#00cdff','#f4a2d0'),labels = c("Pre", "Peri", "Post"))+
labs( x = "Fornix R",
y = "% Correct")+
scale_y_continuous(breaks=c(0,1)) +
theme(
axis.title.x = element_text(vjust = -2, size = 16),
axis.title.y = element_text(vjust = 4, size = 16),
axis.text.x = element_text(size = 12, color="black"),
axis.text.y = element_text(size = 12,color="black"),
panel.background = element_blank(),
panel.grid.major = element_blank(),
axis.line = element_line(colour = "black"),
legend.title=element_blank())+
ylim(min(figDF$maze_accuracy_pct), max(figDF$maze_accuracy_pct))+
annotate("text", label = "FDR< 0.001", x = 1.4 , y = 0.9, color="#de5285", size=4) +
annotate("text", label = "FDR< 0.001", x = 1.4 , y = 0.8, color="#00cdff", size=4)  +
annotate("text", label = "FDR<0.001", x = 1.4 , y = 0.7, color="#f4a2d0", size=4)
dev.off()
figDF <- Extract_raw_values(ReadingCSVFunc("maze_acc/MD/FNAME/maze.MD.males.neg.csv"), "MD")
figDF <- Extract_raw_values(ReadingCSVFunc("maze_acc/QA/fname_covariate/male.maze_accuracy_pct.t2.length25.neg_corr.csv"), "QA")
figDF <- Extract_raw_values(ReadingCSVFunc("maze_acc/QA/nofname_covariate/male.maze_accuracy_pct.t2.length25.neg_corr.csv"), "QA")
figDF <- Extract_raw_values(ReadingCSVFunc("maze_acc/QA/noFNAME/male.maze_accuracy_pct.t2.length25.neg_corr.csv"), "QA")
figDF <- Extract_raw_values(ReadingCSVFunc("maze_acc/QA/noFNAME/male.maze_accuracy_pct.t2.length25.neg_corr.csv"), "QA") %>%  select(c("subject_id", "sex", "age_scan_years", "maze_accuracy_pct", "REPO", "Cerebellum_L"))
figDF <- Extract_raw_values(ReadingCSVFunc("maze_acc/QA/noFNAME/male.maze_accuracy_pct.t2.length25.neg_corr.csv"), "QA") %>%  select(c("subject_id", "sex", "age_scan_years", "maze_accuracy_pct", "REPO", "Cerebellum_L"))
ggplot(figDF,aes(y=maze_accuracy_pct,x=Cerebellum_L,color=sex))+geom_point() +
stat_smooth(method="lm", se=FALSE)+
scale_color_manual(values = c('#de5285','#00cdff')) +
labs( x = "Cerebellum_L",
y = "% Correct")+
scale_y_continuous(breaks=c(0,1)) +
theme(
axis.title.x = element_text(vjust = -2, size = 16),
axis.title.y = element_text(vjust = 4, size = 16),
axis.text.x = element_text(size = 12, color="black"),
axis.text.y = element_text(size = 12,color="black"),
panel.background = element_blank(),
panel.grid.major = element_blank(),
axis.line = element_line(colour = "black"))+
ylim(min(figDF$maze_accuracy_pct), max(figDF$maze_accuracy_pct))
tiff("QA_cerebellumL.noFame.tiff", units="in", width=5, height=4, res=300)
ggplot(figDF,aes(y=maze_accuracy_pct,x=Cerebellum_L,color=sex))+geom_point() +
stat_smooth(method="lm", se=FALSE)+
scale_color_manual(values = c('#de5285','#00cdff')) +
labs( x = "Cerebellum_L",
y = "% Correct")+
scale_y_continuous(breaks=c(0,1)) +
theme(
axis.title.x = element_text(vjust = -2, size = 16),
axis.title.y = element_text(vjust = 4, size = 16),
axis.text.x = element_text(size = 12, color="black"),
axis.text.y = element_text(size = 12,color="black"),
panel.background = element_blank(),
panel.grid.major = element_blank(),
axis.line = element_line(colour = "black"))+
ylim(min(figDF$maze_accuracy_pct), max(figDF$maze_accuracy_pct))
dev.off()
ggplot(figDF,aes(y=maze_accuracy_pct,x=Cerebellum_L,color=factor(REPO)))+geom_point() +
stat_smooth(method="lm", se=FALSE)+
scale_color_manual(values = c('#de5285','#00cdff','#f4a2d0'),labels = c("Pre", "Peri", "Post")) +
labs( x = "Cerebellum_L",
y = "% Correct")+
scale_y_continuous(breaks=c(0,1)) +
theme(
axis.title.x = element_text(vjust = -2, size = 16),
axis.title.y = element_text(vjust = 4, size = 16),
axis.text.x = element_text(size = 12, color="black"),
axis.text.y = element_text(size = 12,color="black"),
panel.background = element_blank(),
panel.grid.major = element_blank(),
axis.line = element_line(colour = "black"))+
ylim(min(figDF$maze_accuracy_pct), max(figDF$maze_accuracy_pct))
figDF %>% filter(REPO != 0) %>% ggplot(aes(y=maze_accuracy_pct,x=Cerebellum_L,color=factor(REPO)))+geom_point() +
stat_smooth(method="lm", se=FALSE)+
scale_color_manual(values = c('#de5285','#00cdff','#f4a2d0'),labels = c("Pre", "Peri", "Post")) +
labs( x = "Cerebellum_L",
y = "% Correct")+
scale_y_continuous(breaks=c(0,1)) +
theme(
axis.title.x = element_text(vjust = -2, size = 16),
axis.title.y = element_text(vjust = 4, size = 16),
axis.text.x = element_text(size = 12, color="black"),
axis.text.y = element_text(size = 12,color="black"),
panel.background = element_blank(),
panel.grid.major = element_blank(),
axis.line = element_line(colour = "black"))+
ylim(min(figDF$maze_accuracy_pct), max(figDF$maze_accuracy_pct))
tiff("QA_cerebellumL.noFame_REPO.tiff", units="in", width=5, height=4, res=300)
figDF %>% filter(REPO != 0) %>% ggplot(aes(y=maze_accuracy_pct,x=Cerebellum_L,color=factor(REPO)))+geom_point() +
stat_smooth(method="lm", se=FALSE)+
scale_color_manual(values = c('#de5285','#00cdff','#f4a2d0'),labels = c("Pre", "Peri", "Post")) +
labs( x = "Cerebellum_L",
y = "% Correct")+
scale_y_continuous(breaks=c(0,1)) +
theme(
axis.title.x = element_text(vjust = -2, size = 16),
axis.title.y = element_text(vjust = 4, size = 16),
axis.text.x = element_text(size = 12, color="black"),
axis.text.y = element_text(size = 12,color="black"),
panel.background = element_blank(),
panel.grid.major = element_blank(),
axis.line = element_line(colour = "black"))+
ylim(min(figDF$maze_accuracy_pct), max(figDF$maze_accuracy_pct))
library(ggplot2)
#(plyr)
library(tidyverse)
# library(dplyr)
# library(tidyr)
library(stringr)
library(kableExtra)
# library(data.table)
# library(network)
# library(tidygraph)
# library(ggraph)
# library(igraph)
# library(networkD3)
# library(CINNA)
# library(umap)
# library(plotly)
#library(factoextra)
#library(lsr)
# library(car)
library(ggpubr)
#library(entropy)
#library(ds4psy)
# library(pROC)
#library(devtools)
#library(BRRR)
#library(stats)
#library(afex)
library(knitr)
library(janitor)
library(car)
library(ggiraph)
library(ggiraphExtra)
library(moonBook)
library(nationalparkcolors)
library(gridExtra)
library(markdown)
working_dir <- "/Users/danielacossio/Documents/Chrastil_Lab/Projects/SNAG/DSI_rerun_data/"
# working_dir <- "/Users/danielacossio/Library/CloudStorage/GoogleDrive-dcossio1@uci.edu/Other computers/My iMac/Chrastil_Lab/Projects/SNAG/DSI_rerun_data/" # Laptop path
rows2grab <- c("Tract Name", "number of tracts","mean length(mm)","diameter(mm)", "volume(mm^3)")
# sub_info <- read.csv("/Users/danielacossio/Documents/Chrastil_Lab/Projects/SNAG/DSI_rerun_data/subject_info.csv")
sub_info <- read.csv(paste0(working_dir,"subject_info.csv"))
#working_dir <- "/Users/danielacossio/Documents/Chrastil_Lab/Projects/SNAG/DSI_rerun_data/"
working_dir <- "/Users/danielacossio/Library/CloudStorage/GoogleDrive-dcossio1@uci.edu/Other computers/My iMac/Chrastil_Lab/Projects/SNAG/DSI_rerun_data/" # Laptop path
rows2grab <- c("Tract Name", "number of tracts","mean length(mm)","diameter(mm)", "volume(mm^3)")
# sub_info <- read.csv("/Users/danielacossio/Documents/Chrastil_Lab/Projects/SNAG/DSI_rerun_data/subject_info.csv")
sub_info <- read.csv(paste0(working_dir,"subject_info.csv"))
figDF <- Extract_raw_values(ReadingCSVFunc("maze_acc/QA/noFNAME/male.maze_accuracy_pct.t2.length25.neg_corr.csv"), "QA") %>%  select(c("subject_id", "sex", "age_scan_years", "maze_accuracy_pct", "REPO", "Cerebellum_L"))
tiff("QA_cerebellumL.noFame.tiff", units="in", width=5, height=4, res=300)
ggplot(figDF,aes(y=maze_accuracy_pct,x=Cerebellum_L,color=sex))+geom_point() +
stat_smooth(method="lm", se=FALSE)+
scale_color_manual(values = c('#de5285','#00cdff')) +
labs( x = "Cerebellum_L",
y = "% Correct")+
scale_y_continuous(breaks=c(0,1)) +
theme(
axis.title.x = element_text(vjust = -2, size = 16),
axis.title.y = element_text(vjust = 4, size = 16),
axis.text.x = element_text(size = 12, color="black"),
axis.text.y = element_text(size = 12,color="black"),
panel.background = element_blank(),
panel.grid.major = element_blank(),
axis.line = element_line(colour = "black"))+
ylim(min(figDF$maze_accuracy_pct), max(figDF$maze_accuracy_pct))
dev.off()
tiff("QA_cerebellumL.noFame_REPO.tiff", units="in", width=5, height=4, res=300)
figDF %>% filter(REPO != 0) %>% ggplot(aes(y=maze_accuracy_pct,x=Cerebellum_L,color=factor(REPO)))+geom_point() +
stat_smooth(method="lm", se=FALSE)+
scale_color_manual(values = c('#de5285','#00cdff','#f4a2d0'),labels = c("Pre", "Peri", "Post")) +
labs( x = "Cerebellum_L",
y = "% Correct")+
scale_y_continuous(breaks=c(0,1)) +
theme(
axis.title.x = element_text(vjust = -2, size = 16),
axis.title.y = element_text(vjust = 4, size = 16),
axis.text.x = element_text(size = 12, color="black"),
axis.text.y = element_text(size = 12,color="black"),
panel.background = element_blank(),
panel.grid.major = element_blank(),
axis.line = element_line(colour = "black"))+
ylim(min(figDF$maze_accuracy_pct), max(figDF$maze_accuracy_pct))
dev.off()
tiff("QA_cerebellumL.noFame_REPO.tiff", units="in", width=5, height=4, res=300)
figDF %>% filter(REPO != 0) %>% ggplot(aes(y=maze_accuracy_pct,x=Cerebellum_L,color=factor(REPO)))+geom_point() +
stat_smooth(method="lm", se=FALSE)+
scale_color_manual(values = c('#de5285','#00cdff','#f4a2d0'),labels = c("Pre", "Peri", "Post")) +
labs( x = "Cerebellum_L",
y = "% Correct")+
scale_y_continuous(breaks=c(0,1)) +
theme(
axis.title.x = element_text(vjust = -2, size = 16),
axis.title.y = element_text(vjust = 4, size = 16),
axis.text.x = element_text(size = 12, color="black"),
axis.text.y = element_text(size = 12,color="black"),
panel.background = element_blank(),
panel.grid.major = element_blank(),
axis.line = element_line(colour = "black"),
legend.title=element_blank())+
ylim(min(figDF$maze_accuracy_pct), max(figDF$maze_accuracy_pct))
dev.off()
