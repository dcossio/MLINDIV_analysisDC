# library(tidygraph)
# library(ggraph)
# library(igraph)
# library(networkD3)
# library(CINNA)
# library(umap)
# library(plotly)
#library(factoextra)
#library(lsr)
# library(car)
library(ggpubr)
#library(entropy)
#library(ds4psy)
# library(pROC)
#library(devtools)
#library(BRRR)
#library(stats)
#library(afex)
library(knitr)
library(janitor)
library(car)
library(ggiraph)
library(ggiraphExtra)
library(moonBook)
library(nationalparkcolors)
library(gridExtra)
library(markdown)
ReadingCSVFunc <- function(pathname){
#' @description: purpose of this is to read in CSVs and clean them up
#' @return: DF
read.csv(paste0(working_dir, pathname), header=TRUE)
}
CleanDF <- function(DF,Variable){
DF <- DF %>% select(-c("subject_id"))
subinfo <- sub_info  %>% select(c("subject_id", "sex", "age_scan_years","repo_status",Variable))
cleanedDF <- cbind(subinfo, DF) %>% drop_na()
cleanedDF$sex[cleanedDF$sex=="Male"] <- 1
cleanedDF$sex[cleanedDF$sex=="Female"] <- 0
cleanedDF$sex <- as.numeric(cleanedDF$sex)
return (cleanedDF)
}
SelectAtlas <- function(Parcel,NetworkNum){
#' @description: purpose of this is to read in and extract the ROIs from schaefer atlas you choose
#' @return: A list of all the ROIs
atlas_path <- ReadingCSVFunc(paste0("Schaefer2018_",Parcel,"Parcels_",NetworkNum, "Networks_order_FSLMNI152_1mm.Centroid_RAS.csv"))
col_names <-c("subject_id",atlas_path$ROI.Name)
return(col_names)
}
working_dir <- "/Users/danielacossio/Documents/Chrastil_Lab/Projects/SNAG/Cortical_thickness/"
#working_dir <- "/Users/danielacossio/Library/CloudStorage/GoogleDrive-dcossio1@uci.edu/Other computers/My iMac/Chrastil_Lab/Projects/SNAG/Cortical_thickness/" # Laptop path
sub_info <- ReadingCSVFunc("subject_info.csv")%>% filter(!(subject_id %in% c("309", "341")))
CT_7network <- ReadingCSVFunc("master_CT400_parces7_networks.csv") %>% `colnames<-`(SelectAtlas(400,7)) %>%  arrange(subject_id)
CT_17network <- ReadingCSVFunc("master_CT400_parces17_networks.csv") %>% `colnames<-`(SelectAtlas(400,17)) %>%  arrange(subject_id)
View(CT_7network)
ROIs <- SelectAtlas(400,17)
ROIs <- SelectAtlas(400,17) %>% [-1]
ROIs <- SelectAtlas(400,17) %>% .[-1]
View(CT_17network)
ROIs <- SelectAtlas(400,7) %>% .[-1] # removing sibject ID
View(CT_7network)
AE_ave_df <-CleanDF(CT_7network,"loop_ae_avg_degree")
AE_ave_df <-CleanDF(CT_7network,"loop_ae_avg_degree")
M_AE_ave_df <- CleanDF(CT_7network,"loop_ae_avg_degree") %>% filter(sex==1)
F_AE_ave_df <- CleanDF(CT_7network,"loop_ae_avg_degree") %>% filter(sex==0)
ROIs <- SelectAtlas(400,7) %>% .[-1] # removing sibject ID
for (ROI in ROIs) {
print(ROI)
y <- ggplot(AE_ave_df, aes(x=sex, y=.data[[ROI]], group=sex)) +
geom_boxplot(outlier.shape = NA,width =0.5,fill= c("#CF92BF", "#D1E7E6")) +
geom_jitter(color="black",size=0.8,alpha=0.9,width = 0.2) +
#scale_y_binned(n.breaks=10, nice.breaks = TRUE) +
stat_boxplot(geom = "errorbar",
width = 0.15) +
labs(x= "Sex", y= " QA", title =paste0(ROI)) +
theme(axis.title.x = element_text(vjust=- 4, size = 16),
axis.title.y = element_text(vjust=8, size = 16),
axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 12),
panel.background =element_blank(),
axis.line = element_line(colour = "black"),
plot.margin = margin(1, 2, 1, 1.5, "cm"),
plot.title = element_text(hjust = 0.5, vjust = 2, size = 16, face="bold"))
#png(file = CleanCSVsfigpath,ROI,"_sexdiff_QA.png"))  #,".png"))
print(y)
#dev.off()
}
y <- ggplot(AE_ave_df, aes(x=sex, y=.data[[ROI]]))  +
geom_point(color="#502E23", size=4) +
geom_smooth(method="lm", level=0.95,color ="#E2929D", se=FALSE,linewidth=2) +
theme_classic() +
labs(x ="QA", y = "Position Error", title =  "Cortical Spinal Tract R") +
theme( axis.title.x = element_text(vjust = -4,size = 16),
axis.text.x = element_text(size = 25),
axis.text.y = element_text(size = 25),
axis.title.y = element_text(vjust = 4, size = 16),
plot.title = element_text(hjust = 0.5 ,size=16),
panel.border = element_rect(fill=NA,color = "#502E23"),
panel.background =element_blank(),
strip.text.x = element_text(
size = 16,
color = "black",
face = "bold.italic"
),
legend.position = "right",
legend.key.size = unit(2, 'cm'),
legend.title = element_text(size=18), #change legend title font size
legend.text = element_text(size=18),
plot.margin = margin(2, 1, 2, 1, "cm")) +
annotate("text", label = "FDR< 0.001", x = 0.43, y = 5, color="#E2929D", size=8)
#png(file = CleanCSVsfigpath,ROI,"_sexdiff_QA.png"))  #,".png"))
print(y)
ggplot(AE_ave_df, aes(x=sex, y=.data[[ROI]]))  +
geom_point(color="#502E23", size=4) +
geom_smooth(method="lm", level=0.95,color ="#E2929D", se=FALSE,linewidth=2) +
theme_classic()
View(CT_7network)
View(AE_ave_df)
ggplot(AE_ave_df, aes(x=loop_ae_avg_degree, y=.data[[ROI]]))  +
geom_point(color="#502E23", size=4) +
geom_smooth(method="lm", level=0.95,color ="#E2929D", se=FALSE,linewidth=2) +
theme_classic()
ggplot(AE_ave_df, aes(x=loop_ae_avg_degree, y=.data[[ROI]]))  +
geom_point(color="#502E23", size=4) +
geom_smooth(method="lm", level=0.95,color ="#E2929D", se=FALSE,linewidth=2) +
theme_classic() +
labs(x ="Cortical Thickness", y = "Position Error", title = ROI) +
theme( axis.title.x = element_text(vjust = -4,size = 16),
axis.text.x = element_text(size = 25),
axis.text.y = element_text(size = 25),
axis.title.y = element_text(vjust = 4, size = 16),
plot.title = element_text(hjust = 0.5 ,size=16),
panel.border = element_rect(fill=NA,color = "#502E23"),
panel.background =element_blank(),
strip.text.x = element_text(
size = 16,
color = "black",
face = "bold.italic"
),
legend.position = "right",
legend.key.size = unit(2, 'cm'),
legend.title = element_text(size=18), #change legend title font size
legend.text = element_text(size=18),
plot.margin = margin(2, 1, 2, 1, "cm"))
ggplot(AE_ave_df, aes(x=loop_ae_avg_degree, y=.data[[ROI]]))  +
geom_point(color="#502E23", size=4) +
geom_smooth(method="lm", level=0.95,color ="#E2929D", se=FALSE,linewidth=2) +
theme_classic() +
labs(x ="Cortical Thickness", y = "Position Error", title = ROI) +
theme( axis.title.x = element_text(vjust = -4,size = 16),
axis.text.x = element_text(size = 25),
axis.text.y = element_text(size = 25),
axis.title.y = element_text(vjust = 4, size = 16),
plot.title = element_text(hjust = 0.5 ,size=16),
panel.border = element_rect(fill=NA,color = "#502E23"),
panel.background =element_blank(),
strip.text.x = element_text(
size = 16,
color = "black",
face = "bold.italic"
),
legend.position = "right",
legend.key.size = unit(2, 'cm'),
legend.title = element_text(size=18), #change legend title font size
legend.text = element_text(size=18),
plot.margin = margin(1, 1, 1, 1, "cm"))
ggplot(AE_ave_df, aes(x=loop_ae_avg_degree, y=.data[[ROI]]))  +
geom_point(color="#502E23", size=4) +
geom_smooth(method="lm", level=0.95,color ="#E2929D", se=FALSE,linewidth=2) +
theme_classic() +
labs(x ="Cortical Thickness", y = "Position Error", title = ROI) +
theme( axis.title.x = element_text(vjust = -4,size = 16),
axis.text.x = element_text(size = 25),
axis.text.y = element_text(size = 25),
axis.title.y = element_text(vjust = 4, size = 16),
plot.title = element_text(hjust = 0.5 ,size=16),
panel.border = element_rect(fill=NA,color = "#502E23"),
panel.background =element_blank(),
strip.text.x = element_text(
size = 16,
color = "black",
face = "bold.italic"
),
legend.position = "right")
ROIs <- SelectAtlas(400,7) %>% .[-1] # removing sibject ID
for (ROI in ROIs) {
print(ROI)
y <- ggplot(AE_ave_df, aes(x=loop_ae_avg_degree, y=.data[[ROI]]))  +
geom_point(color="#502E23", size=4) +
geom_smooth(method="lm", level=0.95,color ="#E2929D", se=FALSE,linewidth=2) +
theme_classic() +
labs(x ="Cortical Thickness", y = "Position Error", title = ROI) +
theme( axis.title.x = element_text(vjust = -4,size = 16),
axis.text.x = element_text(size = 25),
axis.text.y = element_text(size = 25),
axis.title.y = element_text(vjust = 4, size = 16),
plot.title = element_text(hjust = 0.5 ,size=16),
panel.border = element_rect(fill=NA,color = "#502E23"),
panel.background =element_blank(),
strip.text.x = element_text(
size = 16,
color = "black",
face = "bold.italic"
),
legend.position = "right")
#legend.key.size = unit(2, 'cm'),
#legend.title = element_text(size=18), #change legend title font size
#legend.text = element_text(size=18),
#plot.margin = margin(1, 1, 1, 1, "cm"))
#png(file = CleanCSVsfigpath,ROI,"_sexdiff_QA.png"))  #,".png"))
print(y)
#dev.off()
}
ggplot(AE_ave_df, aes(x=loop_ae_avg_degree, y=.data[[ROI]]))  +
geom_point(color="#502E23", size=4) +
geom_smooth(method="lm", level=0.95,color ="#E2929D", se=FALSE,linewidth=2)
ROIs <- SelectAtlas(400,7) %>% .[-1] # removing sibject ID
plist <- list()
for (ROI in ROIs) {
print(ROI)
plist[[ROI]] <- list() <- ggplot(AE_ave_df, aes(x=loop_ae_avg_degree, y=.data[[ROI]]))  +
geom_point(color="#502E23", size=4) +
geom_smooth(method="lm", level=0.95,color ="#E2929D", se=FALSE,linewidth=2) +
theme_classic() +
labs(x ="Cortical Thickness", y = "Position Error", title = ROI) +
theme( axis.title.x = element_text(vjust = -4,size = 16),
axis.text.x = element_text(size = 25),
axis.text.y = element_text(size = 25),
axis.title.y = element_text(vjust = 4, size = 16),
plot.title = element_text(hjust = 0.5 ,size=16),
panel.border = element_rect(fill=NA,color = "#502E23"),
panel.background =element_blank(),
strip.text.x = element_text(
size = 16,
color = "black",
face = "bold.italic"
),
legend.position = "right")
#legend.key.size = unit(2, 'cm'),
#legend.title = element_text(size=18), #change legend title font size
#legend.text = element_text(size=18),
#plot.margin = margin(1, 1, 1, 1, "cm"))
#png(file = CleanCSVsfigpath,ROI,"_sexdiff_QA.png"))  #,".png"))
print(plist[[ROI]] )
#dev.off()
}
ROIs <- SelectAtlas(400,7) %>% .[-1] # removing sibject ID
plist <- list()
for (ROI in ROIs) {
print(ROI)
plist[[ROI]] <- ggplot(AE_ave_df, aes(x=loop_ae_avg_degree, y=.data[[ROI]]))  +
geom_point(color="#502E23", size=4) +
geom_smooth(method="lm", level=0.95,color ="#E2929D", se=FALSE,linewidth=2) +
theme_classic() +
labs(x ="Cortical Thickness", y = "Position Error", title = ROI) +
theme( axis.title.x = element_text(vjust = -4,size = 16),
axis.text.x = element_text(size = 25),
axis.text.y = element_text(size = 25),
axis.title.y = element_text(vjust = 4, size = 16),
plot.title = element_text(hjust = 0.5 ,size=16),
panel.border = element_rect(fill=NA,color = "#502E23"),
panel.background =element_blank(),
strip.text.x = element_text(
size = 16,
color = "black",
face = "bold.italic"
),
legend.position = "right")
#legend.key.size = unit(2, 'cm'),
#legend.title = element_text(size=18), #change legend title font size
#legend.text = element_text(size=18),
#plot.margin = margin(1, 1, 1, 1, "cm"))
#png(file = CleanCSVsfigpath,ROI,"_sexdiff_QA.png"))  #,".png"))
print(plist[[ROI]] )
#dev.off()
}
View(plist)
View(AE_ave_df)
pcor.test(x=AE_ave_df["loop_ae_avg_degree"],y=AE_ave_df[[ROI]],z= AE_ave_df[,c("age_scan_years", "sex")])
pcor.test(x=AE_ave_df["loop_ae_avg_degree"],y=AE_ave_df[[ROI]],z= AE_ave_df[,c("age_scan_years", "sex")]) %>% broom::tidy()
x <- pcor.test(x=AE_ave_df["loop_ae_avg_degree"],y=AE_ave_df[[ROI]],z= AE_ave_df[,c("age_scan_years", "sex")])
View(x)
x$p.value
WholeBrain_7network400parc[[ROI]] <- pcor.test(x=AE_ave_df["loop_ae_avg_degree"],y=AE_ave_df[[ROI]],z= AE_ave_df[,c("age_scan_years", "sex")])
WholeBrain_7network400parc <- list()
WholeBrain_7network400parc[[ROI]] <- pcor.test(x=AE_ave_df["loop_ae_avg_degree"],y=AE_ave_df[[ROI]],z= AE_ave_df[,c("age_scan_years", "sex")])
WholeBrain_7network400parc[[ROI]][["p.value"]]
WholeBrain_7network400parc[[ROI]]
colnames(WholeBrain_7network400parc[[ROI]])
sigWB_7network400parc <-data.frame(matrix(nrow=0,ncol=7)) %>% `colnames<-`(c("roi", "estimate" ,"p.value","statistic","n","gp","Method"))
rbind(sigWB_7network400parc,WholeBrain_7network400parc[[ROI]])
View(sigWB_7network400parc)
sigWB_7network400parc <- rbind(sigWB_7network400parc,WholeBrain_7network400parc[[ROI]])
View(sigWB_7network400parc)
sigWB_7network400parc <- rbind(sigWB_7network400parc,WholeBrain_7network400parc[[ROI]])
View(sigWB_7network400parc)
WholeBrain_7network400parc <- list()
cols <-
sigWB_7network400parc <-data.frame(matrix(nrow=0,ncol=7)) %>% `colnames<-`(c("roi", "estimate" ,"p.value","statistic","n","gp","Method"))
for (ROI in ROIs) {
WholeBrain_7network400parc[[ROI]] <- pcor.test(x=AE_ave_df["loop_ae_avg_degree"],y=AE_ave_df[[ROI]],z= AE_ave_df[,c("age_scan_years", "sex")])
if (WholeBrain_7network400parc[[ROI]][["p.value"]] < 0.05){
sigWB_7network400parc <- rbind(sigWB_7network400parc,WholeBrain_7network400parc[[ROI]])
}
}
View(sigWB_7network400parc)
WholeBrain_7network400parc[[ROI]]
temp <-cbind(ROI,WholeBrain_7network400parc[[ROI]])
View(temp)
WholeBrain_7network400parc <- list()
cols <-
sigWB_7network400parc <-data.frame(matrix(nrow=0,ncol=7)) %>% `colnames<-`(c("roi", "estimate" ,"p.value","statistic","n","gp","Method"))
for (ROI in ROIs) {
WholeBrain_7network400parc[[ROI]] <- pcor.test(x=AE_ave_df["loop_ae_avg_degree"],y=AE_ave_df[[ROI]],z= AE_ave_df[,c("age_scan_years", "sex")])
if (WholeBrain_7network400parc[[ROI]][["p.value"]] < 0.05){
temp <-cbind(ROI,WholeBrain_7network400parc[[ROI]])
sigWB_7network400parc <- rbind(sigWB_7network400parc,temp)
}
}
View(sigWB_7network400parc)
p.adjust(sigWB_7network400parc$p.value, method = "fdr")
p.adjust(sigWB_7network400parc$p.value, method = "fdr", n=length(sigWB_7network400parc))
p.adjust(sigWB_7network400parc$p.value, method = "fdr", n=length(sigWB_7network400parc))
length(sigWB_7network400parc$p.value)
length(sigWB_7network400parc)
p.adjust(sigWB_7network400parc$p.value, method = "fdr", n=length(sigWB_7network400parc$p.value))
WholeBrain_77network400parc <- list()
cols <-
sigWB_17network400parc <-data.frame(matrix(nrow=0,ncol=7)) %>% `colnames<-`(c("roi", "estimate" ,"p.value","statistic","n","gp","Method"))
df <-CleanDF(CT_17network,"loop_ae_avg_degree")
for (ROI in ROIs) {
WholeBrain_17network400parc[[ROI]] <- pcor.test(x=df["loop_ae_avg_degree"],y=df[[ROI]],z= df[,c("age_scan_years", "sex")])
if (WholeBrain_17network400parc[[ROI]][["p.value"]] < 0.05){
temp <-cbind(ROI,WholeBrain_17network400parc[[ROI]])
sigWB_17network400parc <- rbind(sigWB_17network400parc,temp)
}
}
View(CT_17network)
df <-CleanDF(CT_17network,"loop_ae_avg_degree")
View(DF)
View(df)
WholeBrain_17network400parc[[ROI]] <- pcor.test(x=df["loop_ae_avg_degree"],y=df[[ROI]],z= df[,c("age_scan_years", "sex")])
df[[ROI]]
WholeBrain_77network400parc <- list()
ROIs<- SelectAtlas(400,17) %>% .[-1]
cols <-
sigWB_17network400parc <-data.frame(matrix(nrow=0,ncol=7)) %>% `colnames<-`(c("roi", "estimate" ,"p.value","statistic","n","gp","Method"))
df <-CleanDF(CT_17network,"loop_ae_avg_degree")
for (ROI in ROIs) {
WholeBrain_17network400parc[[ROI]] <- pcor.test(x=df["loop_ae_avg_degree"],y=df[[ROI]],z= df[,c("age_scan_years", "sex")])
if (WholeBrain_17network400parc[[ROI]][["p.value"]] < 0.05){
temp <-cbind(ROI,WholeBrain_17network400parc[[ROI]])
sigWB_17network400parc <- rbind(sigWB_17network400parc,temp)
}
}
WholeBrain_17network400parc <- list()
ROIs<- SelectAtlas(400,17) %>% .[-1]
cols <-
sigWB_17network400parc <-data.frame(matrix(nrow=0,ncol=7)) %>% `colnames<-`(c("roi", "estimate" ,"p.value","statistic","n","gp","Method"))
df <-CleanDF(CT_17network,"loop_ae_avg_degree")
for (ROI in ROIs) {
WholeBrain_17network400parc[[ROI]] <- pcor.test(x=df["loop_ae_avg_degree"],y=df[[ROI]],z= df[,c("age_scan_years", "sex")])
if (WholeBrain_17network400parc[[ROI]][["p.value"]] < 0.05){
temp <-cbind(ROI,WholeBrain_17network400parc[[ROI]])
sigWB_17network400parc <- rbind(sigWB_17network400parc,temp)
}
}
View(sigWB_17network400parc)
sigWB_17network400parc$ROI
ROIs<- c(sigWB_17network400parc$ROI)
ROIs<- c(sigWB_17network400parc$ROI)  # removing sibject ID
plotlist <- list()
for (ROI in ROIs) {
print(ROI)
plist[[ROI]] <- ggplot(AE_ave_df, aes(x=loop_ae_avg_degree, y=.data[[ROI]]))  +
geom_point(color="#502E23", size=4) +
geom_smooth(method="lm", level=0.95,color ="#E2929D", se=FALSE,linewidth=2) +
theme_classic() +
labs(x ="Cortical Thickness", y = "Position Error", title = ROI) +
theme( axis.title.x = element_text(vjust = -4,size = 16),
axis.text.x = element_text(size = 25),
axis.text.y = element_text(size = 25),
axis.title.y = element_text(vjust = 4, size = 16),
plot.title = element_text(hjust = 0.5 ,size=16),
panel.border = element_rect(fill=NA,color = "#502E23"),
panel.background =element_blank(),
strip.text.x = element_text(
size = 16,
color = "black",
face = "bold.italic"
),
legend.position = "right")
#legend.key.size = unit(2, 'cm'),
#legend.title = element_text(size=18), #change legend title font size
#legend.text = element_text(size=18),
#plot.margin = margin(1, 1, 1, 1, "cm"))
#png(file = CleanCSVsfigpath,ROI,"_sexdiff_QA.png"))  #,".png"))
print(plotlist[[ROI]] )
#dev.off()
}
View(plist)
ROIs<- c(sigWB_17network400parc$ROI)  # removing sibject ID
plotlist <- list()
for (ROI in ROIs) {
print(ROI)
plotlist[[ROI]] <- ggplot(AE_ave_df, aes(x=loop_ae_avg_degree, y=.data[[ROI]]))  +
geom_point(color="#502E23", size=4) +
geom_smooth(method="lm", level=0.95,color ="#E2929D", se=FALSE,linewidth=2) +
theme_classic() +
labs(x ="Cortical Thickness", y = "Position Error", title = ROI) +
theme( axis.title.x = element_text(vjust = -4,size = 16),
axis.text.x = element_text(size = 25),
axis.text.y = element_text(size = 25),
axis.title.y = element_text(vjust = 4, size = 16),
plot.title = element_text(hjust = 0.5 ,size=16),
panel.border = element_rect(fill=NA,color = "#502E23"),
panel.background =element_blank(),
strip.text.x = element_text(
size = 16,
color = "black",
face = "bold.italic"
),
legend.position = "right")
#legend.key.size = unit(2, 'cm'),
#legend.title = element_text(size=18), #change legend title font size
#legend.text = element_text(size=18),
#plot.margin = margin(1, 1, 1, 1, "cm"))
#png(file = CleanCSVsfigpath,ROI,"_sexdiff_QA.png"))  #,".png"))
print(plotlist[[ROI]] )
#dev.off()
}
ROIs<- c(sigWB_17network400parc$ROI)  # removing sibject ID
plotlist <- list()
for (ROI in ROIs) {
print(ROI)
plotlist[[ROI]] <- ggplot(df, aes(x=loop_ae_avg_degree, y=.data[[ROI]]))  +
geom_point(color="#502E23", size=4) +
geom_smooth(method="lm", level=0.95,color ="#E2929D", se=FALSE,linewidth=2) +
theme_classic() +
labs(x ="Cortical Thickness", y = "Position Error", title = ROI) +
theme( axis.title.x = element_text(vjust = -4,size = 16),
axis.text.x = element_text(size = 25),
axis.text.y = element_text(size = 25),
axis.title.y = element_text(vjust = 4, size = 16),
plot.title = element_text(hjust = 0.5 ,size=16),
panel.border = element_rect(fill=NA,color = "#502E23"),
panel.background =element_blank(),
strip.text.x = element_text(
size = 16,
color = "black",
face = "bold.italic"
),
legend.position = "right")
#legend.key.size = unit(2, 'cm'),
#legend.title = element_text(size=18), #change legend title font size
#legend.text = element_text(size=18),
#plot.margin = margin(1, 1, 1, 1, "cm"))
#png(file = CleanCSVsfigpath,ROI,"_sexdiff_QA.png"))  #,".png"))
print(plotlist[[ROI]] )
#dev.off()
}
ggplot(df, aes(x=loop_ae_avg_degree, y=.data[[ROI]]))  +
geom_point(color="#502E23", size=4) +
geom_smooth(method="lm", level=0.95,color ="#E2929D", se=FALSE,linewidth=2) +
theme_classic() +
labs(x ="Cortical Thickness", y = "Position Error", title = ROI) +
theme( axis.title.x = element_text(vjust = -4,size = 16),
axis.text.x = element_text(size = 25),
axis.text.y = element_text(size = 25),
axis.title.y = element_text(vjust = 4, size = 16),
plot.title = element_text(hjust = 0.5 ,size=16),
panel.border = element_rect(fill=NA,color = "#502E23"),
panel.background =element_blank(),
strip.text.x = element_text(
size = 16,
color = "black",
face = "bold.italic"
),
legend.position = "right")+
stat_cor( method = "pearson")
ROIs<- c(sigWB_17network400parc$ROI)  # removing sibject ID
plotlist <- list()
for (ROI in ROIs) {
print(ROI)
plotlist[[ROI]] <- ggplot(df, aes(x=loop_ae_avg_degree, y=.data[[ROI]]))  +
geom_point(color="#502E23", size=4) +
geom_smooth(method="lm", level=0.95,color ="#E2929D", se=FALSE,linewidth=2) +
theme_classic() +
labs(x ="Cortical Thickness", y = "Position Error", title = ROI) +
theme( axis.title.x = element_text(vjust = -4,size = 16),
axis.text.x = element_text(size = 25),
axis.text.y = element_text(size = 25),
axis.title.y = element_text(vjust = 4, size = 16),
plot.title = element_text(hjust = 0.5 ,size=16),
panel.border = element_rect(fill=NA,color = "#502E23"),
panel.background =element_blank(),
strip.text.x = element_text(
size = 16,
color = "black",
face = "bold.italic"
),
legend.position = "right")+
stat_cor( method = "pearson")
#legend.key.size = unit(2, 'cm'),
#legend.title = element_text(size=18), #change legend title font size
#legend.text = element_text(size=18),
#plot.margin = margin(1, 1, 1, 1, "cm"))
#png(file = CleanCSVsfigpath,ROI,"_sexdiff_QA.png"))  #,".png"))
print(plotlist[[ROI]] )
#dev.off()
}
View(WholeBrain_17network400parc)
WholeBrain_17network400parc[["17Networks_LH_VisCent_ExStr_4"]]
