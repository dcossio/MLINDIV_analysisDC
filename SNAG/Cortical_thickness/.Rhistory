cor_results$adj.pval <- p.adjust(cor_results$p.value, method = "BH",  n = length(cor_results$p.value))
cor_results <- arrange(cor_results,p.value)
TableOutput(cor_results)
df <- CleanDF(CT_17net_merged, "loop_pe_avg_m") %>% filter(sex==1)
ROIs <- CT_17net_merged %>% select(matches(apriori_networknames)) %>% colnames()
cor_results <-
data.frame(matrix(nrow = 0, ncol = 17)) %>%   `colnames<-`(c("roi", "estimate", "p.value", "statistic", "n", "gp", "Method"))
pcorlist <- list()
for (ROI in ROIs) {
if(!is.na(sum(df[[ROI]])) == FALSE){
pcorlist[[ROI]] <- NA
}else{
pcorlist[[ROI]] <-
pcor.test(x = df["loop_pe_avg_m"], y = df[[ROI]], z = df[, c("age_scan_years")])
temp <- cbind(ROI, pcorlist[[ROI]])
cor_results <- rbind(cor_results, temp)
}
}
cor_results$adj.pval <- p.adjust(cor_results$p.value, method = "BH", n = length(cor_results$p.value))
cor_results <- arrange(cor_results,p.value)
TableOutput(cor_results)
working_dir <- "/Users/danielacossio/Documents/Chrastil_Lab/Projects/SNAG/ortical_thickness/Freesurfer/"
#working_dir <- "/Users/danielacossio/Library/CloudStorage/GoogleDrive-dcossio1@uci.edu/Other computers/My iMac/Chrastil_Lab/Projects/SNAG/Cortical_thickness/" # Laptop path
sub_info <- ReadingCSVFunc("subject_info.csv")%>% filter(!(subject_id %in% c("309", "341")))
library(ggplot2)
#(plyr)
library(ppcor)
library(tidyverse)
# library(dplyr)
# library(tidyr)
library(stringr)
library(kableExtra)
# library(data.table)
# library(network)
# library(tidygraph)
# library(ggraph)
# library(igraph)
# library(networkD3)
# library(CINNA)
# library(umap)
# library(plotly)
#library(factoextra)
#library(lsr)
# library(car)
library(ggpubr)
#library(entropy)
#library(ds4psy)
# library(pROC)
#library(devtools)
#library(BRRR)
#library(stats)
#library(afex)
library(knitr)
library(janitor)
library(car)
library(ggiraph)
library(ggiraphExtra)
library(moonBook)
library(nationalparkcolors)
library(gridExtra)
library(markdown)
working_dir <- "/Users/danielacossio/Documents/Chrastil_Lab/Projects/SNAG/ortical_thickness/Freesurfer/"
#working_dir <- "/Users/danielacossio/Library/CloudStorage/GoogleDrive-dcossio1@uci.edu/Other computers/My iMac/Chrastil_Lab/Projects/SNAG/Cortical_thickness/" # Laptop path
sub_info <- ReadingCSVFunc("subject_info.csv")%>% filter(!(subject_id %in% c("309", "341")))
working_dir <- "/Users/danielacossio/Documents/Chrastil_Lab/Projects/SNAG/ortical_thickness/Freesurfer/"
#working_dir <- "/Users/danielacossio/Library/CloudStorage/GoogleDrive-dcossio1@uci.edu/Other computers/My iMac/Chrastil_Lab/Projects/SNAG/Cortical_thickness/" # Laptop path
sub_info <- ReadingCSVFunc("subject_info.csv")%>% filter(!(subject_id %in% c("309", "341")))
working_dir <- "/Users/danielacossio/Documents/Chrastil_Lab/Projects/SNAG/ortical_thickness/Freesurfer/"
#working_dir <- "/Users/danielacossio/Library/CloudStorage/GoogleDrive-dcossio1@uci.edu/Other computers/My iMac/Chrastil_Lab/Projects/SNAG/Cortical_thickness/" # Laptop path
sub_info <- ReadingCSVFunc("subject_info.csv")%>% filter(!(subject_id %in% c("309", "341")))
working_dir <- "/Users/danielacossio/Documents/Chrastil_Lab/Projects/SNAG/ortical_thickness/Freesurfer/"
#working_dir <- "/Users/danielacossio/Library/CloudStorage/GoogleDrive-dcossio1@uci.edu/Other computers/My iMac/Chrastil_Lab/Projects/SNAG/Cortical_thickness/" # Laptop path
sub_info <- ReadingCSVFunc("subject_info.csv")%>% filter(!(subject_id %in% c("309", "341")))
working_dir <- "/Users/danielacossio/Documents/Chrastil_Lab/Projects/SNAG/cortical_thickness/Freesurfer/"
#working_dir <- "/Users/danielacossio/Library/CloudStorage/GoogleDrive-dcossio1@uci.edu/Other computers/My iMac/Chrastil_Lab/Projects/SNAG/Cortical_thickness/" # Laptop path
sub_info <- ReadingCSVFunc("subject_info.csv")%>% filter(!(subject_id %in% c("309", "341")))
working_dir <- "/Users/danielacossio/Documents/Chrastil_Lab/Projects/SNAG/Cortical_thickness/Freesurfer/"
#working_dir <- "/Users/danielacossio/Library/CloudStorage/GoogleDrive-dcossio1@uci.edu/Other computers/My iMac/Chrastil_Lab/Projects/SNAG/Cortical_thickness/" # Laptop path
sub_info <- ReadingCSVFunc("subject_info.csv")%>% filter(!(subject_id %in% c("309", "341")))
View(temp)
library(ggplot2)
#(plyr)
library(ppcor)
library(tidyverse)
# library(dplyr)
# library(tidyr)
library(stringr)
library(kableExtra)
# library(data.table)
# library(network)
# library(tidygraph)
# library(ggraph)
# library(igraph)
# library(networkD3)
# library(CINNA)
# library(umap)
# library(plotly)
#library(factoextra)
#library(lsr)
# library(car)
library(ggpubr)
#library(entropy)
#library(ds4psy)
# library(pROC)
#library(devtools)
#library(BRRR)
#library(stats)
#library(afex)
library(knitr)
library(janitor)
library(car)
library(ggiraph)
library(ggiraphExtra)
library(moonBook)
library(nationalparkcolors)
library(gridExtra)
library(markdown)
working_dir <- "/Users/danielacossio/Documents/Chrastil_Lab/Projects/SNAG/Cortical_thickness/Freesurfer/"
#working_dir <- "/Users/danielacossio/Library/CloudStorage/GoogleDrive-dcossio1@uci.edu/Other computers/My iMac/Chrastil_Lab/Projects/SNAG/Cortical_thickness/" # Laptop path
sub_info <- ReadingCSVFunc("subject_info.csv")%>% filter(!(subject_id %in% c("309", "341")))
# Here i have created a bunch of functions for things actions that i will be using repetitively.
ReadingCSVFunc <- function(pathname){
#' @description: purpose of this is to read in CSVs and clean them up
#' @return: DF
read.csv(paste0(working_dir, pathname), header=TRUE)
}
TableOutput <- function(df){
knitr::kable(df, row.names=F) %>% kable_styling(bootstrap_options =  c("striped", "hover", "condensed"),position = "center") %>% scroll_box(width = "600px", height = "300px")
}
working_dir <- "/Users/danielacossio/Documents/Chrastil_Lab/Projects/SNAG/Cortical_thickness/Freesurfer/"
#working_dir <- "/Users/danielacossio/Library/CloudStorage/GoogleDrive-dcossio1@uci.edu/Other computers/My iMac/Chrastil_Lab/Projects/SNAG/Cortical_thickness/" # Laptop path
sub_info <- ReadingCSVFunc("subject_info.csv")%>% filter(!(subject_id %in% c("309", "341")))
left_ct <- ReadingCSVFunc("DK_LH_parc_atlas.csv")
View(left_ct)
left_ct <- read.delim(paste0(working_dir,"DK_LH_parc_atlas.csv"),header=TRUE)
View(left_ct)
left_ct <- read.delim(paste0(working_dir,"DK_LH_parc_atlas.csv"),header=TRUE)
right_ct <- read.delim(paste0(working_dir,"DK_RH_parc_atlas.csv"),header=TRUE)
left_ct <- read.delim(paste0(working_dir,"DK_LH_parc_atlas.csv"),header=TRUE)
right_ct <- read.delim(paste0(working_dir,"DK_RH_parc_atlas.csv"),header=TRUE)
sub_cort <- read.delim(paste0(working_dir,"DK_seg_atlas.csv"),header=TRUE)
View(right_ct)
View(sub_info)
View(sub_cort)
left_ct_colnames <- colnames(left_ct)
View(left_ct)
left_ct_colnames <- colnames(left_ct)
for (i in left_ct_colnames){
if (grepl("_thickness", i)){
print(i)
}
}
left_ct_colnames[i]
left_ct_colnames[[i]]
left_ct_colnames[i
}
left_ct_colnames
left_ct_colnames[38]
length(left_ct_colnames)
left_ct_colnames <- colnames(left_ct)
for (i in length(left_ct_colnames)){
if (grepl("_thickness", left_ct_colnames[i])){
print(left_ct_colnames[i])
}
}
str_remove(atlas_path$ROI.Name,paste0(NetworkNum,"Networks_"))
left_ct_colnames <- colnames(left_ct)
for (i in length(left_ct_colnames)){
if (grepl("_thickness", left_ct_colnames[i])){
print(left_ct_colnames[i])
}
}
left_ct_colnames[i]
for (i in length(left_ct_colnames)){
if (grepl("_thickness", left_ct_colnames[i])){
print(left_ct_colnames[i])
}
}
length(left_ct_colnames)
left_ct_colnames <- colnames(left_ct)
for (i in 1:length(left_ct_colnames)){
if (grepl("_thickness", left_ct_colnames[i])){
print(left_ct_colnames[i])
}
}
i <- 2
left_ct_colnames[i]
str_remove(left_ct_colnames[i],"_thickness")
str_remove(left_ct_colnames[i],"_thickness")
left_ct_colnames[i] <-str_remove(left_ct_colnames[i],"_thickness")
left_ct_colnames[i]
colnames(left_ct)
left_ct[1]
colnames(left_ct[i])
for (i in 1:length(colnames(left_ct))){
if (grepl("_thickness", colnames(left_ct[i]))){
print(colnames(left_ct[i]))
#   str_remove(left_ct_colnames[i],"_thickness")
# left_ct_colnames[i] <-str_remove(left_ct_colnames[i],"_thickness")
}
}
for (i in 1:length(colnames(left_ct))){
if (grepl("_thickness", colnames(left_ct[i]))){
print(colnames(left_ct[i]))
#   str_remove(left_ct_colnames[i],"_thickness")
colnames(left_ct[i]) <-str_remove(colnames(left_ct[i]),"_thickness")
}
}
View(left_ct)
i <- 2
colnames(left_ct[i]) <- str_remove(colnames(left_ct[i]),"_thickness")
colnames(left_ct[i])
str_remove(colnames(left_ct[i]),"_thickness")
colnames(left_ct[i])
colnames(left_ct[i]) <- str_remove(colnames(left_ct[i]),"_thickness")
colnames(left_ct[i])
x <- str_remove(colnames(left_ct[i]),"_thickness")
colnames(left_ct[i]) <- x
colnames(left_ct[i])
colnames(left_ct)[i]
colnames(left_ct)[i] <- x
colnames(left_ct)[i]
for (i in 1:length(colnames(left_ct))){
if (grepl("_thickness", colnames(left_ct[i]))){
print(colnames(left_ct[i]))
#   str_remove(left_ct_colnames[i],"_thickness")
colnames(left_ct)[i] <- str_remove(colnames(left_ct[i]),"_thickness")
}
}
View(left_ct)
left_ct_colnames <- colnames(left_ct)
for (i in 1:length(colnames(left_ct))){
if (grepl("_thickness", colnames(left_ct[i]))){
print(colnames(left_ct[i]))
#   str_remove(left_ct_colnames[i],"_thickness")
colnames(left_ct)[i] <- str_remove(colnames(left_ct[i]),"_thickness")
}
}
colnames(left_ct)[1] <- "subjects"
for (i in 1:length(colnames(left_ct))){
if (grepl("_thickness", colnames(left_ct[i]))){
print(colnames(left_ct[i]))
#   str_remove(left_ct_colnames[i],"_thickness")
colnames(left_ct)[i] <- str_remove(colnames(left_ct[i]),"_thickness")
}
}
colnames(left_ct)[1] <- "subjects"
View(left_ct)
for (i in 1:length(colnames(left_ct))){
if (grepl("_thickness", colnames(left_ct[i]))){
print(colnames(left_ct[i]))
#   str_remove(left_ct_colnames[i],"_thickness")
colnames(left_ct)[i] <- str_remove(colnames(left_ct[i]),"_thickness")
}
}
colnames(left_ct)[1] <- "subjects"
for (i in 1:length(colnames(right_ct))){
if (grepl("_thickness", colnames(right_ct[i]))){
print(colnames(right_ct[i]))
#   str_remove(left_ct_colnames[i],"_thickness")
colnames(right_ct)[i] <- str_remove(colnames(right_ct[i]),"_thickness")
}
}
colnames(right_ct)[1] <- "subjects"
View(sub_cort)
colnames(sub_cort)[1] <- "subjects"
left_ct
colneames(left_ct)
colnames(left_ct)
colneames(left_ct)
colnames(right_ct)
# precentral, postcentral, superoir parietal, superior frontal, caudate and putamen
lh_apriori <- c("lh_postcentral","lh_precentral","lh_superiorparietal","lh_superiorfrontal")
rh_apriori <- c("rh_postcentral","rh_precentral","rh_superiorparietal","rh_superiorfrontal")
left_ct <- cbind(left_ct,sub_info)
right_ct <- cbind(right_ct,sub_info)
cor_results <-
data.frame(matrix(nrow = 0, ncol = 17)) %>%   `colnames<-`(c("roi", "estimate", "p.value", "statistic", "n", "gp", "Method"))
for (ROI in lh_apriori) {
print(ROI)
# if(!is.na(sum(left_ct[[ROI]])) == FALSE){
#
#   pcorlist[[ROI]] <- NA
#
# }else{
# pcorlist[[ROI]] <-
#   pcor.test(x = df["loop_de_avg_degree"], y = df[[ROI]], z = df[, c("age_scan_years")])
# temp <- cbind(ROI, pcorlist[[ROI]])
# cor_results <- rbind(cor_results, temp)
# }
}
left_ct[[ROI]]
left_ct["loop_ae_avg_degree"]
for (ROI in lh_apriori) {
print(ROI)
if(!is.na(sum(left_ct[[ROI]])) == FALSE){
pcorlist[[ROI]] <- NA
}else{
pcorlist[[ROI]] <-
pcor.test(x = left_ct["loop_ae_avg_degree"], y = left_ct[[ROI]], z = df[, c("age_scan_years")])
temp <- cbind(ROI, pcorlist[[ROI]])
cor_results <- rbind(cor_results, temp)
}
}
for (ROI in lh_apriori) {
print(ROI)
if(!is.na(sum(left_ct[[ROI]])) == FALSE){
pcorlist[[ROI]] <- NA
}else{
pcorlist[[ROI]] <-
pcor.test(x = left_ct["loop_ae_avg_degree"], y = left_ct[[ROI]], z = left_ct[, c("age_scan_years")])
temp <- cbind(ROI, pcorlist[[ROI]])
cor_results <- rbind(cor_results, temp)
}
}
pcor.test(x = left_ct["loop_ae_avg_degree"], y = left_ct[[ROI]], z = left_ct[, c("age_scan_years")])
pcor.test(x = left_ct["loop_ae_avg_degree"], y = left_ct[[ROI]], z = left_ct[, c("age_scan_years")])
left_ct[, c("age_scan_years")]
class(left_ct[, c("age_scan_years")])
class(left_ct["loop_ae_avg_degree"])
class(left_ct[[ROI]])
for (ROI in lh_apriori) {
print(ROI)
if(!is.na(sum(left_ct[[ROI]])) == FALSE){
pcorlist[[ROI]] <- NA
}else{
pcorlist[[ROI]] <-
pcor.test(x = left_ct[["loop_ae_avg_degree"]], y = left_ct[[ROI]], z = left_ct[, c("age_scan_years")])
temp <- cbind(ROI, pcorlist[[ROI]])
cor_results <- rbind(cor_results, temp)
}
}
pcor.test(x = left_ct[["loop_ae_avg_degree"]], y = left_ct[["lh_postcentral"]], z = left_ct[, c("age_scan_years")])
pcor.test(x = left_ct["loop_ae_avg_degree"], y = left_ct[["lh_postcentral"]], z = left_ct[, c("age_scan_years")])
pcor.test(x = left_ct["loop_ae_avg_degree"], y = left_ct["lh_postcentral"], z = left_ct[, c("age_scan_years")])
pcor.test(x = left_ct["loop_ae_avg_degree"], y = left_ct["lh_postcentral"])
df <- left_ct %>% filter(., "loop_ae_avg_degree" != "NA")
View(df)
df <- left_ct %>% filter(loop_ae_avg_degree != "NA")
View(df)
corlist <- list()
for (ROI in lh_apriori) {
print(ROI)
if(!is.na(sum(df[[ROI]])) == FALSE){
pcorlist[[ROI]] <- NA
}else{
pcorlist[[ROI]] <-
pcor.test(x = df[["loop_ae_avg_degree"]], y = df[[ROI]], z = df[, c("age_scan_years")])
temp <- cbind(ROI, pcorlist[[ROI]])
cor_results <- rbind(cor_results, temp)
}
}
pcorlist <- list()
for (ROI in lh_apriori) {
print(ROI)
if(!is.na(sum(df[[ROI]])) == FALSE){
pcorlist[[ROI]] <- NA
}else{
pcorlist[[ROI]] <-
pcor.test(x = df[["loop_ae_avg_degree"]], y = df[[ROI]], z = df[, c("age_scan_years")])
temp <- cbind(ROI, pcorlist[[ROI]])
cor_results <- rbind(cor_results, temp)
}
}
View(pcorlist)
pcorlist[["lh_postcentral"]]
pcorlist[["lh_precentral"]]
pcorlist[["lh_superiorparietal"]]
pcorlist[["lh_superiorfrontal"]]
df <- left_ct %>% filter(loop_ae_avg_degree != "NA")
df$sex[df$sex=="Male"] <- 1
df$sex[df$sex=="Female"] <- 0
df$sex <- as.numeric(df$sex)
pcorlist <- list()
for (ROI in lh_apriori) {
print(ROI)
if(!is.na(sum(df[[ROI]])) == FALSE){
pcorlist[[ROI]] <- NA
}else{
pcorlist[[ROI]] <-
pcor.test(x = df[["loop_ae_avg_degree"]], y = df[[ROI]], z = df[, c("age_scan_years","sex")])
temp <- cbind(ROI, pcorlist[[ROI]])
cor_results <- rbind(cor_results, temp)
}
}
View(pcorlist)
pcorlist[["lh_superiorfrontal"]]
pcorlist[["lh_superiorparietal"]]
pcorlist[["lh_precentral"]]
pcorlist[["lh_postcentral"]]
cor_results <-
data.frame(matrix(nrow = 0, ncol = 0) %>%   `colnames<-`(c("roi", "estimate", "p.value", "statistic", "n", "gp", "Method"))
cor_results <-
cor_results <-
data.frame(matrix(nrow = 0, ncol = 0)) %>%   `colnames<-`(c("roi", "estimate", "p.value", "statistic", "n", "gp", "Method"))
cor_results <-
data.frame(matrix(nrow = 0, ncol = 7)) %>%   `colnames<-`(c("roi", "estimate", "p.value", "statistic", "n", "gp", "Method"))
cor_results <-
data.frame(matrix(nrow = 0, ncol = 7)) %>%   `colnames<-`(c("roi", "estimate", "p.value", "statistic", "n", "gp", "Method"))
pcorlist <- list()
for (ROI in lh_apriori) {
print(ROI)
if(!is.na(sum(df[[ROI]])) == FALSE){
pcorlist[[ROI]] <- NA
}else{
pcorlist[[ROI]] <-
pcor.test(x = df[["loop_ae_avg_degree"]], y = df[[ROI]], z = df[, c("age_scan_years","sex")])
temp <- cbind(ROI, pcorlist[[ROI]])
cor_results <- rbind(cor_results, temp)
}
}
cor_results$adj.pval <- p.adjust(cor_results$p.value, method = "BH", n = length(cor_results$p.value))
cor_results <- arrange(cor_results,p.value)
View(cor_results)
all_rois <- cbind(sub_info, left_ct)
all_rois <- cbind(all_rois,right_ct)
all_rois <- cbind(all_rois,sub_cort)
all_apriori <- c(lh_apriori,rh_apriori)
lh_apriori <- c("lh_postcentral","lh_precentral","lh_superiorparietal","lh_superiorfrontal")
rh_apriori <- c("rh_postcentral","rh_precentral","rh_superiorparietal","rh_superiorfrontal")
all_apriori <- c(lh_apriori,rh_apriori)
cor_results <-
data.frame(matrix(nrow = 0, ncol = 7)) %>%   `colnames<-`(c("roi", "estimate", "p.value", "statistic", "n", "gp", "Method"))
pcorlist <- list()
for (ROI in all_apriori) {
print(ROI)
if(!is.na(sum(df[[ROI]])) == FALSE){
pcorlist[[ROI]] <- NA
}else{
pcorlist[[ROI]] <-
pcor.test(x = df[["loop_ae_avg_degree"]], y = df[[ROI]], z = df[, c("age_scan_years","sex")])
temp <- cbind(ROI, pcorlist[[ROI]])
cor_results <- rbind(cor_results, temp)
}
}
df <- left_ct %>% filter(loop_ae_avg_degree != "NA")
df$sex[df$sex=="Male"] <- 1
df$sex[df$sex=="Female"] <- 0
df$sex <- as.numeric(df$sex)
cor_results <-
data.frame(matrix(nrow = 0, ncol = 7)) %>%   `colnames<-`(c("roi", "estimate", "p.value", "statistic", "n", "gp", "Method"))
pcorlist <- list()
for (ROI in all_apriori) {
print(ROI)
if(!is.na(sum(df[[ROI]])) == FALSE){
pcorlist[[ROI]] <- NA
}else{
pcorlist[[ROI]] <-
pcor.test(x = df[["loop_ae_avg_degree"]], y = df[[ROI]], z = df[, c("age_scan_years","sex")])
temp <- cbind(ROI, pcorlist[[ROI]])
cor_results <- rbind(cor_results, temp)
}
}
df <- all_rois %>% filter(loop_ae_avg_degree != "NA")
View(all_rois)
working_dir <- "/Users/danielacossio/Documents/Chrastil_Lab/Projects/SNAG/Cortical_thickness/Freesurfer/"
#working_dir <- "/Users/danielacossio/Library/CloudStorage/GoogleDrive-dcossio1@uci.edu/Other computers/My iMac/Chrastil_Lab/Projects/SNAG/Cortical_thickness/" # Laptop path
sub_info <- ReadingCSVFunc("subject_info.csv") %>% filter(!(subject_id %in% c("309", "341")))
left_ct <- read.delim(paste0(working_dir,"DK_LH_parc_atlas.csv"),header=TRUE)
right_ct <- read.delim(paste0(working_dir,"DK_RH_parc_atlas.csv"),header=TRUE)
sub_cort <- read.delim(paste0(working_dir,"DK_seg_atlas.csv"),header=TRUE)
for (i in 1:length(colnames(left_ct))){
if (grepl("_thickness", colnames(left_ct[i]))){
print(colnames(left_ct[i]))
#   str_remove(left_ct_colnames[i],"_thickness")
colnames(left_ct)[i] <- str_remove(colnames(left_ct[i]),"_thickness")
}
}
colnames(left_ct)[1] <- "subjects"
all_rois <- cbind(sub_info, left_ct)
for (i in 1:length(colnames(right_ct))){
if (grepl("_thickness", colnames(right_ct[i]))){
print(colnames(right_ct[i]))
#   str_remove(left_ct_colnames[i],"_thickness")
colnames(right_ct)[i] <- str_remove(colnames(right_ct[i]),"_thickness")
}
}
colnames(right_ct)[1] <- "subjects"
all_rois <- cbind(all_rois,right_ct)
colnames(sub_cort)[1] <- "subjects"
all_rois <- cbind(all_rois,sub_cort)
# precentral, postcentral, superoir parietal, superior frontal, caudate and putamen
lh_apriori <- c("lh_postcentral","lh_precentral","lh_superiorparietal","lh_superiorfrontal")
rh_apriori <- c("rh_postcentral","rh_precentral","rh_superiorparietal","rh_superiorfrontal")
all_apriori <- c(lh_apriori,rh_apriori)
df <- all_rois %>% filter(loop_ae_avg_degree != "NA")
df <- all_rois %>% filter(loop_ae_avg_degree != "NA")
View(sub_info)
for (i in 1:length(colnames(left_ct))){
if (grepl("_thickness", colnames(left_ct[i]))){
print(colnames(left_ct[i]))
#   str_remove(left_ct_colnames[i],"_thickness")
colnames(left_ct)[i] <- str_remove(colnames(left_ct[i]),"_thickness")
}
}
all_rois <- cbind(sub_info, left_ct)
for (i in 1:length(colnames(right_ct))){
if (grepl("_thickness", colnames(right_ct[i]))){
print(colnames(right_ct[i]))
#   str_remove(left_ct_colnames[i],"_thickness")
colnames(right_ct)[i] <- str_remove(colnames(right_ct[i]),"_thickness")
}
}
all_rois <- cbind(all_rois,right_ct)
colnames(sub_cort)[1] <- "subjects"
all_rois <- cbind(all_rois,sub_cort)
# precentral, postcentral, superoir parietal, superior frontal, caudate and putamen
lh_apriori <- c("lh_postcentral","lh_precentral","lh_superiorparietal","lh_superiorfrontal")
rh_apriori <- c("rh_postcentral","rh_precentral","rh_superiorparietal","rh_superiorfrontal")
all_apriori <- c(lh_apriori,rh_apriori)
df <- all_rois %>% filter(loop_ae_avg_degree != "NA")
View(all_rois)
