#    panel.border = element_rect(fill=NA,color = "#502E23"),
#    panel.background =element_blank(),
#    strip.text.x = element_text(
#      size = 16,
#      color = "black",
#      face = "bold.italic"
#    ),
# legend.position = "right")+
stat_cor( method = "pearson", label.x.npc = "center",
label.y.npc = "top")
#legend.key.size = unit(2, 'cm'),
#legend.title = element_text(size=18), #change legend title font size
#legend.text = element_text(size=18),
#png(file = CleanCSVsfigpath,ROI,"_sexdiff_QA.png"))  #,".png"))
#print(plist[[ROI]] )
#dev.off()
}
plist[[ROI]]
df <-CleanDF(CT_7network,"loop_ae_rad3_degree")
library(ggplot2)
#(plyr)
library(ppcor)
library(tidyverse)
# library(dplyr)
# library(tidyr)
library(stringr)
library(kableExtra)
# library(data.table)
# library(network)
# library(tidygraph)
# library(ggraph)
# library(igraph)
# library(networkD3)
# library(CINNA)
# library(umap)
# library(plotly)
#library(factoextra)
#library(lsr)
# library(car)
library(ggpubr)
#library(entropy)
#library(ds4psy)
# library(pROC)
#library(devtools)
#library(BRRR)
#library(stats)
#library(afex)
library(knitr)
library(janitor)
library(car)
library(ggiraph)
library(ggiraphExtra)
library(moonBook)
library(nationalparkcolors)
library(gridExtra)
library(markdown)
df <-CleanDF(CT_7network,"loop_ae_rad3_degree")
ROIs<- SelectAtlas(400,7) %>% .[-1]
pcorlist <- list()
sig_corrs <-data.frame(matrix(nrow=0,ncol=7)) %>% `colnames<-`(c("roi", "estimate" ,"p.value","statistic","n","gp","Method"))
for (ROI in ROIs) {
pcorlist[[ROI]] <- pcor.test(x=df["loop_ae_rad3_degree"],y=df[[ROI]],z= df[,c("age_scan_years", "sex")])
if (pcorlist[[ROI]][["p.value"]] < 0.05){
temp <-cbind(ROI,pcorlist[[ROI]])
sig_corrs <- rbind(sig_corrs,temp)
}
}
write.csv(sig_corrs, paste0(working_dir,"all.7net400par.RAD3.AE.sigROIs.csv"), row.names = FALSE)
df <- CleanDF(CT_7network,"loop_ae_rad3_degree") %>% filter(sex==0)
ROIs<- SelectAtlas(400,7) %>% .[-1]
pcorlist <- list()
sig_corrs <-data.frame(matrix(nrow=0,ncol=7)) %>% `colnames<-`(c("roi", "estimate" ,"p.value","statistic","n","gp","Method"))
for (ROI in ROIs) {
pcorlist[[ROI]] <- pcor.test(x=df["loop_ae_avg_degree"],y=df[[ROI]],z= df[,c("age_scan_years")])
if (pcorlist[[ROI]][["p.value"]] < 0.05){
temp <-cbind(ROI,pcorlist[[ROI]])
sig_corrs <- rbind(sig_corrs,temp)
}
}
df <- CleanDF(CT_7network,"loop_ae_rad3_degree") %>% filter(sex==0)
ROIs<- SelectAtlas(400,7) %>% .[-1]
pcorlist <- list()
sig_corrs <-data.frame(matrix(nrow=0,ncol=7)) %>% `colnames<-`(c("roi", "estimate" ,"p.value","statistic","n","gp","Method"))
for (ROI in ROIs) {
pcorlist[[ROI]] <- pcor.test(x=df["loop_ae_rad3_degree"],y=df[[ROI]],z= df[,c("age_scan_years")])
if (pcorlist[[ROI]][["p.value"]] < 0.05){
temp <-cbind(ROI,pcorlist[[ROI]])
sig_corrs <- rbind(sig_corrs,temp)
}
}
write.csv(sig_corrs, paste0(working_dir,"female.7net400par.RAD3.AE.sigROIs.csv"), row.names = FALSE)
TableOutput <- function(df){
knitr::kable(df, row.names=F) %>% kable_styling(bootstrap_options =  c("striped", "hover", "condensed"),position = "center") %>% scroll_box(width = "600px", height = "300px")
}
df[[ROI]]
sig_corrs
View(sig_corrs)
ROI
sig_corrs[ROI]
sig_corrs[[ROI]
]
length(ROIs)
ROIs<- c(sig_corrs$ROI)
ROIs<- c(sig_corrs$ROI)
length(ROIs)
sig_corrs$estimate
sig_corrs$ROI=ROI
View(sig_corrs)
df <-CleanDF(CT_7network,"loop_de_avg_degree")
ROIs<- SelectAtlas(400,7) %>% .[-1]
pcorlist <- list()
sig_corrs <-data.frame(matrix(nrow=0,ncol=7)) %>% `colnames<-`(c("roi", "estimate" ,"p.value","statistic","n","gp","Method"))
for (ROI in ROIs) {
pcorlist[[ROI]] <- pcor.test(x=df["loop_de_avg_degree"],y=df[[ROI]],z= df[,c("age_scan_years", "sex")])
if (pcorlist[[ROI]][["p.value"]] < 0.05){
temp <-cbind(ROI,pcorlist[[ROI]])
sig_corrs <- rbind(sig_corrs,temp)
}
}
write.csv(sig_corrs, paste0(working_dir,"all.7net400par.aveDT.sigROIs.csv"), row.names = FALSE)
ROIs<- c(sig_corrs$ROI)
sig_corrs$ROI[,ROI]
sig_corrs$ROI[,c(ROI)]
View(sig_corrs)
ROIs<- c(sig_corrs$ROI)  # removing sibject ID
plist <- list()
for (ROI in ROIs) {
print(ROI)
plist[[ROI]] <- ggplot(df, aes(x=.data[[ROI]], y= loop_de_avg_degree))  +
geom_point(color="#502E23", size=4) +
geom_smooth(method="lm", level=0.95,color ="#E2929D", se=FALSE,linewidth=2) +
theme_classic() +
labs(x ="Cortical Thickness", y = "Degree Traveled" , title = ROI) +
theme( axis.title.x = element_text(vjust = -4),
plot.margin = margin(1, 1, 1, 1, "cm")) +
#    axis.text.x = element_text(size = 25),
#    axis.text.y = element_text(size = 25),
#    axis.title.y = element_text(vjust = 4, size = 16),
#    plot.title = element_text(hjust = 0.5 ,size=16),
#    panel.border = element_rect(fill=NA,color = "#502E23"),
#    panel.background =element_blank(),
#    strip.text.x = element_text(
#      size = 16,
#      color = "black",
#      face = "bold.italic"
#    ),
# legend.position = "right")+
#   stat_cor( method = "pearson", label.x.npc = "center",
# label.y.npc = "top")
annotate("text", label = past0( "r=", ), x = 0.43, y = 5, color="#E2929D", size=8)
#legend.key.size = unit(2, 'cm'),
#legend.title = element_text(size=18), #change legend title font size
#legend.text = element_text(size=18),
#png(file = CleanCSVsfigpath,ROI,"_sexdiff_QA.png"))  #,".png"))
#print(plist[[ROI]] )
#dev.off()
}
sig_corrs$ROI[,c(ROI)]
sig_corrs$ROI[ROI]
View(sig_corrs)
ROI
sig_corrs$ROI[[ROI]
]
sig_corrs$ROI[ROI,]
sig_corrs$ROI[c(ROI),]
sig_corrs$ROI[c(ROI)]
sig_corrs$ROI==ROI
subset(sig_corrs, ROI == ROI, select = 'estimate')
sig_corrs[sig_corrs$ROI == 'ROI',]['estimate']
sig_corrs[sig_corrs$ROI == 'ROI',]
sig_corrs[sig_corrs$ROI == ROI,]
sig_corrs[sig_corrs$ROI == ROI,]['estimate']
sig_corrs[sig_corrs$ROI == ROI,]['p.value']
round(sig_corrs[sig_corrs$ROI == ROI,]['p.value'], x=3)
class(sig_corrs[sig_corrs$ROI == ROI,]['p.value'])
as.numeric(sig_corrs[sig_corrs$ROI == ROI,]['p.value'])
round(as.numeric(sig_corrs[sig_corrs$ROI == ROI,]['p.value']), x=3)
round(as.numeric(sig_corrs[sig_corrs$ROI == ROI,]['p.value']), digits =3)
R <- round(as.numeric(sig_corrs[sig_corrs$ROI == ROI,]['estimate']), digits =3)
pval <- round(as.numeric(sig_corrs[sig_corrs$ROI == ROI,]['p.value']), digits =3)
past0("r=",R," ","p=",pval )
paste0("r=",R," ","p=",pval )
italic(paste0("r=",R," ","p=",pval ))
paste0(italic("r=",R," ","p=",pval ))
italic
help("italic")
paste(italic("r=",R," ","p=",pval ))
italic("r=")
italic('one')
paste(italic("r="),R," ",italic("p="),pval )
paste(italic('r='),R," ",italic('p='),pval )
paste("Length-Freq of", italic("E. coruscans"), "by Gear")
install.packages("flextable")
paste0("r=",R," ","p=",pval )
ggplot(df, aes(x=.data[[ROI]], y= loop_de_avg_degree))  +
geom_point(color="#502E23", size=4) +
geom_smooth(method="lm", level=0.95,color ="#E2929D", se=FALSE,linewidth=2) +
theme_classic() +
labs(x ="Cortical Thickness", y = "Degree Traveled" , title = ROI) +
theme( axis.title.x = element_text(vjust = -4),
plot.margin = margin(1, 1, 1, 1, "cm")) +
#    axis.text.x = element_text(size = 25),
#    axis.text.y = element_text(size = 25),
#    axis.title.y = element_text(vjust = 4, size = 16),
#    plot.title = element_text(hjust = 0.5 ,size=16),
#    panel.border = element_rect(fill=NA,color = "#502E23"),
#    panel.background =element_blank(),
#    strip.text.x = element_text(
#      size = 16,
#      color = "black",
#      face = "bold.italic"
#    ),
# legend.position = "right")+
#   stat_cor( method = "pearson", label.x.npc = "center",
# label.y.npc = "top")
annotate("text", label = paste0("r=",R," ","p=",pval ))
ggplot(df, aes(x=.data[[ROI]], y= loop_de_avg_degree))  +
geom_point(color="#502E23", size=4) +
geom_smooth(method="lm", level=0.95,color ="#E2929D", se=FALSE,linewidth=2) +
theme_classic() +
labs(x ="Cortical Thickness", y = "Degree Traveled" , title = ROI) +
theme( axis.title.x = element_text(vjust = -4),
plot.margin = margin(1, 1, 1, 1, "cm")) +
#    axis.text.x = element_text(size = 25),
#    axis.text.y = element_text(size = 25),
#    axis.title.y = element_text(vjust = 4, size = 16),
#    plot.title = element_text(hjust = 0.5 ,size=16),
#    panel.border = element_rect(fill=NA,color = "#502E23"),
#    panel.background =element_blank(),
#    strip.text.x = element_text(
#      size = 16,
#      color = "black",
#      face = "bold.italic"
#    ),
# legend.position = "right")+
#   stat_cor( method = "pearson", label.x.npc = "center",
# label.y.npc = "top")
annotate("text", label = paste0("r=",R," ","p=",pval ), x = 0.43, y = 5, color="#E2929D", size=8)
View(df)
df[ ROI]
max((df[ ROI])
)
max((df[ ROI]) +0.5
)
max(df[loop_de_avg_degree])
df <-CleanDF(CT_7network,"loop_de_avg_degree")
ylimit <- max(df[loop_de_avg_degree])
max(df["loop_de_avg_degree"])
R <- round(as.numeric(sig_corrs[sig_corrs$ROI == ROI,]['estimate']), digits =3)
pval <- round(as.numeric(sig_corrs[sig_corrs$ROI == ROI,]['p.value']), digits =3)
xlimit <- max(df[ROI])
ylimit <- max(df["loop_de_avg_degree"])
ggplot(df, aes(x=.data[[ROI]], y= loop_de_avg_degree))  +
geom_point(color="#502E23", size=4) +
geom_smooth(method="lm", level=0.95,color ="#E2929D", se=FALSE,linewidth=2) +
theme_classic() +
labs(x ="Cortical Thickness", y = "Degree Traveled" , title = ROI) +
theme( axis.title.x = element_text(vjust = -4),
plot.margin = margin(1, 1, 1, 1, "cm")) +
#    axis.text.x = element_text(size = 25),
#    axis.text.y = element_text(size = 25),
#    axis.title.y = element_text(vjust = 4, size = 16),
#    plot.title = element_text(hjust = 0.5 ,size=16),
#    panel.border = element_rect(fill=NA,color = "#502E23"),
#    panel.background =element_blank(),
#    strip.text.x = element_text(
#      size = 16,
#      color = "black",
#      face = "bold.italic"
#    ),
# legend.position = "right")+
#   stat_cor( method = "pearson", label.x.npc = "center",
# label.y.npc = "top")
annotate("text", label = paste0("r=",R," ","p=",pval ), x = xlimit, y = ylimit, color="#E2929D", size=8)
ggplot(df, aes(x=.data[[ROI]], y= loop_de_avg_degree))  +
geom_point(color="#502E23", size=4) +
geom_smooth(method="lm", level=0.95,color ="#E2929D", se=FALSE,linewidth=2) +
theme_classic() +
labs(x ="Cortical Thickness", y = "Degree Traveled" , title = ROI) +
theme( axis.title.x = element_text(vjust = -4),
plot.margin = margin(1, 1, 1, 1, "cm")) +
#    axis.text.x = element_text(size = 25),
#    axis.text.y = element_text(size = 25),
#    axis.title.y = element_text(vjust = 4, size = 16),
#    plot.title = element_text(hjust = 0.5 ,size=16),
#    panel.border = element_rect(fill=NA,color = "#502E23"),
#    panel.background =element_blank(),
#    strip.text.x = element_text(
#      size = 16,
#      color = "black",
#      face = "bold.italic"
#    ),
# legend.position = "right")+
#   stat_cor( method = "pearson", label.x.npc = "center",
# label.y.npc = "top")
annotate("text", label = paste0("r=",R," ","p=",pval ), x = xlimit, y = ylimit, color="#E2929D", size=2)
ggplot(df, aes(x=.data[[ROI]], y= loop_de_avg_degree))  +
geom_point(color="#502E23", size=4) +
geom_smooth(method="lm", level=0.95,color ="#E2929D", se=FALSE,linewidth=2) +
theme_classic() +
labs(x ="Cortical Thickness", y = "Degree Traveled" , title = ROI) +
theme( axis.title.x = element_text(vjust = -4),
plot.margin = margin(1, 1, 1, 1, "cm")) +
#    axis.text.x = element_text(size = 25),
#    axis.text.y = element_text(size = 25),
#    axis.title.y = element_text(vjust = 4, size = 16),
#    plot.title = element_text(hjust = 0.5 ,size=16),
#    panel.border = element_rect(fill=NA,color = "#502E23"),
#    panel.background =element_blank(),
#    strip.text.x = element_text(
#      size = 16,
#      color = "black",
#      face = "bold.italic"
#    ),
# legend.position = "right")+
#   stat_cor( method = "pearson", label.x.npc = "center",
# label.y.npc = "top")
annotate("text", label = paste0("r=",R," ","p=",pval ), x = xlimit, y = ylimit, color="#E2929D", size=4)
xlimit <- max(df[ROI])-0.5
ggplot(df, aes(x=.data[[ROI]], y= loop_de_avg_degree))  +
geom_point(color="#502E23", size=4) +
geom_smooth(method="lm", level=0.95,color ="#E2929D", se=FALSE,linewidth=2) +
theme_classic() +
labs(x ="Cortical Thickness", y = "Degree Traveled" , title = ROI) +
theme( axis.title.x = element_text(vjust = -4),
plot.margin = margin(1, 1, 1, 1, "cm")) +
#    axis.text.x = element_text(size = 25),
#    axis.text.y = element_text(size = 25),
#    axis.title.y = element_text(vjust = 4, size = 16),
#    plot.title = element_text(hjust = 0.5 ,size=16),
#    panel.border = element_rect(fill=NA,color = "#502E23"),
#    panel.background =element_blank(),
#    strip.text.x = element_text(
#      size = 16,
#      color = "black",
#      face = "bold.italic"
#    ),
# legend.position = "right")+
#   stat_cor( method = "pearson", label.x.npc = "center",
# label.y.npc = "top")
annotate("text", label = paste0("r=",R," ","p=",pval ), x = xlimit, y = ylimit, color="#E2929D", size=4)
xlimit <- max(df[ROI])-0.2
ggplot(df, aes(x=.data[[ROI]], y= loop_de_avg_degree))  +
geom_point(color="#502E23", size=4) +
geom_smooth(method="lm", level=0.95,color ="#E2929D", se=FALSE,linewidth=2) +
theme_classic() +
labs(x ="Cortical Thickness", y = "Degree Traveled" , title = ROI) +
theme( axis.title.x = element_text(vjust = -4),
plot.margin = margin(1, 1, 1, 1, "cm")) +
#    axis.text.x = element_text(size = 25),
#    axis.text.y = element_text(size = 25),
#    axis.title.y = element_text(vjust = 4, size = 16),
#    plot.title = element_text(hjust = 0.5 ,size=16),
#    panel.border = element_rect(fill=NA,color = "#502E23"),
#    panel.background =element_blank(),
#    strip.text.x = element_text(
#      size = 16,
#      color = "black",
#      face = "bold.italic"
#    ),
# legend.position = "right")+
#   stat_cor( method = "pearson", label.x.npc = "center",
# label.y.npc = "top")
annotate("text", label = paste0("r=",R," ","p=",pval ), x = xlimit, y = ylimit, color="#E2929D", size=4)
library(ggplot2)
#(plyr)
library(ppcor)
library(tidyverse)
# library(dplyr)
# library(tidyr)
library(stringr)
library(kableExtra)
# library(data.table)
# library(network)
# library(tidygraph)
# library(ggraph)
# library(igraph)
# library(networkD3)
# library(CINNA)
# library(umap)
# library(plotly)
#library(factoextra)
#library(lsr)
# library(car)
library(ggpubr)
#library(entropy)
#library(ds4psy)
# library(pROC)
#library(devtools)
#library(BRRR)
#library(stats)
#library(afex)
library(knitr)
library(janitor)
library(car)
library(ggiraph)
library(ggiraphExtra)
library(moonBook)
library(nationalparkcolors)
library(gridExtra)
library(markdown)
ReadingCSVFunc <- function(pathname){
#' @description: purpose of this is to read in CSVs and clean them up
#' @return: DF
read.csv(paste0(working_dir, pathname), header=TRUE)
}
TableOutput <- function(df){
knitr::kable(df, row.names=F) %>% kable_styling(bootstrap_options =  c("striped", "hover", "condensed"),position = "center") %>% scroll_box(width = "600px", height = "300px")
}
CleanDF <- function(DF,Variable){
DF <- DF %>% select(-c("subject_id"))
subinfo <- sub_info  %>% select(c("subject_id", "sex", "age_scan_years","repo_status",Variable))
cleanedDF <- cbind(subinfo, DF) %>% drop_na()
cleanedDF$sex[cleanedDF$sex=="Male"] <- 1
cleanedDF$sex[cleanedDF$sex=="Female"] <- 0
cleanedDF$sex <- as.numeric(cleanedDF$sex)
return (cleanedDF)
}
SelectAtlas <- function(Parcel,NetworkNum){
#' @description: purpose of this is to read in and extract the ROIs from schaefer atlas you choose
#' @return: A list of all the ROIs
atlas_path <- ReadingCSVFunc(paste0("Schaefer2018_",Parcel,"Parcels_",NetworkNum, "Networks_order_FSLMNI152_1mm.Centroid_RAS.csv"))
atlas_path$ROI.Name <- str_remove(atlas_path$ROI.Name,paste0(NetworkNum,"Networks_"))
col_names <-c("subject_id",atlas_path$ROI.Name)
return(col_names)
}
working_dir <- "/Users/danielacossio/Documents/Chrastil_Lab/Projects/SNAG/Cortical_thickness/"
#working_dir <- "/Users/danielacossio/Library/CloudStorage/GoogleDrive-dcossio1@uci.edu/Other computers/My iMac/Chrastil_Lab/Projects/SNAG/Cortical_thickness/" # Laptop path
sub_info <- ReadingCSVFunc("subject_info.csv")%>% filter(!(subject_id %in% c("309", "341")))
CT_7network <- ReadingCSVFunc("master_CT400_parces7_networks.csv") %>% `colnames<-`(SelectAtlas(400,7)) %>%  arrange(subject_id)
CT_17network <- ReadingCSVFunc("master_CT400_parces17_networks.csv") %>% `colnames<-`(SelectAtlas(400,17)) %>%  arrange(subject_id)
View(sub_info)
temp <- sub_info %>% select(c(subject_id,loop_pe_avg_m,loop_ae_avg_degree))
View(temp)
temp <- sub_info %>% select(c(subject_id,sex ,loop_pe_avg_m,loop_ae_avg_degree))
df <-CleanDF(CT_7network,"loop_de_avg_degree")
View(df)
df <-CleanDF(CT_7network,"loop_de_avg_degree")  %>% filter(sex==1)
df <-CleanDF(CT_7network,"loop_ae_avg_degree")
View(df)
CT_17network <- ReadingCSVFunc("master_CT400_parces17_networks.csv") %>% `colnames<-`(SelectAtlas(400,17)) %>%  arrange(subject_id)
working_dir <- "/Users/danielacossio/Documents/Chrastil_Lab/Projects/SNAG/Cortical_thickness/"
#working_dir <- "/Users/danielacossio/Library/CloudStorage/GoogleDrive-dcossio1@uci.edu/Other computers/My iMac/Chrastil_Lab/Projects/SNAG/Cortical_thickness/" # Laptop path
sub_info <- ReadingCSVFunc("subject_info.csv")%>% filter(!(subject_id %in% c("309", "341")))
library(ggplot2)
#(plyr)
library(ppcor)
library(tidyverse)
# library(dplyr)
# library(tidyr)
library(stringr)
library(kableExtra)
# library(data.table)
# library(network)
# library(tidygraph)
# library(ggraph)
# library(igraph)
# library(networkD3)
# library(CINNA)
# library(umap)
# library(plotly)
#library(factoextra)
#library(lsr)
# library(car)
library(ggpubr)
#library(entropy)
#library(ds4psy)
# library(pROC)
#library(devtools)
#library(BRRR)
#library(stats)
#library(afex)
library(knitr)
library(janitor)
library(car)
library(ggiraph)
library(ggiraphExtra)
library(moonBook)
library(nationalparkcolors)
library(gridExtra)
library(markdown)
ReadingCSVFunc <- function(pathname){
#' @description: purpose of this is to read in CSVs and clean them up
#' @return: DF
read.csv(paste0(working_dir, pathname), header=TRUE)
}
TableOutput <- function(df){
knitr::kable(df, row.names=F) %>% kable_styling(bootstrap_options =  c("striped", "hover", "condensed"),position = "center") %>% scroll_box(width = "600px", height = "300px")
}
CleanDF <- function(DF,Variable){
DF <- DF %>% select(-c("subject_id"))
subinfo <- sub_info  %>% select(c("subject_id", "sex", "age_scan_years","repo_status",Variable))
cleanedDF <- cbind(subinfo, DF) %>% drop_na()
cleanedDF$sex[cleanedDF$sex=="Male"] <- 1
cleanedDF$sex[cleanedDF$sex=="Female"] <- 0
cleanedDF$sex <- as.numeric(cleanedDF$sex)
return (cleanedDF)
}
SelectAtlas <- function(Parcel,NetworkNum){
#' @description: purpose of this is to read in and extract the ROIs from schaefer atlas you choose
#' @return: A list of all the ROIs
atlas_path <- ReadingCSVFunc(paste0("Schaefer2018_",Parcel,"Parcels_",NetworkNum, "Networks_order_FSLMNI152_1mm.Centroid_RAS.csv"))
atlas_path$ROI.Name <- str_remove(atlas_path$ROI.Name,paste0(NetworkNum,"Networks_"))
col_names <-c("subject_id",atlas_path$ROI.Name)
return(col_names)
}
working_dir <- "/Users/danielacossio/Documents/Chrastil_Lab/Projects/SNAG/Cortical_thickness/"
#working_dir <- "/Users/danielacossio/Library/CloudStorage/GoogleDrive-dcossio1@uci.edu/Other computers/My iMac/Chrastil_Lab/Projects/SNAG/Cortical_thickness/" # Laptop path
sub_info <- ReadingCSVFunc("subject_info.csv")%>% filter(!(subject_id %in% c("309", "341")))
CT_7network <- ReadingCSVFunc("master_CT400_parces7_networks.csv") %>% `colnames<-`(SelectAtlas(400,7)) %>%  arrange(subject_id)
CT_17network <- ReadingCSVFunc("master_CT400_parces17_networks.csv") %>% `colnames<-`(SelectAtlas(400,17)) %>%  arrange(subject_id)
View(CT_7network)
