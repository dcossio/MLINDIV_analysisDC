lh_postcentral
df <- all_rois %>% filter(loop_de_avg_degree != "NA") %>% filter(sex==0)
cor_results <-
data.frame(matrix(nrow = 0, ncol = 7)) %>%   `colnames<-`(c("roi", "estimate", "p.value", "statistic", "n", "gp", "Method"))
pcorlist <- list()
for (ROI in all_apriori) {
print(ROI)
if(!is.na(sum(df[[ROI]])) == FALSE){
pcorlist[[ROI]] <- NA
}else{
pcorlist[[ROI]] <-
pcor.test(x = df[["loop_de_avg_degree"]], y = df[[ROI]], z = df[, c("age_scan_years","EstimatedTotalIntraCranialVol")])
temp <- cbind(ROI, pcorlist[[ROI]])
cor_results <- rbind(cor_results, temp)
}
}
cor_results$adj.pval <- p.adjust(cor_results$p.value, method = "bonferroni", n = length(cor_results$p.value))
cor_results <- arrange(cor_results,p.value)
View(cor_results)
df <- all_rois %>% filter(loop_de_avg_degree != "NA") %>% filter(sex==0)
cor_results <-
data.frame(matrix(nrow = 0, ncol = 7)) %>%   `colnames<-`(c("roi", "estimate", "p.value", "statistic", "n", "gp", "Method"))
pcorlist <- list()
for (ROI in all_apriori) {
print(ROI)
if(!is.na(sum(df[[ROI]])) == FALSE){
pcorlist[[ROI]] <- NA
}else{
pcorlist[[ROI]] <-
pcor.test(x = df[["loop_de_avg_degree"]], y = df[[ROI]], z = df[, c("age_scan_years","EstimatedTotalIntraCranialVol")])
temp <- cbind(ROI, pcorlist[[ROI]])
cor_results <- rbind(cor_results, temp)
}
}
cor_results$adj.pval <- p.adjust(cor_results$p.value, method = "bonferroni", n = length(cor_results$p.value))
cor_results <- arrange(cor_results,p.value)
TableOutput(cor_results)
df <- all_rois %>% filter(loop_de_avg_degree != "NA") %>% filter(sex==1)
cor_results <-
data.frame(matrix(nrow = 0, ncol = 7)) %>%   `colnames<-`(c("roi", "estimate", "p.value", "statistic", "n", "gp", "Method"))
pcorlist <- list()
for (ROI in all_apriori) {
print(ROI)
if(!is.na(sum(df[[ROI]])) == FALSE){
pcorlist[[ROI]] <- NA
}else{
pcorlist[[ROI]] <-
pcor.test(x = df[["loop_de_avg_degree"]], y = df[[ROI]], z = df[, c("age_scan_years","EstimatedTotalIntraCranialVol")])
temp <- cbind(ROI, pcorlist[[ROI]])
cor_results <- rbind(cor_results, temp)
}
}
cor_results$adj.pval <- p.adjust(cor_results$p.value, method = "bonferroni", n = length(cor_results$p.value))
cor_results <- arrange(cor_results,p.value)
View(cor_results)
# precentral, postcentral, superoir parietal, superior frontal, caudate and putamen
lh_apriori <- c("lh_postcentral","lh_precentral","lh_superiorparietal","lh_superiorfrontal")
rh_apriori <- c("rh_postcentral","rh_precentral","rh_superiorparietal","rh_superiorfrontal")
sub_apriori <- c("Left.Caudate","Right.Caudate","Left.Putamen","Right.Putamen")
all_apriori <- c(lh_apriori,rh_apriori,sub_apriori)
df <- all_rois %>% filter(loop_de_avg_degree != "NA")
cor_results <-
data.frame(matrix(nrow = 0, ncol = 7)) %>%   `colnames<-`(c("roi", "estimate", "p.value", "statistic", "n", "gp", "Method"))
pcorlist <- list()
for (ROI in all_apriori) {
print(ROI)
if(!is.na(sum(df[[ROI]])) == FALSE){
pcorlist[[ROI]] <- NA
}else{
pcorlist[[ROI]] <-
pcor.test(x = df[["loop_de_avg_degree"]], y = df[[ROI]], z = df[, c("age_scan_years","sex","EstimatedTotalIntraCranialVol")])
temp <- cbind(ROI, pcorlist[[ROI]])
cor_results <- rbind(cor_results, temp)
}
}
cor_results$adj.pval <- p.adjust(cor_results$p.value, method = "bonferroni", n = length(cor_results$p.value))
cor_results <- arrange(cor_results,p.value)
df <- all_rois %>% filter(loop_ae_avg_degree != "NA")
cor_results <-
data.frame(matrix(nrow = 0, ncol = 7)) %>%   `colnames<-`(c("roi", "estimate", "p.value", "statistic", "n", "gp", "Method"))
pcorlist <- list()
for (ROI in all_apriori) {
print(ROI)
if(!is.na(sum(df[[ROI]])) == FALSE){
pcorlist[[ROI]] <- NA
}else{
pcorlist[[ROI]] <-
pcor.test(x = df[["loop_ae_avg_degree"]], y = df[[ROI]], z = df[, c("age_scan_years","sex","EstimatedTotalIntraCranialVol")])
temp <- cbind(ROI, pcorlist[[ROI]])
cor_results <- rbind(cor_results, temp)
}
}
cor_results$adj.pval <- p.adjust(cor_results$p.value, method = "bonferroni", n = length(cor_results$p.value))
cor_results <- arrange(cor_results,p.value)
View(cor_results)
df <- all_rois %>% filter(loop_ae_avg_degree != "NA") %>% filter(sex==0)
cor_results <-
data.frame(matrix(nrow = 0, ncol = 7)) %>%   `colnames<-`(c("roi", "estimate", "p.value", "statistic", "n", "gp", "Method"))
pcorlist <- list()
for (ROI in all_apriori) {
print(ROI)
if(!is.na(sum(df[[ROI]])) == FALSE){
pcorlist[[ROI]] <- NA
}else{
pcorlist[[ROI]] <-
pcor.test(x = df[["loop_ae_avg_degree"]], y = df[[ROI]], z = df[, c("age_scan_years","EstimatedTotalIntraCranialVol")])
temp <- cbind(ROI, pcorlist[[ROI]])
cor_results <- rbind(cor_results, temp)
}
}
cor_results$adj.pval <- p.adjust(cor_results$p.value, method = "bonferroni", n = length(cor_results$p.value))
cor_results <- arrange(cor_results,p.value)
View(cor_results)
df <- all_rois %>% filter(loop_ae_avg_degree != "NA") %>% filter(sex==0)
cor_results <-
data.frame(matrix(nrow = 0, ncol = 7)) %>%   `colnames<-`(c("roi", "estimate", "p.value", "statistic", "n", "gp", "Method"))
pcorlist <- list()
for (ROI in all_apriori) {
print(ROI)
if(!is.na(sum(df[[ROI]])) == FALSE){
pcorlist[[ROI]] <- NA
}else{
pcorlist[[ROI]] <-
pcor.test(x = df[["loop_ae_avg_degree"]], y = df[[ROI]], z = df[, c("age_scan_years","EstimatedTotalIntraCranialVol")])
temp <- cbind(ROI, pcorlist[[ROI]])
cor_results <- rbind(cor_results, temp)
}
}
cor_results$adj.pval <- p.adjust(cor_results$p.value, method = "bonferroni", n = length(cor_results$p.value))
cor_results <- arrange(cor_results,p.value)
View(cor_results)
df <- all_rois %>% filter(loop_ae_avg_degree != "NA") %>% filter(sex==0)
cor_results <-
data.frame(matrix(nrow = 0, ncol = 7)) %>%   `colnames<-`(c("roi", "estimate", "p.value", "statistic", "n", "gp", "Method"))
pcorlist <- list()
for (ROI in all_apriori) {
print(ROI)
if(!is.na(sum(df[[ROI]])) == FALSE){
pcorlist[[ROI]] <- NA
}else{
pcorlist[[ROI]] <-
pcor.test(x = df[["loop_ae_avg_degree"]], y = df[[ROI]], z = df[, c("age_scan_years","EstimatedTotalIntraCranialVol")])
temp <- cbind(ROI, pcorlist[[ROI]])
cor_results <- rbind(cor_results, temp)
}
}
cor_results$adj.pval <- p.adjust(cor_results$p.value, method = "bonferroni", n = length(cor_results$p.value))
cor_results <- arrange(cor_results,p.value)
df <- all_rois %>% filter(loop_ae_avg_degree != "NA") %>% filter(sex==1)
cor_results <-
data.frame(matrix(nrow = 0, ncol = 7)) %>%   `colnames<-`(c("roi", "estimate", "p.value", "statistic", "n", "gp", "Method"))
pcorlist <- list()
for (ROI in all_apriori) {
print(ROI)
if(!is.na(sum(df[[ROI]])) == FALSE){
pcorlist[[ROI]] <- NA
}else{
pcorlist[[ROI]] <-
pcor.test(x = df[["loop_ae_avg_degree"]], y = df[[ROI]], z = df[, c("age_scan_years","EstimatedTotalIntraCranialVol")])
temp <- cbind(ROI, pcorlist[[ROI]])
cor_results <- rbind(cor_results, temp)
}
}
cor_results$adj.pval <- p.adjust(cor_results$p.value, method = "bonferroni", n = length(cor_results$p.value))
cor_results <- arrange(cor_results,p.value)
View(cor_results)
ggplot(data = df, aes(x =lh_superiorparietal, y = loop_ae_avg_degree, color=factor(sex))) +
geom_point()+
stat_smooth(method="lm",se=FALSE)+
scale_color_manual(values = c("#E45A5A", "#80792B"),name="Sex") +
labs(
x = "Fornix L",
y = "Maze Accuracy") +
theme(legend.position = "right",
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_text(size = 25),
axis.text.y = element_text(size = 25),
panel.background =element_blank(),
axis.line = element_line(colour = "black"),
legend.key.size = unit(2, 'cm'),
legend.title = element_text(size=18), #change legend title font size
legend.text = element_text(size=18),
plot.margin = margin(3, 2, 3, 2, "cm")) +
xlim(0.5,2)     +
#scale_x_continuous(n.breaks = 3) +
annotate("text", label = "FDR= 0.061328 ", x = 1.75 , y = 1, color="#E45A5A", size=8) +
annotate("text", label = "FDR= 0.012068", x = 1.75 , y = 0.9, color="#80792B", size=8)
ggplot(data = df, aes(x =lh_superiorparietal, y = loop_ae_avg_degree, color=factor(sex))) +
geom_point()+
stat_smooth(method="lm",se=FALSE)+
scale_color_manual(values = c("#E45A5A", "#80792B"),name="Sex") +
labs(
x = "lh_superiorparietal ",
y = "loop_ae_avg_degree") +
theme(legend.position = "right",
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_text(size = 25),
axis.text.y = element_text(size = 25),
panel.background =element_blank(),
axis.line = element_line(colour = "black"),
legend.key.size = unit(2, 'cm'),
legend.title = element_text(size=18), #change legend title font size
legend.text = element_text(size=18),
plot.margin = margin(3, 2, 3, 2, "cm"))
ggplot(data = df, aes(x =lh_superiorparietal, y = loop_ae_avg_degree, color=factor(sex))) +
geom_point()+
stat_smooth(method="lm",se=FALSE)+
scale_color_manual(values = c("#E45A5A", "#80792B"),name="Sex") +
labs(
x = "lh_superiorparietal ",
y = "loop_ae_avg_degree") +
theme(legend.position = "right",
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_text(size = 25),
axis.text.y = element_text(size = 25),
panel.background =element_blank(),
axis.line = element_line(colour = "black"),
legend.key.size = unit(2, 'cm'),
legend.title = element_text(size=18), #change legend title font size
legend.text = element_text(size=18)))
ggplot(data = df, aes(x =lh_superiorparietal, y = loop_ae_avg_degree, color=factor(sex))) +
geom_point()+
stat_smooth(method="lm",se=FALSE)+
scale_color_manual(values = c("#E45A5A", "#80792B"),name="Sex") +
labs(
x = "lh_superiorparietal ",
y = "loop_ae_avg_degree") +
theme(legend.position = "right",
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_text(size = 25),
axis.text.y = element_text(size = 25),
panel.background =element_blank(),
axis.line = element_line(colour = "black"),
legend.key.size = unit(2, 'cm'),
legend.title = element_text(size=18), #change legend title font size
legend.text = element_text(size=18))
df <- all_rois %>% filter(loop_ae_avg_degree != "NA")
cor_results <-
data.frame(matrix(nrow = 0, ncol = 7)) %>%   `colnames<-`(c("roi", "estimate", "p.value", "statistic", "n", "gp", "Method"))
pcorlist <- list()
for (ROI in all_apriori) {
print(ROI)
if(!is.na(sum(df[[ROI]])) == FALSE){
pcorlist[[ROI]] <- NA
}else{
pcorlist[[ROI]] <-
pcor.test(x = df[["loop_ae_avg_degree"]], y = df[[ROI]], z = df[, c("age_scan_years","sex","EstimatedTotalIntraCranialVol")])
temp <- cbind(ROI, pcorlist[[ROI]])
cor_results <- rbind(cor_results, temp)
}
}
cor_results$adj.pval <- p.adjust(cor_results$p.value, method = "bonferroni", n = length(cor_results$p.value))
cor_results <- arrange(cor_results,p.value)
ggplot(data = df, aes(x =lh_superiorparietal, y = loop_ae_avg_degree, color=factor(sex))) +
geom_point()+
stat_smooth(method="lm",se=FALSE)+
scale_color_manual(values = c("#E45A5A", "#80792B"),name="Sex") +
labs(
x = "lh_superiorparietal ",
y = "loop_ae_avg_degree") +
theme(legend.position = "right",
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_text(size = 25),
axis.text.y = element_text(size = 25),
panel.background =element_blank(),
axis.line = element_line(colour = "black"),
legend.key.size = unit(2, 'cm'),
legend.title = element_text(size=18), #change legend title font size
legend.text = element_text(size=18))
ggplot(data = df, aes(x =lh_superiorparietal, y = loop_ae_avg_degree, color=factor(sex))) +
geom_point()+
stat_smooth(method="lm",se=FALSE)+
stat_cor() +
scale_color_manual(values = c("#E45A5A", "#80792B"),name="Sex") +
labs(
x = "lh_superiorparietal ",
y = "loop_ae_avg_degree") +
theme(legend.position = "right",
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_text(size = 25),
axis.text.y = element_text(size = 25),
panel.background =element_blank(),
axis.line = element_line(colour = "black"),
legend.key.size = unit(2, 'cm'),
legend.title = element_text(size=18), #change legend title font size
legend.text = element_text(size=18))
ggplot(data = df, aes(x =lh_superiorparietal, y = loop_ae_avg_degree) +
geom_point()+
stat_smooth(method="lm",se=FALSE)+
stat_cor() +
scale_color_manual(values = c("#E45A5A", "#80792B"),name="Sex") +
labs(
x = "lh_superiorparietal ",
y = "loop_ae_avg_degree") +
theme(legend.position = "right",
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_text(size = 25),
axis.text.y = element_text(size = 25),
panel.background =element_blank(),
axis.line = element_line(colour = "black"),
legend.key.size = unit(2, 'cm'),
legend.title = element_text(size=18), #change legend title font size
legend.text = element_text(size=18))
ggplot(data = df, aes(x =lh_superiorparietal, y = loop_ae_avg_degree)) +
geom_point()+
stat_smooth(method="lm",se=FALSE)+
stat_cor() +
scale_color_manual(values = c("#E45A5A", "#80792B"),name="Sex") +
labs(
x = "lh_superiorparietal ",
y = "loop_ae_avg_degree") +
theme(legend.position = "right",
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_text(size = 25),
axis.text.y = element_text(size = 25),
panel.background =element_blank(),
axis.line = element_line(colour = "black"),
legend.key.size = unit(2, 'cm'),
legend.title = element_text(size=18), #change legend title font size
legend.text = element_text(size=18))
ggplot(data = df, aes(x =lh_superiorparietal, y = loop_ae_avg_degree)) +
geom_point()+
stat_smooth(method="lm",se=FALSE)+
stat_cor() +
scale_color_manual(values = c("#E45A5A", "#80792B"),name="Sex") +
labs(
x = "rh_superiorparietal",
y = "loop_ae_avg_degree") +
theme(legend.position = "right",
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_text(size = 25),
axis.text.y = element_text(size = 25),
panel.background =element_blank(),
axis.line = element_line(colour = "black"),
legend.key.size = unit(2, 'cm'),
legend.title = element_text(size=18), #change legend title font size
legend.text = element_text(size=18))
ggplot(data = df, aes(x =lh_superiorparietal, y = loop_ae_avg_degree)) +
geom_point()+
stat_smooth(method="lm",se=FALSE)+
stat_cor() +
scale_color_manual(values = c("#E45A5A", "#80792B"),name="Sex") +
labs(
x = "Left.Putamen",
y = "loop_ae_avg_degree") +
theme(legend.position = "right",
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_text(size = 25),
axis.text.y = element_text(size = 25),
panel.background =element_blank(),
axis.line = element_line(colour = "black"),
legend.key.size = unit(2, 'cm'),
legend.title = element_text(size=18), #change legend title font size
legend.text = element_text(size=18))
ggplot(data = df, aes(x =Left.Putamen, y = loop_ae_avg_degree)) +
geom_point()+
stat_smooth(method="lm",se=FALSE)+
stat_cor() +
scale_color_manual(values = c("#E45A5A", "#80792B"),name="Sex") +
labs(
x = "Left.Putamen",
y = "loop_ae_avg_degree") +
theme(legend.position = "right",
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_text(size = 25),
axis.text.y = element_text(size = 25),
panel.background =element_blank(),
axis.line = element_line(colour = "black"),
legend.key.size = unit(2, 'cm'),
legend.title = element_text(size=18), #change legend title font size
legend.text = element_text(size=18))
ggplot(data = df, aes(x =rh_superiorparietal, y = loop_ae_avg_degree)) +
geom_point()+
stat_smooth(method="lm",se=FALSE)+
stat_cor() +
scale_color_manual(values = c("#E45A5A", "#80792B"),name="Sex") +
labs(
x = "Left.Putamen",
y = "loop_ae_avg_degree") +
theme(legend.position = "right",
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_text(size = 25),
axis.text.y = element_text(size = 25),
panel.background =element_blank(),
axis.line = element_line(colour = "black"),
legend.key.size = unit(2, 'cm'),
legend.title = element_text(size=18), #change legend title font size
legend.text = element_text(size=18))
ggplot(data = df, aes(x =lh_superiorparietal, y = loop_ae_avg_degree)) +
geom_point()+
stat_smooth(method="lm",se=FALSE)+
stat_cor() +
scale_color_manual(values = c("#E45A5A", "#80792B"),name="Sex") +
labs(
x = "Left.Putamen",
y = "loop_ae_avg_degree") +
theme(legend.position = "right",
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_text(size = 25),
axis.text.y = element_text(size = 25),
panel.background =element_blank(),
axis.line = element_line(colour = "black"),
legend.key.size = unit(2, 'cm'),
legend.title = element_text(size=18), #change legend title font size
legend.text = element_text(size=18))
colnames(left_ct)
colnames(sub_cort)
colnames(left_ct)
colnames(sub_cort)
df <- all_rois %>% filter(loop_de_avg_degree != "NA") %>% filter(sex==1)
cor_results <-
data.frame(matrix(nrow = 0, ncol = 7)) %>%   `colnames<-`(c("roi", "estimate", "p.value", "statistic", "n", "gp", "Method"))
pcorlist <- list()
for (ROI in all_apriori) {
print(ROI)
if(!is.na(sum(df[[ROI]])) == FALSE){
pcorlist[[ROI]] <- NA
}else{
pcorlist[[ROI]] <-
pcor.test(x = df[["loop_de_avg_degree"]], y = df[[ROI]], z = df[, c("age_scan_years","EstimatedTotalIntraCranialVol")])
temp <- cbind(ROI, pcorlist[[ROI]])
cor_results <- rbind(cor_results, temp)
}
}
cor_results$adj.pval <- p.adjust(cor_results$p.value, method = "bonferroni", n = length(cor_results$p.value))
cor_results <- arrange(cor_results,p.value)
ggplot(data = df, aes(x =rh.cuneus, y = loop_ae_avg_degree)) +
geom_point()+
stat_smooth(method="lm",se=FALSE)+
stat_cor()  +
labs(
x = "Left.Putamen",
y = "loop_ae_avg_degree") +
theme(legend.position = "right",
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_text(size = 25),
axis.text.y = element_text(size = 25),
panel.background =element_blank(),
axis.line = element_line(colour = "black"),
legend.key.size = unit(2, 'cm'),
legend.title = element_text(size=18), #change legend title font size
legend.text = element_text(size=18))
# precentral, postcentral, superoir parietal, superior frontal, caudate and putamen
lh_apriori <- c("lh_postcentral","lh_precentral","lh_superiorparietal","lh_superiorfrontal", "lh_cuneus","lh_medialorbitofrontal","lh_entorhinal","lh_parahippocampal","lh_precuneus","lh_lateraloccipital","lh_posteriorcingulate")
rh_apriori <- c("rh_postcentral","rh_precentral","rh_superiorparietal","rh_superiorfrontal", "rh_cuneus","rh_medialorbitofrontal","rh_entorhinal","rh_parahippocampal","rh_precuneus","rh_lateraloccipital","rh_posteriorcingulate")
sub_apriori <- c("Left.Caudate","Right.Caudate","Left.Putamen","Right.Putamen","Left.Hippocampus","Right.Hippocampus")
all_apriori <- c(lh_apriori,rh_apriori,sub_apriori)
df <- all_rois %>% filter(loop_de_avg_degree != "NA") %>% filter(sex==1)
cor_results <-
data.frame(matrix(nrow = 0, ncol = 7)) %>%   `colnames<-`(c("roi", "estimate", "p.value", "statistic", "n", "gp", "Method"))
pcorlist <- list()
for (ROI in all_apriori) {
print(ROI)
if(!is.na(sum(df[[ROI]])) == FALSE){
pcorlist[[ROI]] <- NA
}else{
pcorlist[[ROI]] <-
pcor.test(x = df[["loop_de_avg_degree"]], y = df[[ROI]], z = df[, c("age_scan_years","EstimatedTotalIntraCranialVol")])
temp <- cbind(ROI, pcorlist[[ROI]])
cor_results <- rbind(cor_results, temp)
}
}
cor_results$adj.pval <- p.adjust(cor_results$p.value, method = "bonferroni", n = length(cor_results$p.value))
cor_results <- arrange(cor_results,p.value)
ggplot(data = df, aes(x =rh.cuneus, y = loop_ae_avg_degree)) +
geom_point()+
stat_smooth(method="lm",se=FALSE)+
stat_cor()  +
labs(
x = "Left.Putamen",
y = "loop_ae_avg_degree") +
theme(legend.position = "right",
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_text(size = 25),
axis.text.y = element_text(size = 25),
panel.background =element_blank(),
axis.line = element_line(colour = "black"),
legend.key.size = unit(2, 'cm'),
legend.title = element_text(size=18), #change legend title font size
legend.text = element_text(size=18))
ggplot(data = df, aes(x =rh_cuneus, y = loop_ae_avg_degree)) +
geom_point()+
stat_smooth(method="lm",se=FALSE)+
stat_cor()  +
labs(
x = "Left.Putamen",
y = "loop_ae_avg_degree") +
theme(legend.position = "right",
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_text(size = 25),
axis.text.y = element_text(size = 25),
panel.background =element_blank(),
axis.line = element_line(colour = "black"),
legend.key.size = unit(2, 'cm'),
legend.title = element_text(size=18), #change legend title font size
legend.text = element_text(size=18))
