turns_distr <- ggarrange(ym,yf,mm,mf,
labels = c("Young Male", "Young Female", "Midlife Male","Midlife Female"),
font.label = list(size = 12, color = "red"),
vjust = 3,
ncol=2, nrow = 2)
annotate_figure(turns_distr,
top = text_grob("Total turns data distribution", color = "red", face = "bold", size = 14))
#does the plot have a common legend)
# analysis
turns_aov<- aov(formula=turns ~ sex*age ,Turns)
summary(turns_aov)
# Young
yng_female_analysis$pauses <- yng_master_participant %>% filter(sex == "Female") %>% pull(em_average_RT)
yng_male_analysis$pauses <- yng_master_participant %>% filter(sex == "Male") %>% pull(em_average_RT)
Pauses <- rbind(yng_female_analysis,yng_male_analysis)
#Midlife
mid_male_analysis$pauses <- mid_master_participant%>% filter(sex == "Male") %>% pull(em_average_RT)
Pauses <- rbind(Pauses,mid_male_analysis)
mid_female_analysis$pauses <- mid_master_participant%>% filter(sex == "Female") %>% pull(em_average_RT)
Pauses <- rbind(Pauses,mid_female_analysis) %>% select(Subject,sex,age,group,pauses)
#Normality test and Distribution of data
shapiro.test(yng_female_analysis$pauses)
shapiro.test(yng_male_analysis$pauses)
shapiro.test(mid_female_analysis$pauses)
shapiro.test(mid_male_analysis$pauses)
ym <- ggplot(yng_male_analysis, aes(x=pauses)) +
geom_histogram(bins=10)
yf <- ggplot(yng_female_analysis, aes(x=pauses)) +
geom_histogram(bins=10)
mm <- ggplot(mid_male_analysis,aes(x=pauses))+
geom_histogram(bins=10)
mf <- ggplot(mid_female_analysis, aes(x=pauses))+
geom_histogram(bins=10)
pauses_distr <- ggarrange(ym,yf,mm,mf,
labels = c("Young Male", "Young Female", "Midlife Male","Midlife Female"),
font.label = list(size = 12, color = "red"),
vjust = 3,
ncol=2, nrow = 2)
annotate_figure(pauses_distr,
top = text_grob("Total turns data distribution", color = "red", face = "bold", size = 14))
pauses_aov<- aov(formula=pauses ~ sex*age ,Pauses)
summary(pauses_aov)
# Post Hoc
pairwise.t.test(Pauses$pauses, dist$group, p.adj="bonferroni")
TukeyHSD(pauses_aov)
## Young Males#####
yngM_spreadObjs <-
yng_male_obj_visits %>% gather("location", "count", 4:12) %>%
pivot_wider(
id_cols = c("subject", "sex", "age"),
names_from = location,
values_from = count,
values_fn = sum
)
yngM_spreadObjs <-
yngM_spreadObjs %>% mutate(std = apply(yngM_spreadObjs[4:12], 1, sd))
yngM_flip_objs <-
yngM_spreadObjs %>% gather("location", "count", 4:12) %>% pivot_wider(
id_cols = location,
names_from = subject,
values_from = count,
values_fn = sum
)
yngM_totalvisits <-
as.data.frame(apply(yngM_spreadObjs[4:12], 2, sum)) %>% mutate(sd = apply(yngM_spreadObjs[4:12], 2, sd)) %>% mutate(location = yngM_flip_objs$location)
yng_male_analysis$evenness <- yngM_spreadObjs$std
### Young Females#####
yngF_spreadObjs <-
yng_female_obj_visits %>% gather("location", "count", 4:12) %>%
pivot_wider(
id_cols = c("subject", "sex", "age"),
names_from = location,
values_from = count,
values_fn = sum
)
yngF_spreadObjs <-
yngF_spreadObjs %>% mutate(std = apply(yngF_spreadObjs[4:12], 1, sd))
yngF_flip_objs <-
yngF_spreadObjs %>% gather("location", "count", 4:12) %>% pivot_wider(
id_cols = location,
names_from = subject,
values_from = count,
values_fn = sum
)
# will have to rename and re do this part below 10/12/2022
yngF_totalvisits <-
as.data.frame(apply(yngF_spreadObjs[4:12], 2, sum)) %>% mutate(sd = apply(yngF_spreadObjs[4:12], 2, sd)) %>% mutate(location = yngF_flip_objs$location)
yng_female_analysis$evenness <- yngF_spreadObjs$std
#Binding the yng male and female evenness spread into one data frame for cleaner analysis
Spread <- rbind(yng_male_analysis,yng_female_analysis)
### Midlife Males #####
midM_spreadObjs <-
mid_male_obj_visits %>% gather("location", "count", 4:12) %>%
pivot_wider(
id_cols = c("subject", "sex", "age"),
names_from = location,
values_from = count,
values_fn = sum
)
midM_spreadObjs <-
midM_spreadObjs %>% mutate(std = apply(midM_spreadObjs[4:12], 1, sd))
midM_flip_objs <-
midM_spreadObjs %>% gather("location", "count", 4:12) %>% pivot_wider(
id_cols = location,
names_from = subject,
values_from = count,
values_fn = sum
)
midM_totalvisits <-
as.data.frame(apply(midM_spreadObjs[4:12], 2, sum)) %>% mutate(sd = apply(midM_spreadObjs[4:12], 2, sd)) %>% mutate(location = midM_flip_objs$location)
mid_male_analysis$evenness <- midM_spreadObjs$std
Spread <- rbind(Spread,mid_male_analysis)
#### Female Females #####
midF_spreadObjs <-
mid_female_obj_visits %>% gather("location", "count", 4:12) %>%
pivot_wider(
id_cols = c("subject", "sex", "age"),
names_from = location,
values_from = count,
values_fn = sum
)
midF_spreadObjs <-
midF_spreadObjs %>% mutate(std = apply(midF_spreadObjs[4:12], 1, sd))
midF_flip_objs <-
midF_spreadObjs %>% gather("location", "count", 4:12) %>% pivot_wider(
id_cols = location,
names_from = subject,
values_from = count,
values_fn = sum
)
# will have to rename and re do this part below 10/12/2022
midF_totalvisits <-
as.data.frame(apply(midF_spreadObjs[4:12], 2, sum)) %>% mutate(sd = apply(midF_spreadObjs[4:12], 2, sd)) %>% mutate(location = midF_flip_objs$location)
mid_female_analysis$evenness <- midF_spreadObjs$std
#Binding the mid male and female evenness spread into one data frame for cleaner analysis
Spread <- rbind(Spread,mid_female_analysis) %>% select(Subject,sex,age,group,evenness)
#### Data Distribution and normality check ####
shapiro.test(yng_female_analysis$evenness)
shapiro.test(yng_male_analysis$evenness)
shapiro.test(mid_female_analysis$evenness)
shapiro.test(mid_male_analysis$evenness)
ym <- ggplot(yng_male_analysis, aes(x=evenness)) +
geom_histogram(bins=10)
yf <- ggplot(yng_female_analysis, aes(x=evenness)) +
geom_histogram(bins=10)
mm <- ggplot(mid_male_analysis,aes(x=evenness))+
geom_histogram(bins=10)
mf <- ggplot(mid_female_analysis, aes(x=evenness))+
geom_histogram(bins=10)
pauses_distr <- ggarrange(ym,yf,mm,mf,
labels = c("Young Male", "Young Female", "Midlife Male","Midlife Female"),
font.label = list(size = 12, color = "red"),
vjust = 3,
ncol=2, nrow = 2)
annotate_figure(pauses_distr,
top = text_grob("Total evenness data distribution", color = "red", face = "bold", size = 14))
### Analysis ####
evenness_aov<- aov(formula=evenness ~ sex*age ,Spread)
summary(evenness_aov)
TukeyHSD(evenness_aov)
yngM_spreadHalls <-
yng_male_hall_visits %>% gather("location", "count", 4:12) %>%
pivot_wider(
id_cols = c("subject", "sex", "age"),
names_from = location,
values_from = count,
values_fn = sum
)
View(yngM_spreadHalls)
yngM_spreadHalls <-
yng_male_hall_visits %>% gather("location", "count", 4:12) %>%
pivot_wider(
id_cols = c("subject", "sex", "age"),
names_from = location,
values_from = count,
values_fn = sum
)
yngM_spreadHalls <-
yngM_spreadHalls %>% mutate(std = apply(yngM_spreadHalls[4:12], 1, sd))
yngM_flip_halls <-
yngM_spreadHalls %>% gather("location", "count", 4:12) %>% pivot_wider(
id_cols = location,
names_from = subject,
values_from = count,
values_fn = sum
)
yngM_totalhallvis <-
as.data.frame(apply(yngM_spreadHalls[4:12], 2, sum)) %>% mutate(sd = apply(yngM_spreadHalls[4:12], 2, sd)) %>% mutate(location = yngM_totalhallvis$location)
yngM_spreadHalls <-
yng_male_hall_visits %>% gather("location", "count", 4:12) %>%
pivot_wider(
id_cols = c("subject", "sex", "age"),
names_from = location,
values_from = count,
values_fn = sum
)
yngM_spreadHalls <-
yngM_spreadHalls %>% mutate(std = apply(yngM_spreadHalls[4:12], 1, sd))
yngM_flip_halls <-
yngM_spreadHalls %>% gather("location", "count", 4:12) %>% pivot_wider(
id_cols = location,
names_from = subject,
values_from = count,
values_fn = sum
)
View(yngM_spreadHalls)
yngM_totalhallvis <-
as.data.frame(apply(yngM_spreadHalls[4:12], 2, sum)) %>% mutate(sd = apply(yngM_spreadHalls[4:12], 2, sd)) %>% mutate(location = yngM_totalhallvis$location)
yngM_spreadHalls <-
yng_male_hall_visits %>% gather("location", "count", 4:12) %>%
pivot_wider(
id_cols = c("subject", "sex", "age"),
names_from = location,
values_from = count,
values_fn = sum
)
yngM_spreadHalls <-
yngM_spreadHalls %>% mutate(std = apply(yngM_spreadHalls[4:12], 1, sd))
yngM_flip_halls <-
yngM_spreadHalls %>% gather("location", "count", 4:12) %>% pivot_wider(
id_cols = location,
names_from = subject,
values_from = count,
values_fn = sum
)
yngM_totalhallvis <-
as.data.frame(apply(yngM_spreadHalls[4:12], 2, sum)) %>% mutate(sd = apply(yngM_spreadHalls[4:12], 2, sd)) %>% mutate(location = yngM_flip_halls$location)
yng_male_analysis$HallEvenness <- yngM_spreadHalls$std
### Young Females#####
yngF_spreadHalls <-
yng_female_hall_visits %>% gather("location", "count", 4:12) %>%
pivot_wider(
id_cols = c("subject", "sex", "age"),
names_from = location,
values_from = count,
values_fn = sum
)
yngF_spreadHalls <-
yngF_spreadHalls %>% mutate(std = apply(yngF_spreadHalls[4:12], 1, sd))
yngF_flip_halls <-
yngF_spreadHalls %>% gather("location", "count", 4:12) %>% pivot_wider(
id_cols = location,
names_from = subject,
values_from = count,
values_fn = sum
)
# will have to rename and re do this part below 10/12/2022
yngF_totalhallvis <-
as.data.frame(apply(yngF_spreadHalls[4:12], 2, sum)) %>% mutate(sd = apply(yngF_spreadHalls[4:12], 2, sd)) %>% mutate(location = yngF_flip_halls$location)
yng_female_analysis$HallEvenness <- yngF_spreadHalls$std
#Binding the yng male and female evenness spread into one data frame for cleaner analysis
Hallspread <- rbind(yng_male_analysis,yng_female_analysis)
### Midlife Males #####
midM_spreadHalls <-
mid_male_hall_visits %>% gather("location", "count", 4:12) %>%
pivot_wider(
id_cols = c("subject", "sex", "age"),
names_from = location,
values_from = count,
values_fn = sum
)
midM_spreadHalls <-
midM_spreadHalls %>% mutate(std = apply(midM_spreadHalls[4:12], 1, sd))
midM_flip_halls <-
midM_spreadHalls %>% gather("location", "count", 4:12) %>% pivot_wider(
id_cols = location,
names_from = subject,
values_from = count,
values_fn = sum
)
midM_totalhallvis <-
as.data.frame(apply(midM_spreadHalls[4:12], 2, sum)) %>% mutate(sd = apply(midM_spreadHalls[4:12], 2, sd)) %>% mutate(location = midM_flip_halls$location)
mid_male_analysis$HallEvenness <- midM_flip_halls$std
Hallspread <- rbind(Hallspread,mid_male_analysis)
midM_spreadHalls <-
mid_male_hall_visits %>% gather("location", "count", 4:12) %>%
pivot_wider(
id_cols = c("subject", "sex", "age"),
names_from = location,
values_from = count,
values_fn = sum
)
midM_spreadHalls <-
midM_spreadHalls %>% mutate(std = apply(midM_spreadHalls[4:12], 1, sd))
midM_flip_halls <-
midM_spreadHalls %>% gather("location", "count", 4:12) %>% pivot_wider(
id_cols = location,
names_from = subject,
values_from = count,
values_fn = sum
)
midM_totalhallvis <-
as.data.frame(apply(midM_spreadHalls[4:12], 2, sum)) %>% mutate(sd = apply(midM_spreadHalls[4:12], 2, sd)) %>% mutate(location = midM_flip_halls$location)
mid_male_analysis$HallEvenness <- midM_spreadHalls$std
Hallspread <- rbind(Hallspread,mid_male_analysis)
#### Female Females #####
midF_spreadHalls <-
mid_female_hall_visits %>% gather("location", "count", 4:12) %>%
pivot_wider(
id_cols = c("subject", "sex", "age"),
names_from = location,
values_from = count,
values_fn = sum
)
midF_spreadHalls <-
midF_spreadHalls %>% mutate(std = apply(midF_spreadHalls[4:12], 1, sd))
midF_flip_halls <-
midF_spreadHalls %>% gather("location", "count", 4:12) %>% pivot_wider(
id_cols = location,
names_from = subject,
values_from = count,
values_fn = sum
)
midF_totalhallvis <-
as.data.frame(apply(midF_spreadHalls[4:12], 2, sum)) %>% mutate(sd = apply(midF_spreadHalls[4:12], 2, sd)) %>% mutate(location = midF_flip_halls$location)
mid_female_analysis$HallEvenness <- midF_flip_halls$std
#Binding the mid male and female evenness spread into one data frame for cleaner analysis
Hallspread <- rbind(Hallspread,mid_female_analysis) %>% select(Subject,sex,age,group,HallEvenness)
mid_female_analysis$HallEvenness <- midF_spreadHalls$std
#Binding the mid male and female evenness spread into one data frame for cleaner analysis
Hallspread <- rbind(Hallspread,mid_female_analysis) %>% select(Subject,sex,age,group,HallEvenness)
View(Hallspread)
shapiro.test(yng_female_analysis$HallEvenness)
shapiro.test(yng_male_analysis$HallEvenness)
shapiro.test(mid_female_analysis$HallEvenness)
shapiro.test(mid_male_analysis$HallEvenness)
ym <- ggplot(yng_male_analysis, aes(x=HallEvenness)) +
geom_histogram(bins=10)
yf <- ggplot(yng_female_analysis, aes(x=HallEvenness)) +
geom_histogram(bins=10)
mm <- ggplot(mid_male_analysis,aes(x=HallEvenness))+
geom_histogram(bins=10)
mf <- ggplot(mid_female_analysis, aes(x=HallEvenness))+
geom_histogram(bins=10)
pauses_distr <- ggarrange(ym,yf,mm,mf,
labels = c("Young Male", "Young Female", "Midlife Male","Midlife Female"),
font.label = list(size = 12, color = "red"),
vjust = 3,
ncol=2, nrow = 2)
annotate_figure(pauses_distr,
top = text_grob("Total Hall evenness data distribution", color = "red", face = "bold", size = 14))
### Analysis ####
evenness_aov<- aov(formula=evenness ~ sex*age ,Spread)
summary(evenness_aov)
TukeyHSD(evenness_aov)
View(yng_explor)
View(yng_explr_Subinfo)
View(yng_explor)
View(yng_expl_df)
View(yng_master_trial)
yng_master_trial <- inner_join(yngsubjInfo, yngtrialDF, by="Subject")
yng_master_trial <- as.factor("young")
yng_master_trial <- as.factor(yng_master_participant$sex)
yngM_button_press<- yng_explor %>% filter(Procedure == "ExploreProc"
)
View(yngM_button_press)
yng_explor <- yng_master_trial %>% filter(is.na(accuracy) == TRUE)
yng_explor <- yng_master_trial %>% filter(is.na(accuracy) == TRUE)
yng_master_trial <- inner_join(yngsubjInfo, yngtrialDF, by="Subject")
yng_master_trial$age <- as.factor("young")
yng_master_trial$sex <- as.factor(yng_master_participant$sex)
yng_master_participant <- inner_join(yngsubjInfo, yngparticipantDF, by="Subject")
yng_master_participant$age <-as.factor("young")
yng_master_participant$sex <-as.factor(yng_master_participant$sex)
yng_explor <- yng_master_trial %>% filter(is.na(accuracy) == TRUE)
yng_expl_df<- data.frame(matrix(nrow = nrow(yng_explor)))
for (i in 1:nrow(yng_explor)){
e_string_orient<-as.list(strsplit(yng_explor$e_paths[i],split=" "))
e_string<-as.list(strsplit(yng_explor$paths[i],split=" "))
F3_index<-which(sapply(e_string_orient[[1]], FUN=function(X) "F3" %in% X))+1
e_string[[1]][F3_index]<-"N" #replacing with N
V2_index<-which(sapply(e_string_orient[[1]], FUN=function(X) "V2" %in% X))+1
e_string[[1]][V2_index]<-"Y" #replacing with Y
e_string<-paste(e_string[[1]], collapse = " ")
yng_expl_df[i,1]<-e_string
}
yng_expl_df$Subject<-yng_explor$Subject
yng_expl_df <- yng_expl_df %>% rename(paths = matrix.nrow...nrow.yng_explor..)
yng_explr_Subinfo <- inner_join(yng_master_participant,yng_expl_df) %>% mutate(group = "young") %>% mutate(group=paste(sex,group))#same thing for young
yngM_button_press<- yng_explor %>% filter(Procedure == "ExploreProc")
View(yngM_button_press)
yngM_button_press<-yngM_button_press %>% transmute(Subject, nodesturns_count)
yngM_button_press<- yng_explor %>% filter(Procedure == "ExploreProc") #filtering just explore rows
yngM_button_press<-yngM_button_press %>% transmute(Subject,sex,age, nodesturns_count)
yngM_button_press_mean<-aggregate(yngM_button_press$nodesturns_count, list(young_button_press$Subject), FUN=mean)
yngM_button_press_mean<-aggregate(yngM_button_press$nodesturns_count, list(yngM_button_press$Subject), FUN=mean)
View(yngM_button_press_mean)
yng_male_analysis$ButtonPress<-yngM_button_press_mean$x
View(yng_male_analysis)
yngM_button_press<- yng_explor %>% filter(Procedure == "ExploreProc")  %>% filter(sex == "Male")
yngM_button_press<- yng_explor %>% filter(Procedure == "ExploreProc")  %>% filter(sex == "Male") #filtering just explore rows
yngM_button_press<-yngM_button_press %>% transmute(Subject,sex,age, nodesturns_count) #condensing df to just vars we care about
yngM_button_press_mean<-aggregate(yngM_button_press$nodesturns_count, list(yngM_button_press$Subject), FUN=mean) #calculating mean number of button presses
#across both exploration trials
yng_male_analysis$ButtonPress<-yngM_button_press_mean$x
View(yngM_button_press)
yngM_button_press<- yng_explor %>% filter(Procedure == "ExploreProc")  %>% filter(sex == "Male")
yngM_button_press<-yngM_button_press %>% transmute(Subject,sex,age, nodesturns_count)
yngM_button_press_mean<-aggregate(yngM_button_press$nodesturns_count, list(yngM_button_press$Subject), FUN=mean)
View(yngM_button_press_mean)
yngM_button_press<- yng_explor %>% filter(Procedure == "ExploreProc")  %>% filter(sex == "Male")
yng_master_trial <- inner_join(yngsubjInfo, yngtrialDF, by="Subject")
yng_master_trial$age <- as.factor("young")
yng_master_trial$sex <- as.factor(yng_master_trial$sex)
yng_master_participant <- inner_join(yngsubjInfo, yngparticipantDF, by="Subject")
yng_master_participant$age <-as.factor("young")
yng_master_participant$sex <-as.factor(yng_master_participant$sex)
yng_explor <- yng_master_trial %>% filter(is.na(accuracy) == TRUE)
yng_expl_df<- data.frame(matrix(nrow = nrow(yng_explor)))
for (i in 1:nrow(yng_explor)){
e_string_orient<-as.list(strsplit(yng_explor$e_paths[i],split=" "))
e_string<-as.list(strsplit(yng_explor$paths[i],split=" "))
F3_index<-which(sapply(e_string_orient[[1]], FUN=function(X) "F3" %in% X))+1
e_string[[1]][F3_index]<-"N" #replacing with N
V2_index<-which(sapply(e_string_orient[[1]], FUN=function(X) "V2" %in% X))+1
e_string[[1]][V2_index]<-"Y" #replacing with Y
e_string<-paste(e_string[[1]], collapse = " ")
yng_expl_df[i,1]<-e_string
}
yng_expl_df$Subject<-yng_explor$Subject
yng_expl_df <- yng_expl_df %>% rename(paths = matrix.nrow...nrow.yng_explor..)
yng_explr_Subinfo <- inner_join(yng_master_participant,yng_expl_df) %>% mutate(group = "young") %>% mutate(group=paste(sex,group))#same thing for young
yngM_button_press<- yng_explor %>% filter(Procedure == "ExploreProc")  %>% filter(sex == "Male")
yngM_button_press<- yng_explor %>% filter(Procedure == "ExploreProc")  %>% filter(sex == "Male") #filtering just explore rows
yngM_button_press<-yngM_button_press %>% transmute(Subject,sex,age, nodesturns_count) #condensing df to just vars we care about
yngM_button_press_mean<-aggregate(yngM_button_press$nodesturns_count, list(yngM_button_press$Subject), FUN=mean) #calculating mean number of button presses
#across both exploration trials
yng_male_analysis$ButtonPress<-yngM_button_press_mean$x
View(yng_male_analysis)
yngF_button_press<- yng_explor %>% filter(Procedure == "ExploreProc")  %>% filter(sex == "Female")
yngF_button_press<-yngF_button_press %>% transmute(Subject,sex,age, nodesturns_count)
yngF_button_press_mean<-aggregate(yngF_button_press$nodesturns_count, list(yngF_button_press$Subject), FUN=mean) #calculating mean number of button presses
yng_female_analysis$ButtonPress<-yngF_button_press_mean$x
View(yng_female_analysis)
mid_master_trial <- inner_join(subjInfo, trialDF, by="Subject")
mid_master_trial$age <- as.factor("midlife")
mid_master_trial$sex <- as.factor(mid_master_participant$sex)
mid_explor <- mid_master_trial %>% filter(is.na(accuracy) == TRUE)
#creating empty dataframe to store contents of for loop into
# midlife
mid_expl_df<- data.frame(matrix(nrow = nrow(mid_explor)))
for (i in 1:nrow(mid_explor)){
e_string_orient<-as.list(strsplit(mid_explor$e_paths[i],split=" "))
e_string<-as.list(strsplit(mid_explor$paths[i],split=" "))
F3_index<-which(sapply(e_string_orient[[1]], FUN=function(X) "F3" %in% X))+1
e_string[[1]][F3_index]<-"N" #replacing with N
V2_index<-which(sapply(e_string_orient[[1]], FUN=function(X) "V2" %in% X))+1
e_string[[1]][V2_index]<-"Y" #replacing with Y
e_string<-paste(e_string[[1]], collapse = " ")
mid_expl_df[i,1]<-e_string
}
mid_expl_df$Subject<-mid_explor$Subject
mid_expl_df <- mid_expl_df %>% rename(paths = matrix.nrow...nrow.mid_explor..)
mid_explr_Subinfo <- inner_join(mid_master_participant,mid_expl_df) %>% mutate(group = "midlife") %>% mutate(group=paste(sex,group))
midM_button_press<- mid_explor %>% filter(Procedure == "ExploreProc")  %>% filter(sex == "Male")
View(midM_button_press)
midM_button_press<- mid_explor %>% filter(Procedure == "ExploreProc")  %>% filter(sex == "Male")
midM_button_press<-midM_button_press %>% transmute(Subject,sex,age, nodesturns_count)
midM_button_press_mean<-aggregate(midM_button_press$nodesturns_count, list(midM_button_press$Subject), FUN=mean) #calculating mean number of button presses
mid_male_analysis$ButtonPress<-midM_button_press_mean$x
midM_button_press_mean<-aggregate(midM_button_press$nodesturns_count, list(midM_button_press$Subject), FUN=mean)
View(midM_button_press_mean)
View(mid_male_analysis)
midM_button_press<- mid_explor %>% filter(Procedure == "ExploreProc")  %>% filter(sex == "Ma
View(mid_explor)
midM_button_press<- mid_explor %>% filter(Procedure == "ExploreProc")  %>% filter(sex == "Male")
midM_button_press<-midM_button_press %>% transmute(Subject,sex,age, nodesturns_count)
midM_button_press_mean<-aggregate(midM_button_press$nodesturns_count, list(midM_button_press$Subject), FUN=mean)
midM_button_press<-midM_button_press %>% transmute(Subject,sex,age, nodesturns_count)
View(midM_button_press)
aggregate(midM_button_press$nodesturns_count, list(midM_button_press$Subject), FUN=mean)
midM_button_press$nodesturns_count
midM_button_press$Subject)
list(midM_button_press$Subject)
aggregate(midM_button_press$nodesturns_count, list(midM_button_press$Subject), FUN=mean)
midM_button_press_mean<-aggregate(midM_button_press$nodesturns_count, list(midM_button_press$Subject), FUN=mean)
midM_button_press<- mid_explor %>% filter(Procedure == "ExploreProc")  %>% filter(sex == "Male")
mid_explor <- mid_master_trial %>% filter(is.na(accuracy) == TRUE)
#creating empty dataframe to store contents of for loop into
# midlife
mid_expl_df<- data.frame(matrix(nrow = nrow(mid_explor)))
for (i in 1:nrow(mid_explor)){
e_string_orient<-as.list(strsplit(mid_explor$e_paths[i],split=" "))
e_string<-as.list(strsplit(mid_explor$paths[i],split=" "))
F3_index<-which(sapply(e_string_orient[[1]], FUN=function(X) "F3" %in% X))+1
e_string[[1]][F3_index]<-"N" #replacing with N
V2_index<-which(sapply(e_string_orient[[1]], FUN=function(X) "V2" %in% X))+1
e_string[[1]][V2_index]<-"Y" #replacing with Y
e_string<-paste(e_string[[1]], collapse = " ")
mid_expl_df[i,1]<-e_string
}
mid_expl_df$Subject<-mid_explor$Subject
mid_expl_df <- mid_expl_df %>% rename(paths = matrix.nrow...nrow.mid_explor..)
mid_explr_Subinfo <- inner_join(mid_master_participant,mid_expl_df) %>% mutate(group = "midlife") %>% mutate(group=paste(sex,group))
midM_button_press<- mid_explor %>% filter(Procedure == "ExploreProc")  %>% filter(sex == "Male")
midM_button_press<-midM_button_press %>% transmute(Subject,sex,age,nodesturns_count)
midM_button_press_mean<-aggregate(midM_button_press$nodesturns_count, list(midM_button_press$Subject), FUN=mean)
View(midM_button_press)
View(mid_master_trial)
mid_master_trial <- inner_join(subjInfo, trialDF, by="Subject")
mid_master_trial$age <- as.factor("midlife")
mid_master_trial$sex <- as.factor(mid_master_trial$sex)
mid_explor <- mid_master_trial %>% filter(is.na(accuracy) == TRUE)
midM_button_press<- mid_explor %>% filter(Procedure == "ExploreProc")  %>% filter(sex == "Male")
midM_button_press<-midM_button_press %>% transmute(Subject,sex,age,nodesturns_count)
midM_button_press_mean<-aggregate(midM_button_press$nodesturns_count, list(midM_button_press$Subject), FUN=mean) #calculating
mid_male_analysis$ButtonPress<-midM_button_press_mean$x
### Midlife Females ####
midF_button_press<- mid_explor %>% filter(Procedure == "ExploreProc")  %>% filter(sex == "Female")
midF_button_press<-midF_button_press %>% transmute(Subject,sex,age, nodesturns_count)
midF_button_press_mean<-aggregate(midF_button_press$nodesturns_count, list(midF_button_press$Subject), FUN=mean) #calculating mean number of button presses
mid_female_analysis$ButtonPress<-midF_button_press_mean$x
