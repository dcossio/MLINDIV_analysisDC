scale_colour_brewer() +
theme(legend.position="none", plot.title = element_text(size=11)) +
ggtitle("Path distance traveled in men vs women") +
xlab("") +
ylab(" Path Distance Traveled")
dev.off()
jpeg("Path distance traveled in midlife men vs women.jpeg", res=100, width = 1000, height = 900)
distancedf %>%
left_join(sam_size) %>%
mutate(myaxis=paste0(sex,"\n", "n=", num)) %>%
ggplot( aes(x=myaxis, y=em_path_dist_trav, fill=sex)) +
geom_violin() +
geom_boxplot(width=0.1, color="grey", alpha=0.2) +
geom_jitter(position = position_jitter(seed = 1, width = 0.2)) +
scale_colour_brewer() +
theme(legend.position="none", plot.title = element_text(size=11)) +
ggtitle("Path distance traveled in men vs women") +
xlab("") +
ylab(" Path Distance Traveled")
dev.off()
jpeg("Path distance traveled in midlife men vs women.jpeg", res=150, width = 800, height = 700)
distancedf %>%
left_join(sam_size) %>%
mutate(myaxis=paste0(sex,"\n", "n=", num)) %>%
ggplot( aes(x=myaxis, y=em_path_dist_trav, fill=sex)) +
geom_violin() +
geom_boxplot(width=0.1, color="grey", alpha=0.2) +
geom_jitter(position = position_jitter(seed = 1, width = 0.2)) +
scale_colour_brewer() +
theme(legend.position="none", plot.title = element_text(size=11)) +
ggtitle("Path distance traveled in men vs women") +
xlab("") +
ylab(" Path Distance Traveled")
dev.off()
png("Path distance traveled in midlife men vs women.png", res=150, width = 800, height = 700)
distancedf %>%
left_join(sam_size) %>%
mutate(myaxis=paste0(sex,"\n", "n=", num)) %>%
ggplot( aes(x=myaxis, y=em_path_dist_trav, fill=sex)) +
geom_violin() +
geom_boxplot(width=0.1, color="grey", alpha=0.2) +
geom_jitter(position = position_jitter(seed = 1, width = 0.2)) +
scale_colour_brewer() +
theme(legend.position="none", plot.title = element_text(size=11)) +
ggtitle("Path distance traveled in men vs women") +
xlab("") +
ylab(" Path Distance Traveled")
dev.off()
pdf("Path distance traveled in midlife men vs women.ppdf", res=150, width = 800, height = 700)
distancedf %>%
left_join(sam_size) %>%
mutate(myaxis=paste0(sex,"\n", "n=", num)) %>%
ggplot( aes(x=myaxis, y=em_path_dist_trav, fill=sex)) +
geom_violin() +
geom_boxplot(width=0.1, color="grey", alpha=0.2) +
geom_jitter(position = position_jitter(seed = 1, width = 0.2)) +
scale_colour_brewer() +
theme(legend.position="none", plot.title = element_text(size=11)) +
ggtitle("Path distance traveled in men vs women") +
xlab("") +
ylab(" Path Distance Traveled")
dev.off()
pdf("Path distance traveled in midlife men vs women.ppdf")
distancedf %>%
left_join(sam_size) %>%
mutate(myaxis=paste0(sex,"\n", "n=", num)) %>%
ggplot( aes(x=myaxis, y=em_path_dist_trav, fill=sex)) +
geom_violin() +
geom_boxplot(width=0.1, color="grey", alpha=0.2) +
geom_jitter(position = position_jitter(seed = 1, width = 0.2)) +
scale_colour_brewer() +
theme(legend.position="none", plot.title = element_text(size=11)) +
ggtitle("Path distance traveled in men vs women") +
xlab("") +
ylab(" Path Distance Traveled")
dev.off()
pdf("Path distance traveled in midlife men vs women.pdf")
distancedf %>%
left_join(sam_size) %>%
mutate(myaxis=paste0(sex,"\n", "n=", num)) %>%
ggplot( aes(x=myaxis, y=em_path_dist_trav, fill=sex)) +
geom_violin() +
geom_boxplot(width=0.1, color="grey", alpha=0.2) +
geom_jitter(position = position_jitter(seed = 1, width = 0.2)) +
scale_colour_brewer() +
theme(legend.position="none", plot.title = element_text(size=11)) +
ggtitle("Path distance traveled in men vs women") +
xlab("") +
ylab(" Path Distance Traveled")
dev.off()
pdf("Path distance in midlife men vs women.pdf")
distancedf %>%
left_join(sam_size) %>%
mutate(myaxis=paste0(sex,"\n", "n=", num)) %>%
ggplot( aes(x=myaxis, y=em_path_dist_trav, fill=sex)) +
geom_boxplot( width =0.3, color="grey") +
geom_jitter(position = position_jitter(seed = 1, width = 0.2)) +
scale_colour_brewer() +
theme(legend.position="none", plot.title = element_text(size=11)) +
ggtitle("Path distance traveled in men vs women") +
xlab("") +
ylab(" Path Distance Traveled")
dev.off()
pdf("exploration speed in men vs women.pdf")
speeddf %>%
left_join(sam_size) %>%
mutate(myaxis=paste0(sex,"\n", "n=", num)) %>%
ggplot( aes(x=myaxis, y=Speed, fill=sex)) +
geom_violin() +
geom_boxplot(width=0.1, color="grey", alpha=0.2) +
geom_jitter(position = position_jitter(seed = 1, width = 0.2)) +
scale_colour_brewer() +
theme(legend.position="none", plot.title = element_text(size=11)) +
ggtitle("Exploration Speed in men vs women") +
xlab("") +
ylab(" Speed in pixels per second")
dev.off()
speeddf %>%
left_join(sam_size) %>%
mutate(myaxis=paste0(sex,"\n", "n=", num)) %>%
ggplot( aes(x=myaxis, y=Speed, fill=sex)) +
geom_violin() +
geom_boxplot(width=0.1, color="grey", alpha=0.2) +
geom_jitter(position = position_jitter(seed = 1, width = 0.2)) +
scale_colour_brewer() +
theme(legend.position="none", plot.title = element_text(size=11)) +
ggtitle("Exploration Speed in men vs women") +
xlab("") +
ylab(" Speed in pixels per second")
speeddf <- master_participant %>% select(Subject,sex,em_path_dist_trav)
sam_size <- master_participant%>%group_by(sex)%>%summarize(num=n())
speeddf <- master_participant %>% dplyr::select(Subject,sex,em_path_dist_trav)
sam_size <- master_participant%>%dplyr::group_by(sex)%>%summarize(num=n())
speeddf <- master_participant %>% dplyr::select(Subject,sex,em_path_dist_trav/480)
speeddf <- master_participant %>% dplyr::select(Subject,sex,em_path_dist_trav)
View(speeddf)
speeddf <- master_participant %>% dplyr::select(Subject,sex,em_path_dist_trav) %>% mutate(em_path_dist_trav == em_path_dist_trav/480)
speeddf <- master_participant %>% dplyr::select(Subject,sex,em_path_dist_trav) %>% mutate(em_path_dist_trav = em_path_dist_trav/480)
sam_size <- master_participant%>%dplyr::group_by(sex)%>% dplyr::summarize(num=n())
speeddf %>%
left_join(sam_size) %>%
mutate(myaxis=paste0(sex,"\n", "n=", num)) %>%
ggplot( aes(x=myaxis, y=Speed, fill=sex)) +
geom_violin() +
geom_boxplot(width=0.1, color="grey", alpha=0.2) +
geom_jitter(position = position_jitter(seed = 1, width = 0.2)) +
scale_colour_brewer() +
theme(legend.position="none", plot.title = element_text(size=11)) +
ggtitle("Exploration Speed in men vs women") +
xlab("") +
ylab(" Speed in pixels per second")
speeddf %>%
left_join(sam_size) %>%
mutate(myaxis=paste0(sex,"\n", "n=", num)) %>%
ggplot( aes(x=myaxis, y=em_path_dist_trav, fill=sex)) +
geom_violin() +
geom_boxplot(width=0.1, color="grey", alpha=0.2) +
geom_jitter(position = position_jitter(seed = 1, width = 0.2)) +
scale_colour_brewer() +
theme(legend.position="none", plot.title = element_text(size=11)) +
ggtitle("Exploration Speed in men vs women") +
xlab("") +
ylab(" Speed in pixels per second")
pdf("exploration speed in men vs women.pdf")
speeddf %>%
left_join(sam_size) %>%
mutate(myaxis=paste0(sex,"\n", "n=", num)) %>%
ggplot( aes(x=myaxis, y=em_path_dist_trav, fill=sex)) +
geom_violin() +
geom_boxplot(width=0.1, color="grey", alpha=0.2) +
geom_jitter(position = position_jitter(seed = 1, width = 0.2)) +
scale_colour_brewer() +
theme(legend.position="none", plot.title = element_text(size=11)) +
ggtitle("Exploration Speed in men vs women") +
xlab("") +
ylab(" Speed in pixels per second")
dev.off()
speeddf %>%
left_join(sam_size) %>%
mutate(myaxis=paste0(sex,"\n", "n=", num)) %>%
ggplot( aes(x=myaxis, y=em_path_dist_trav, fill=sex)) +
geom_boxplot(width=0.1, color="grey", alpha=0.2) +
geom_jitter(position = position_jitter(seed = 1, width = 0.2)) +
scale_colour_brewer() +
theme(legend.position="none", plot.title = element_text(size=11)) +
ggtitle("Exploration Speed in men vs women") +
xlab("") +
ylab(" Speed in pixels per second")
View(speed_groupdiff)
pdf("box plot exploration speed in men vs women.pdf")
speeddf %>%
left_join(sam_size) %>%
mutate(myaxis=paste0(sex,"\n", "n=", num)) %>%
ggplot( aes(x=myaxis, y=em_path_dist_trav, fill=sex)) +
geom_boxplot(width=0.1, color="grey", alpha=0.2) +
geom_jitter(position = position_jitter(seed = 1, width = 0.2)) +
scale_colour_brewer() +
theme(legend.position="none", plot.title = element_text(size=11)) +
ggtitle("Exploration Speed in men vs women") +
xlab("") +
ylab(" Speed in pixels per second")
dev.off()
pdf("exploration speed in men vs women.pdf")
speeddf %>%
left_join(sam_size) %>%
mutate(myaxis=paste0(sex,"\n", "n=", num)) %>%
ggplot( aes(x=myaxis, y=em_path_dist_trav, fill=sex)) +
geom_violin() +
geom_boxplot(width=0.1, color="grey", alpha=0.2) +
geom_jitter(position = position_jitter(seed = 1, width = 0.2)) +
scale_colour_brewer() +
theme(legend.position="none", plot.title = element_text(size=11)) +
ggtitle("Exploration Speed in men vs women") +
xlab("") +
ylab(" Speed in pixels per second")
dev.off()
View(male_bigexplr_counts)
male_obj_visits <- male_bigexplr_counts %>% transmute(subject, A, I, L, K, N, O, P, Y, W)
View(male_obj_visits)
male_obj_visits <- male_bigexplr_counts %>% transmute(subject,sex, A, I, L, K, N, O, P, Y, W)
cols_sum<-c(2:length(male_obj_visits))
male_obj_visits$total<-rowSums(male_obj_visits[,cols_sum])
male_obj_visits$total<-rowSums(male_obj_visits[,cols_sum])
cols_sum<-c(2:length(male_obj_visits))#
male_obj_visits <- male_bigexplr_counts %>% transmute(subject,sex, A, I, L, K, N, O, P, Y, W)  #counts for each specific object locations
cols_sum<-c(2:length(male_obj_visits))#finding columns to include in summing function below
male_obj_visits$total<-rowSums(male_obj_visits[,cols_sum])
owSums(male_obj_visits[,cols_sum])
rowSums(male_obj_visits[,cols_sum])
male_obj_visits[,cols_sum]
cols_sum<-c(3:length(male_obj_visits))
male_obj_visits$total<-rowSums(male_obj_visits[,cols_sum])
male_obj_visits <- male_bigexplr_counts %>% transmute(subject,sex, A, I, L, K, N, O, P, Y, W)
male_obj_visits <- male_bigexplr_counts %>% transmute(subject,sex, A, I, L, K, N, O, P, Y, W) %>% mutate(total= rowSums(male_obj_visits[,cols_sum]))
male_obj_visits_mean<-aggregate(male_obj_visits_mean$total, list(male_obj_visits_mean$subject), FUN=mean)
male_obj_visits_mean<-aggregate(male_obj_visits$total, list(male_obj_visits$subject), FUN=mean)
View(male_obj_visits_mean)
male_obj_visits <- male_bigexplr_counts %>% transmute(subject,sex, A, I, L, K, N, O, P, Y, W) %>% mutate(total= rowSums(male_obj_visits[,cols_sum])) %>% mutate(obj_mean = aggregate(male_obj_visits$total, list(male_obj_visits$subject), FUN=mean))
male_explr_analysis$TotalObjVisits<-aggregate(male_obj_visits$total, list(male_obj_visits$subject), FUN=mean)
View(male_explr_analysis)
female_obj_visits <- female_bigexplr_counts %>% transmute(subject,sex, A, I, L, K, N, O, P, Y, W) %>% mutate(total= rowSums(female_obj_visits[,cols_sum]))
cols_sum<-c(3:length(female_obj_visits))
female_explr_analysis$TotalObjVisits<-aggregate(female_obj_visits$total, list(female_obj_visits$subject), FUN=mean)
female_obj_visits <- female_bigexplr_counts %>% transmute(subject,sex, A, I, L, K, N, O, P, Y, W) %>% mutate(total= rowSums(female_obj_visits[,cols_sum]))
male_obj_visits <- male_bigexplr_counts %>% transmute(subject,sex, A, I, L, K, N, O, P, Y, W)
male_obj_visits <-  male_obj_visits %>% mutate(total= rowSums(male_obj_visits[,cols_sum]))
female_obj_visits <- female_bigexplr_counts %>% transmute(subject,sex, A, I, L, K, N, O, P, Y, W) %>% mutate(total= rowSums[,cols_sum])
female_obj_visits <- female_bigexplr_counts %>% transmute(subject,sex, A, I, L, K, N, O, P, Y, W) %>% mutate(total= rowSums(. [,cols_sum]))
View(female_obj_visits)
male_obj_visits <- male_bigexplr_counts %>% transmute(subject,sex, A, I, L, K, N, O, P, Y, W)  %>% mutate(total= rowSums(.[,cols_sum]))
View(male_obj_visits)
female_obj_visits <- female_bigexplr_counts %>% transmute(subject,sex, A, I, L, K, N, O, P, Y, W) %>% mutate(total= rowSums(. [,cols_sum]))
cols_sum<-c(3:length(female_obj_visits))
female_explr_analysis$TotalObjVisits<-aggregate(female_obj_visits$total, list(female_obj_visits$subject), FUN=mean)
View(female_explr_analysis)
male_hall_visits <- male_bigexplr_counts %>% transmute(subject,sex,  B, C, D, E, `F`, G, H, J, M, Q, R, S, `T`, U, V, X, Z)  %>% mutate(total= rowSums(.[,cols_sum]))
cols_sum<-c(3:length(male_hall_visits))
male_explr_analysis$TotalHallVisits<-aggregate(male_hall_visits$total, list(male_hall_visits$subject), FUN=mean)
#females
female_hall_visits <- female_bigexplr_counts %>% transmute(subject,sex,  B, C, D, E, `F`, G, H, J, M, Q, R, S, `T`, U, V, X, Z)  %>% mutate(total= rowSums(.[,cols_sum]))
cols_sum<-c(3:length(female_hall_visits))
female_explr_analysis$TotalHallVisits<-aggregate(female_hall_visits$total, list(female_hall_visits$subject), FUN=mean)
female_hall_visits <- female_bigexplr_counts %>% transmute(subject,sex,  B, C, D, E, `F`, G, H, J, M, Q, R, S, `T`, U, V, X, Z)
View(female_hall_visits)
View(male_hall_visits)
female_hall_visits <- female_bigexplr_counts %>% transmute(subject,sex,  B, C, D, E, `F`, G, H, J, M, Q, R, S, `T`, U, V, X, Z) %>% mutate(total= rowSums(.[,cols_sum]))
male_obj_visits <- male_bigexplr_counts %>% transmute(subject,sex, A, I, L, K, N, O, P, Y, W)
cols_sum<-c(3:length(male_obj_visits))
male_obj_visit$total= rowSums(male_obj_visit[,cols_sum])
male_explr_analysis$TotalObjVisits<-aggregate(male_obj_visits$total, list(male_obj_visits$subject), FUN=mean)
male_obj_visits <- male_bigexplr_counts %>% transmute(subject,sex, A, I, L, K, N, O, P, Y, W)
View(male_obj_visits)
cols_sum<-c(3:length(male_obj_visits))
male_obj_visit$total= rowSums(male_obj_visit[,cols_sum])
male_obj_visits <- male_bigexplr_counts %>% transmute(subject,sex, A, I, L, K, N, O, P, Y, W)
cols_sum<-c(3:length(male_obj_visits))
male_obj_visits$total= rowSums(male_obj_visit[,cols_sum])
male_explr_analysis$TotalObjVisits<-aggregate(male_obj_visits$total, list(male_obj_visits$subject), FUN=mean)
male_obj_visits <- male_bigexplr_counts %>% transmute(subject,sex, A, I, L, K, N, O, P, Y, W)
cols_sum<-c(3:length(male_obj_visits))
male_obj_visits$total= rowSums(male_obj_visits[,cols_sum])
male_explr_analysis$TotalObjVisits<-aggregate(male_obj_visits$total, list(male_obj_visits$subject), FUN=mean)
female_obj_visits <- female_bigexplr_counts %>% transmute(subject,sex, A, I, L, K, N, O, P, Y, W)
cols_sum<-c(3:length(female_obj_visits))
female_obj_visits$total= rowSums(female_obj_visits[,cols_sum])
female_explr_analysis$TotalObjVisits<-aggregate(female_obj_visits$total, list(female_obj_visits$subject), FUN=mean)
male_hall_visits <- male_bigexplr_counts %>% transmute(subject,sex,  B, C, D, E, `F`, G, H, J, M, Q, R, S, `T`, U, V, X, Z)
cols_sum<-c(3:length(male_hall_visits))
male_hall_visits$total= rowSums(male_hall_visits[,cols_sum])
male_explr_analysis$TotalHallVisits<-aggregate(male_hall_visits$total, list(male_hall_visits$subject), FUN=mean)
#females
female_hall_visits <- female_bigexplr_counts %>% transmute(subject,sex,  B, C, D, E, `F`, G, H, J, M, Q, R, S, `T`, U, V, X, Z)
cols_sum<-c(3:length(female_hall_visits))
female_hall_visits$total= rowSums(female_hall_visits[,cols_sum])
female_explr_analysis$TotalHallVisits<-aggregate(female_hall_visits$total, list(female_hall_visits$subject), FUN=mean)
shapiro.test(male_obj_visits$TotalObjVisits)
shapiro.test(female_obj_visits$TotalObjVisits)
shapiro.test(male_obj_visits$TotalObjVisits)
shapiro.test(male_explr_analysis$TotalObjVisits)
shapiro.test(female_explr_analysis$TotalObjVisits)
shapiro.test(male_explr_analysis$TotalObjVisits)
View(male_explr_analysis)
shapiro.test(male_explr_analysis$TotalObjVisits)
class(male_explr_analysis$TotalObjVisits)
class(male_explr_analysis$Speed))
class(male_explr_analysis$Speed)
male_obj_visits <- male_bigexplr_counts %>% transmute(subject,sex, A, I, L, K, N, O, P, Y, W)
cols_sum<-c(3:length(male_obj_visits))
male_obj_visits$total= rowSums(male_obj_visits[,cols_sum])
male_explr_analysis$TotalObjVisits<-aggregate(male_obj_visits$total, list(male_obj_visits$subject), FUN=mean)
shapiro.test(male_explr_analysis$TotalObjVisits)
class(male_explr_analysis$TotalObjVisits)
as.numeric(aggregate(male_obj_visits$total, list(male_obj_visits$subject), FUN=mean))
male_explr_analysis$TotalObjVisits<-as.numeric(aggregate(male_obj_visits$total, list(male_obj_visits$subject), FUN=mean))
aggregate(male_obj_visits$total, list(male_obj_visits$subject), FUN=mean)
male_explr_analysis$TotalObjVisits<-aggregate(male_obj_visits$total, list(male_obj_visits$subject), FUN=mean) %>% dplyr::select(x)
male_obj_visits <- male_bigexplr_counts %>% transmute(subject,sex, A, I, L, K, N, O, P, Y, W)
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
workdir<- "/Users/danielacossio/Desktop/MLINDIV_analysisDC/MidlifeDesktopBehavior/"
setwd(workdir)
# read files in
#infosheet with age/sex
subjInfo<-read.csv ("MAZE_data_old.csv")  %>% select(Subject.ID,Sex,Age.Scan..years.,) %>% `colnames<-` (c("Subject","sex","age")) %>% drop_na()  %>% arrange(.$Subject)
#preprocessed data
trialDF<-read.csv ("MLINDIV_trial_master.csv") %>% filter(Subject %in% c(as.character(subjInfo$Subject)))
participantDF<-read.csv ("MLINDIV_participant_master.csv") %>%  filter(Subject %in% c(as.character(subjInfo$Subject)))
master_trial <- inner_join(subjInfo, trialDF, by="Subject")
master_participant <- inner_join(subjInfo, participantDF, by="Subject")
############### prepping variables for later use  #######################
locs <- c('A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', "Y", "Z")
objs_orientations<- c('A4', 'I2', 'K4', 'L2', 'N3', 'O2', 'P2', 'Y2', 'W4')
objects<-c('A', 'I', 'K', 'L', 'N', 'O', 'P', 'Y', 'W')
hallways <- c('B', 'C', 'D', 'E', 'F', 'G', 'H', 'J', 'M', 'Q', 'R', 'S', 'T', 'U', "V", 'X', "Z")
#A=guitar
#I=snowman
#L=spaceship
#K=lamp post
#N=chicken
#O=trophy
#P=chair
#Y=umbrella
#W=cuckoo clock
#ttest output colnames for data later
#colttest <-  c("estimate","statistic", "p.value", "parameter"," conf.low"," conf.high"," method","alternative")
# grab explore data
explr <- master_trial %>% filter(is.na(accuracy) == TRUE) %>% filter(Task_type == 1 | Task_type == 2) #
explrDF<- data.frame(matrix(nrow = nrow(explr)))#creating empty dataframe to store contents of for loop into
for (i in 1:nrow(explr)){
e_string_orient<-as.list(strsplit(explr$e_paths[i],split=" ")) #splitting exploration path trajectory (with orientations) of subject into individual strings and storing as list
e_string<-as.list(strsplit(explr$paths[i],split=" ")) #splitting exploration path trajectories (w/o orientations) of subject into individual strings
F3_index<-which(sapply(e_string_orient[[1]], FUN=function(X) "F3" %in% X))+1 #finding which element in string list is F3, and we need to add a constant of 1 to
#match this up to where the same element would be in the "paths" variable. If element doesn't exist, R takes this into account and doesn't add a 1 (i.e., it keeps the
#index value as 'non existent' even after adding a 1)
e_string[[1]][F3_index]<-"N" #replacing with N
V2_index<-which(sapply(e_string_orient[[1]], FUN=function(X) "V2" %in% X))+1#finding which element in string list is V2, and we need to add a constant of 1 to
#match this up to where the same element would be in the "paths" variable. If element doesn't exist, R takes this into account and doesn't add a 1 (i.e., it keeps the
#index value as 'non existent' even after adding 1)
e_string[[1]][V2_index]<-"Y" #replacing with Y
e_string<-paste(e_string[[1]], collapse = " ") #collapsing exploration path trajectory into single string list
explrDF[i,1]<-e_string #storing transposed version into dataframe
}
explrDF$Subject<-explr$Subject #adding subject ID to dataframe
explrDF <- explrDF %>% rename(paths = matrix.nrow...nrow.explr..) #renaming column containing exploration trajectories
sub_participantinfo <- inner_join(master_participant,explrDF)
big_explore<-as.data.frame(str_split_fixed(explrDF$paths," ",nrow(explr)))# splits the path strings into separate letters
big_explore <- big_explore %>% mutate(subject = explrDF$Subject) #adding subject ID as final column
big_explore <-big_explore[,c(ncol(big_explore), 1:(ncol(big_explore)-1))] # moving subject ID to first column
row_labels<-c(1:nrow(big_explore))#creating row labels, which will be handy for splitting up the dataframe into chunks below
big_explore<- split( big_explore , f = row_labels)
#for loop to find consecutive location repeats, and remove them
for (i in 1:length(big_explore)){
big_explore[[i]]<-t(big_explore[[i]])#transposing chunks
big_explore[[i]][big_explore[[i]] == ""] <- NA #replacing empty cells with NA
repeat_logical<-t(c(NA, big_explore[[i]]) == c(big_explore[[i]], NA))[1:length(big_explore[[i]])]
repeats<- grep("TRUE",repeat_logical) #find positions of items in list that are TRUE, which correspond to row numbers of chunk
big_explore[[i]][repeats,1]<-"repeats"  #relabel these to "repeats"
big_explore[[i]]<-t(big_explore[[i]])#transposing to original form
big_explore[[i]]<-as.data.frame(big_explore[[i]]) #re-converting to dataframe
}
big_explore<-unsplit(big_explore,row_labels)#merging all chunks back into single dataframe
big_explore[is.na(big_explore)]<-"none" #replacing all NAs with string, otherwise for loop below won't work
big_explore <-  big_explore %>% mutate(sex = sub_participantinfo$sex)
#for loop to determine location counts
big_explore_counts <- data.frame(matrix(ncol = 0, nrow = nrow(big_explore)))#creating dataframe to store counts into
for (i in locs){
big_explore_counts$subject <- big_explore$subject
d <- as.data.frame(apply(big_explore,1,function(x) sum(x==i))) # not sure what this function is
names(d) <- i
big_explore_counts <- cbind(d, big_explore_counts)
}
big_explore_counts <- big_explore_counts %>% mutate(sex=sub_participantinfo$sex)
print("now splitting by males")
#Males
print("Males dat aframes including participant info, explore paths, object/location visits, and trials")
malesubjs <- master_participant %>% filter(sex == "Male")
print(nrow(malesubjs))
maletrials <- master_trial %>% filter(sex== "Male")
male_explr <- explr%>% filter(sex=="Male")
malesubsinfo <-  sub_participantinfo%>% filter(sex=="Male")
male_bigexplr <- big_explore %>% filter(sex=="Male")
male_bigexplr_counts <-  big_explore_counts %>% filter(sex=="Male")
male_explr_analysis<-master_participant %>% filter(sex == "Male") %>% select(Subject) %>% as.data.frame()
# lets do the women now
print("now splitting by females")
print("females data frames including participant info, explore paths, object/location visits, and trials")
femalesubjs <- master_participant %>% filter(sex == "Female")
print(nrow(femalesubjs))
femaletrials <- master_trial %>% filter(sex== "Female")
female_explr <- explr%>% filter(sex=="Female")
femalesubsinfo <-  sub_participantinfo%>% filter(sex=="Female")
female_bigexplr <- big_explore %>% filter(sex=="Female")
female_bigexplr_counts <-  big_explore_counts %>% filter(sex=="Female")
#empty df for later
female_explr_analysis<- master_participant %>% filter(sex == "Female") %>% select(Subject) %>% as.data.frame()
# this will get really repetitive because i have to do the analysis for males and females separately
male_explr_analysis$Dist<-malesubjs$em_path_dist_trav
female_explr_analysis$Dist<-femalesubjs$em_path_dist_trav
#Normality test to assess whether samples are normally distributed  # females is not normal
shapiro.test(male_explr_analysis$Dist)
shapiro.test(female_explr_analysis$Dist)
#Wilcoxon Test # may change this later
dist_groupdiff<-wilcox.test(female_explr_analysis$Dist,male_explr_analysis$Dist)
dist_groupdiff_effsize<-cohensD(female_explr_analysis$Dist,male_explr_analysis$Dist)
male_explr_analysis$Speed <-malesubjs$em_path_dist_trav/480#in pixels per second
female_explr_analysis$Speed<-femalesubjs$em_path_dist_trav/480
#Normality test to assess whether samples are normally distributed
shapiro.test(male_explr_analysis$Speed)
shapiro.test(female_explr_analysis$Speed)
#Wilcoxon Test
speed_groupdiff<-wilcox.test(female_explr_analysis$Speed,male_explr_analysis$Speed)
speed_groupdiff_effsize<-cohensD(female_explr_analysis$Speed,male_explr_analysis$Speed)
# count specific object locations for each subject and then gets the means and stores into big dataframe
#males
male_obj_visits <- male_bigexplr_counts %>% transmute(subject,sex, A, I, L, K, N, O, P, Y, W)
cols_sum<-c(3:length(male_obj_visits))
male_obj_visits$total= rowSums(male_obj_visits[,cols_sum])
male_explr_analysis$TotalObjVisits<-aggregate(male_obj_visits$total, list(male_obj_visits$subject), FUN=mean) %>% dplyr::select(x)
female_obj_visits <- female_bigexplr_counts %>% transmute(subject,sex, A, I, L, K, N, O, P, Y, W)
cols_sum<-c(3:length(female_obj_visits))
female_obj_visits$total= rowSums(female_obj_visits[,cols_sum])
female_explr_analysis$TotalObjVisits<-aggregate(female_obj_visits$total, list(female_obj_visits$subject), FUN=mean)%>% dplyr::select(x)
shapiro.test(male_explr_analysis$TotalObjVisits)
shapiro.test(female_explr_analysis$TotalObjVisits)
female_explr_analysis$TotalObjVisits<-aggregate(female_obj_visits$total, list(female_obj_visits$subject), FUN=mean)%>% dplyr::select(x) %>% as.numeric()
mObj_ave <-aggregate(male_obj_visits$total, list(male_obj_visits$subject), FUN=mean)
male_explr_analysis$TotalObjVisits <- mObj_ave$x
female_obj_visits <- female_bigexplr_counts %>% transmute(subject,sex, A, I, L, K, N, O, P, Y, W)
cols_sum<-c(3:length(female_obj_visits))
female_obj_visits$total= rowSums(female_obj_visits[,cols_sum])
fObj_ave <- aggregate(female_obj_visits$total, list(female_obj_visits$subject), FUN=mean)
female_explr_analysis$TotalObjVisits<-fObj_ave$x
shapiro.test(male_explr_analysis$TotalObjVisits)
shapiro.test(female_explr_analysis$TotalObjVisits)
objvisits_groupdiff<-t.test(female_explr_analysis$TotalObjVisits,male_explr_analysis$TotalObjVisits)
objvisits_groupdiff_effsize<-cohensD(female_explr_analysis$TotalObjVisits,male_explr_analysis$TotalObjVisits)
objvisits_groupdiff
male_hall_visits <- male_bigexplr_counts %>% transmute(subject,sex,  B, C, D, E, `F`, G, H, J, M, Q, R, S, `T`, U, V, X, Z)
cols_sum<-c(3:length(male_hall_visits))
male_hall_visits$total= rowSums(male_hall_visits[,cols_sum])
mhall_ave <- aggregate(male_hall_visits$total, list(male_hall_visits$subject), FUN=mean)
male_explr_analysis$TotalHallVisits<-mhall_ave
#females
female_hall_visits <- female_bigexplr_counts %>% transmute(subject,sex,  B, C, D, E, `F`, G, H, J, M, Q, R, S, `T`, U, V, X, Z)
cols_sum<-c(3:length(female_hall_visits))
female_hall_visits$total= rowSums(female_hall_visits[,cols_sum])
fhall_ave <- aggregate(female_hall_visits$total, list(female_hall_visits$subject), FUN=mean)
female_explr_analysis$TotalHallVisits<-fhall_ave
male_hall_visits <- male_bigexplr_counts %>% transmute(subject,sex,  B, C, D, E, `F`, G, H, J, M, Q, R, S, `T`, U, V, X, Z)
cols_sum<-c(3:length(male_hall_visits))
male_hall_visits$total= rowSums(male_hall_visits[,cols_sum])
mhall_ave <- aggregate(male_hall_visits$total, list(male_hall_visits$subject), FUN=mean)
male_explr_analysis$TotalHallVisits<-mhall_ave
shapiro.test(male_explr_analysis$TotalHallVisits)
male_hall_visits <- male_bigexplr_counts %>% transmute(subject,sex,  B, C, D, E, `F`, G, H, J, M, Q, R, S, `T`, U, V, X, Z)
cols_sum<-c(3:length(male_hall_visits))
male_hall_visits$total= rowSums(male_hall_visits[,cols_sum])
mhall_ave <- aggregate(male_hall_visits$total, list(male_hall_visits$subject), FUN=mean)
male_explr_analysis$TotalHallVisits<-mhall_ave$x
shapiro.test(male_explr_analysis$TotalHallVisits)
female_hall_visits <- female_bigexplr_counts %>% transmute(subject,sex,  B, C, D, E, `F`, G, H, J, M, Q, R, S, `T`, U, V, X, Z)
cols_sum<-c(3:length(female_hall_visits))
female_hall_visits$total= rowSums(female_hall_visits[,cols_sum])
fhall_ave <- aggregate(female_hall_visits$total, list(female_hall_visits$subject), FUN=mean)
female_explr_analysis$TotalHallVisits<-fhall_ave$x
shapiro.test(female_explr_analysis$TotalHallVisits)
objvisits_groupdiff<-t.test(female_explr_analysis$TotalHallVisits,male_explr_analysis$TotalHallVisits)
objvisits_groupdiff_effsize<-cohensD(female_explr_analysis$TotalHallVisits,male_explr_analysis$TotalHallVisits)
objvisits_groupdiff<-t.test(female_explr_analysis$TotalObjVisits,male_explr_analysis$TotalObjVisits)
objvisits_groupdiff_effsize<-cohensD(female_explr_analysis$TotalObjVisits,male_explr_analysis$TotalObjVisits)
hallvisits_groupdiff<-t.test(female_explr_analysis$TotalHallVisits,male_explr_analysis$TotalHallVisits)
hallvisits_groupdiff_effsize<-cohensD(female_explr_analysis$TotalHallVisits,male_explr_analysis$TotalHallVisits)
hallvisits_groupdiff
View(female_explr)
male_explr_analysis$Turns<-male_explr$em_turns_count #adding to master analysis df
female_explr_analysis$Turns<-female_explr$em_turns_count #adding to master analysis df
shapiro.test(male_explr_analysis$Turns)
shapiro.test(female_explr_analysis$Turns)
View(male_explr_analysis)
View(male_explr)
View(subjInfo)
View(sub_participantinfo)
View(malesubjs)
male_explr_analysis$Turns<-malesubjs$em_turns_count #adding to master analysis df
female_explr_analysis$Turns<-femalesubjs$em_turns_count #adding to master analysis df
#Normality test to assess whether samples are normally distributed
shapiro.test(male_explr_analysis$Turns)
shapiro.test(female_explr_analysis$Turns)
female_explr_analysis$Turns<-femalesubjs$em_turns_count
shapiro.test(female_explr_analysis$Turns)
turns_groupdiff<-t.test(female_explr_analysis$Turns,male_explr_analysis$Turns)
turns_groupdiff_effsize<-cohensD(female_explr_analysis$Turns,male_explr_analysis$Turns)
turns_groupdiff
