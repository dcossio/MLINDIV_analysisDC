#A=guitar
#I=snowman
#L=spaceship
#K=lamp post
#N=chicken
#O=trophy
#P=chair
#Y=umbrella
#W=cuckoo clock
#ttest output colnames for data later
#colttest <-  c("estimate","statistic", "p.value", "parameter"," conf.low"," conf.high"," method","alternative")
big_explore<-as.data.frame(str_split_fixed(explrDF$paths," ",nrow(explr)))# splits the path strings into separate letters
big_explore <- big_explore %>% mutate(subject = explrDF$Subject) #adding subject ID as final column
big_explore <-big_explore[,c(ncol(big_explore), 1:(ncol(big_explore)-1))] # moving subject ID to first column
row_labels<-c(1:nrow(big_explore))#creating row labels, which will be handy for splitting up the dataframe into chunks below
big_explore<- split( big_explore , f = row_labels)#
#for loop to find consecutive location repeats, and remove them
for (i in 1:length(big_explore)){
big_explore[[i]]<-t(big_explore[[i]])#transposing chunks
big_explore[[i]][big_explore[[i]] == ""] <- NA #replacing empty cells with NA
repeat_logical<-t(c(NA, big_explore[[i]]) == c(big_explore[[i]], NA))[1:length(big_explore[[i]])]
repeats<- grep("TRUE",repeat_logical) #find positions of items in list that are TRUE, which correspond to row numbers of chunk
big_explore[[i]][repeats,1]<-"repeats"  #relabel these to "repeats"
big_explore[[i]]<-t(big_explore[[i]])#transposing to original form
big_explore[[i]]<-as.data.frame(big_explore[[i]]) #re-converting to dataframe
}
big_explore<-unsplit(big_explore,row_labels)#merging all chunks back into single dataframe
big_explore[is.na(big_explore)]<-"none" #replacing all NAs with string, otherwise for loop below won't work
big_explore <-  big_explore %>% mutate(sex = sub_participantinfo$sex)
#for loop to determine location counts
big_explore_counts <- data.frame(matrix(ncol = 0, nrow = nrow(big_explore)))#creating dataframe to store counts into
for (i in locs){
big_explore_counts$subject <- big_explore$subject
d <- as.data.frame(apply(big_explore,1,function(x) sum(x==i))) # not sure what this function is
names(d) <- i
big_explore_counts <- cbind(d, big_explore_counts)
}
big_explore_counts <- big_explore_counts %>% mutate(sex=sub_participantinfo$sex)
explr <- master_trial %>% filter(is.na(accuracy) == TRUE) %>% filter(Task_type == 1 | Task_type == 2) #
explrDF<- data.frame(matrix(nrow = nrow(explr)))#creating empty dataframe to store contents of for loop into
for (i in 1:nrow(explr)){
e_string_orient<-as.list(strsplit(explr$e_paths[i],split=" ")) #splitting exploration path trajectory (with orientations) of subject into individual strings and storing as list
e_string<-as.list(strsplit(explr$paths[i],split=" ")) #splitting exploration path trajectories (w/o orientations) of subject into individual strings
F3_index<-which(sapply(e_string_orient[[1]], FUN=function(X) "F3" %in% X))+1 #finding which element in string list is F3, and we need to add a constant of 1 to
#match this up to where the same element would be in the "paths" variable. If element doesn't exist, R takes this into account and doesn't add a 1 (i.e., it keeps the
#index value as 'non existent' even after adding a 1)
e_string[[1]][F3_index]<-"N" #replacing with N
V2_index<-which(sapply(e_string_orient[[1]], FUN=function(X) "V2" %in% X))+1#finding which element in string list is V2, and we need to add a constant of 1 to
#match this up to where the same element would be in the "paths" variable. If element doesn't exist, R takes this into account and doesn't add a 1 (i.e., it keeps the
#index value as 'non existent' even after adding 1)
e_string[[1]][V2_index]<-"Y" #replacing with Y
e_string<-paste(e_string[[1]], collapse = " ") #collapsing exploration path trajectory into single string list
explrDF[i,1]<-e_string #storing transposed version into dataframe
}
explrDF$Subject<-explr$Subject #adding subject ID to dataframe
explrDF <- explrDF %>% rename(paths = matrix.nrow...nrow.explr..) #renaming column containing exploration trajectories
sub_participantinfo <- inner_join(master_participant,explrDF)
View(explrDF)
View(explr)
big_explore<-as.data.frame(str_split_fixed(explrDF$paths," ",nrow(explr)))# splits the path strings into separate letters
big_explore <- big_explore %>% mutate(subject = explrDF$Subject) #adding subject ID as final column
big_explore <-big_explore[,c(ncol(big_explore), 1:(ncol(big_explore)-1))] # moving subject ID to first column
row_labels<-c(1:nrow(big_explore))#creating row labels, which will be handy for splitting up the dataframe into chunks below
big_explore<- split( big_explore , f = row_labels)#
#for loop to find consecutive location repeats, and remove them
for (i in 1:length(big_explore)){
big_explore[[i]]<-t(big_explore[[i]])#transposing chunks
big_explore[[i]][big_explore[[i]] == ""] <- NA #replacing empty cells with NA
repeat_logical<-t(c(NA, big_explore[[i]]) == c(big_explore[[i]], NA))[1:length(big_explore[[i]])]
repeats<- grep("TRUE",repeat_logical) #find positions of items in list that are TRUE, which correspond to row numbers of chunk
big_explore[[i]][repeats,1]<-"repeats"  #relabel these to "repeats"
big_explore[[i]]<-t(big_explore[[i]])#transposing to original form
big_explore[[i]]<-as.data.frame(big_explore[[i]]) #re-converting to dataframe
}
big_explore<-unsplit(big_explore,row_labels)#merging all chunks back into single dataframe
big_explore[is.na(big_explore)]<-"none" #replacing all NAs with string, otherwise for loop below won't work
big_explore <-  big_explore %>% mutate(sex = sub_participantinfo$sex)
#for loop to determine location counts
big_explore_counts <- data.frame(matrix(ncol = 0, nrow = nrow(big_explore)))#creating dataframe to store counts into
for (i in locs){
big_explore_counts$subject <- big_explore$subject
d <- as.data.frame(apply(big_explore,1,function(x) sum(x==i))) # not sure what this function is
names(d) <- i
big_explore_counts <- cbind(d, big_explore_counts)
}
big_explore_counts <- big_explore_counts %>% mutate(sex=sub_participantinfo$sex)
View(explrDF)
View(sub_participantinfo)
View(explr)
print("now splitting by males")
#Males
print("Males dat aframes including participant info, explore paths, object/location visits, and trials")
malesubjs <- master_participant %>% filter(sex == "Male")
print(nrow(malesubjs))
maletrials <- master_trial %>% filter(sex== "Male")
male_explr <- explr%>% filter(sex=="Male")
malesubsinfo <-  sub_participantinfo%>% filter(sex=="Male")
male_bigexplr <- big_explore %>% filter(sex=="Male")
male_bigexplr_counts <-  big_explore_counts %>% filter(sex=="Male")
# lets do the women now
print("now splitting by females")
print("females data frames including participant info, explore paths, object/location visits, and trials")
femalesubjs <- master_participant %>% filter(sex == "Female")
print(nrow(femalesubjs))
femaletrials <- master_trial %>% filter(sex== "Female")
female_explr <- explr%>% filter(sex=="Female")
femalesubsinfo <-  sub_participantinfo%>% filter(sex=="Female")
female_bigexplr <- big_explore %>% filter(sex=="Female")
female_bigexplr_counts <-  big_explore_counts %>% filter(sex=="Female")
as.data.frame(master_participant$Subject)
female_explr_analysis<- master_participant %>% filter(sex == "Female") %>% select(master_participant$Subject) %>% as.data.frame()
female_explr_analysis<- master_participant %>% filter(sex == "Female") %>% select(Subject) %>% as.data.frame()
View(female_explr_analysis)
male_explr_analysis<-master_participant %>% filter(sex == "Male") %>% select(Subject) %>% as.data.frame()
View(master_participant)
male_explr_analysis$Dist<-femalesubjs$em_path_dist_trav
female_explr_analysis$Dist<-malesubjs$em_path_dist_trav
male_explr_analysis$Dist<-malesubjs$em_path_dist_trav
female_explr_analysis$Dist<-femalesubjs$em_path_dist_trav
View(male_explr_analysis)
shapiro.test(midlife_exploration_analysis$Dist)
shapiro.test(young_exploration_analysis$Dist)
shapiro.test(male_explr_analysis$Dist)
shapiro.test(female_explr_analysis$Dist)
dist_groupdiff<-wilcox.test(female_explr_analysis$Dist,male_explr_analysis$Dist)
View(dist_groupdiff)
dist_groupdiff
dist_groupdiff_effsize<-cohensD(female_explr_analysis$Dist,male_explr_analysis$Dist)
library(lsr)
install.packages(lsr)
install.packages("lsr")
library(lsr)
dist_groupdiff_effsize<-cohensD(female_explr_analysis$Dist,male_explr_analysis$Dist)
sam_size <- cbind(male_explr_analysis$Dist, female_explr_analysis$Dist) %>% `colnames<-`(c("male","female"))
inner_join(male_explr_analysis$Dist, female_explr_analysis$Dist)
cbind.data.frame(male_explr_analysis$Dist, female_explr_analysis$Dist)
View(female_explr_analysis)
sam_size <- master_participant%>%group_by(sex)%>%summarize(num=n())
View(sam_size)
master_participant%>%group_by(sex)
View(sam_size)
distancedf <- master_participant$em_path_dist_trav
distancedf <- master_participant %>% select(Subject,sex,em_path_dist_trav)
View(distancedf)
distancedf %>%
left_join(sam_size)
distancedf %>%
left_join(sam_size) %>%
mutate(myaxis=paste0(sex,"\n", "n=", num)) %>%
ggplot( aes(x=myaxis, y=value, fill=name)) +
geom_violin(width=1.4) +
geom_boxplot(width=0.1, color="grey", alpha=0.2) +
scale_fill_viridis(discrete = TRUE) +
theme_ipsum() +
theme(
legend.position="none",
plot.title = element_text(size=11)
) +
ggtitle("A Violin wrapping a boxplot") +
xlab("")
distancedf %>%
left_join(sam_size) %>%
mutate(myaxis=paste0(sex,"\n", "n=", num)) %>%
ggplot( aes(x=myaxis, y=value, fill=name)) +
geom_violin(width=1.4) +
geom_boxplot(width=0.1, color="grey", alpha=0.2) +
scale_fill_viridis(discrete = TRUE) +
theme(
legend.position="none",
plot.title = element_text(size=11)
) +
ggtitle("A Violin wrapping a boxplot") +
xlab("")
distancedf %>%
left_join(sam_size) %>%
mutate(myaxis=paste0(sex,"\n", "n=", num))
distancedf %>%
left_join(sam_size) %>%
mutate(myaxis=paste0(sex,"\n", "n=", num)) %>%
ggplot( aes(x=myaxis, y=em_path_dist_trav, fill=name)) +
geom_violin(width=1.4) +
geom_boxplot(width=0.1, color="grey", alpha=0.2) +
scale_fill_viridis(discrete = TRUE) +
theme(
legend.position="none",
plot.title = element_text(size=11)
) +
ggtitle("A Violin wrapping a boxplot") +
xlab("")
distancedf %>%
left_join(sam_size) %>%
mutate(myaxis=paste0(sex,"\n", "n=", num)) %>%
ggplot( aes(x=myaxis, y=em_path_dist_trav, fill=sex)) +
geom_violin(width=1.4) +
geom_boxplot(width=0.1, color="grey", alpha=0.2) +
scale_fill_viridis(discrete = TRUE) +
theme(
legend.position="none",
plot.title = element_text(size=11)
) +
ggtitle("A Violin wrapping a boxplot") +
xlab("")
distancedf %>%
left_join(sam_size) %>%
mutate(myaxis=paste0(sex,"\n", "n=", num)) %>%
ggplot( aes(x=myaxis, y=em_path_dist_trav, fill=sex)) +
geom_violin(width=1.4) +
geom_boxplot(width=0.1, color="grey", alpha=0.2) +
geom_jitter(position = position_jitter(seed = 1, width = 0.2)) +
scale_fill_viridis(discrete = TRUE) +
theme(
legend.position="none",
plot.title = element_text(size=11)
) +
ggtitle("A Violin wrapping a boxplot") +
xlab("")
distancedf %>%
left_join(sam_size) %>%
mutate(myaxis=paste0(sex,"\n", "n=", num)) %>%
ggplot( aes(x=myaxis, y=em_path_dist_trav, fill=sex)) +
geom_violin(width=0.4) +
geom_boxplot(width=0.1, color="grey", alpha=0.2) +
geom_jitter(position = position_jitter(seed = 1, width = 0.2)) +
scale_fill_viridis(discrete = TRUE) +
theme(
legend.position="none",
plot.title = element_text(size=11)
) +
ggtitle("A Violin wrapping a boxplot") +
xlab("")
distancedf %>%
left_join(sam_size) %>%
mutate(myaxis=paste0(sex,"\n", "n=", num)) %>%
ggplot( aes(x=myaxis, y=em_path_dist_trav, fill=sex)) +
geom_violin() +
geom_boxplot(width=0.1, color="grey", alpha=0.2) +
geom_jitter(position = position_jitter(seed = 1, width = 0.2)) +
scale_fill_viridis(discrete = TRUE) +
theme(
legend.position="none",
plot.title = element_text(size=11)
) +
ggtitle("A Violin wrapping a boxplot") +
xlab("")
distancedf %>%
left_join(sam_size) %>%
mutate(myaxis=paste0(sex,"\n", "n=", num)) %>%
ggplot( aes(x=myaxis, y=em_path_dist_trav, fill=sex))
distancedf %>%
left_join(sam_size) %>%
mutate(myaxis=paste0(sex,"\n", "n=", num)) %>%
ggplot( aes(x=myaxis, y=em_path_dist_trav, fill=sex)) +
geom_violin() +
distancedf %>%
left_join(sam_size) %>%
mutate(myaxis=paste0(sex,"\n", "n=", num)) %>%
ggplot( aes(x=myaxis, y=em_path_dist_trav, fill=sex)) +
geom_violin()
distancedf %>%
left_join(sam_size) %>%
mutate(myaxis=paste0(sex,"\n", "n=", num)) %>%
ggplot( aes(x=myaxis, y=em_path_dist_trav, fill=sex)) +
geom_violin()
distancedf %>%
left_join(sam_size) %>%
mutate(myaxis=paste0(sex,"\n", "n=", num)) %>%
ggplot( aes(x=myaxis, y=em_path_dist_trav, fill=sex)) +
geom_violin() +
geom_boxplot(width=0.1, color="grey", alpha=0.2)
distancedf %>%
left_join(sam_size) %>%
mutate(myaxis=paste0(sex,"\n", "n=", num)) %>%
ggplot( aes(x=myaxis, y=em_path_dist_trav, fill=sex)) +
geom_violin() +
geom_boxplot(width=0.1, color="grey", alpha=0.2) +
geom_jitter(position = position_jitter(seed = 1, width = 0.2))
distancedf %>%
left_join(sam_size) %>%
mutate(myaxis=paste0(sex,"\n", "n=", num)) %>%
ggplot( aes(x=myaxis, y=em_path_dist_trav, fill=sex)) +
geom_violin() +
geom_boxplot(width=0.1, color="grey", alpha=0.2) +
geom_jitter(position = position_jitter(seed = 1, width = 0.2)) +
scale_fill_viridis(discrete = TRUE)
distancedf %>%
left_join(sam_size) %>%
mutate(myaxis=paste0(sex,"\n", "n=", num)) %>%
ggplot( aes(x=myaxis, y=em_path_dist_trav, fill=sex)) +
geom_violin() +
geom_boxplot(width=0.1, color="grey", alpha=0.2) +
geom_jitter(position = position_jitter(seed = 1, width = 0.2)) +
scale_fill_viridis(discrete = TRUE, option="inferno") +
theme(
legend.position="none",
plot.title = element_text(size=11)
) +
ggtitle("A Violin wrapping a boxplot") +
xlab("")
distancedf %>%
left_join(sam_size) %>%
mutate(myaxis=paste0(sex,"\n", "n=", num)) %>%
ggplot( aes(x=myaxis, y=em_path_dist_trav, fill=sex)) +
geom_violin() +
geom_boxplot(width=0.1, color="grey", alpha=0.2) +
geom_jitter(position = position_jitter(seed = 1, width = 0.2)) +
scale_fill_viridis(discrete = TRUE, option="magma") +
theme(
legend.position="none",
plot.title = element_text(size=11)
) +
ggtitle("A Violin wrapping a boxplot") +
xlab("")
cbbPalette <- c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
distancedf %>%
left_join(sam_size) %>%
mutate(myaxis=paste0(sex,"\n", "n=", num)) %>%
ggplot( aes(x=myaxis, y=em_path_dist_trav, fill=sex)) +
geom_violin() +
geom_boxplot(width=0.1, color="grey", alpha=0.2) +
geom_jitter(position = position_jitter(seed = 1, width = 0.2)) +
scale_fill_manual(values=cbpalette) +
theme(
legend.position="none",
plot.title = element_text(size=11)
) +
ggtitle("A Violin wrapping a boxplot") +
xlab("")
distancedf %>%
left_join(sam_size) %>%
mutate(myaxis=paste0(sex,"\n", "n=", num)) %>%
ggplot( aes(x=myaxis, y=em_path_dist_trav, fill=sex)) +
geom_violin() +
geom_boxplot(width=0.1, color="grey", alpha=0.2) +
geom_jitter(position = position_jitter(seed = 1, width = 0.2)) +
scale_fill_manual(values=cbbPalette) +
theme(
legend.position="none",
plot.title = element_text(size=11)
) +
ggtitle("A Violin wrapping a boxplot") +
xlab("")
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
distancedf %>%
left_join(sam_size) %>%
mutate(myaxis=paste0(sex,"\n", "n=", num)) %>%
ggplot( aes(x=myaxis, y=em_path_dist_trav, fill=sex)) +
geom_violin() +
geom_boxplot(width=0.1, color="grey", alpha=0.2) +
geom_jitter(position = position_jitter(seed = 1, width = 0.2)) +
scale_fill_manual(values=cbbPalette) +
theme(
legend.position="none",
plot.title = element_text(size=11)
) +
ggtitle("A Violin wrapping a boxplot") +
xlab("")
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
distancedf %>%
left_join(sam_size) %>%
mutate(myaxis=paste0(sex,"\n", "n=", num)) %>%
ggplot( aes(x=myaxis, y=em_path_dist_trav, fill=sex)) +
geom_violin() +
geom_boxplot(width=0.1, color="grey", alpha=0.2) +
geom_jitter(position = position_jitter(seed = 1, width = 0.2)) +
scale_fill_manual(values=cbbPalette) +
theme(
legend.position="none",
plot.title = element_text(size=11)
) +
ggtitle("A Violin wrapping a boxplot") +
xlab("")
distancedf %>%
left_join(sam_size) %>%
mutate(myaxis=paste0(sex,"\n", "n=", num)) %>%
ggplot( aes(x=myaxis, y=em_path_dist_trav, fill=sex)) +
geom_violin() +
geom_boxplot(width=0.1, color="grey", alpha=0.2) +
geom_jitter(position = position_jitter(seed = 1, width = 0.2)) +
scale_colour_colorblind() +
theme(
legend.position="none",
plot.title = element_text(size=11)
) +
ggtitle("A Violin wrapping a boxplot") +
xlab("")
distancedf %>%
left_join(sam_size) %>%
mutate(myaxis=paste0(sex,"\n", "n=", num)) %>%
ggplot( aes(x=myaxis, y=em_path_dist_trav, fill=sex)) +
geom_violin() +
geom_boxplot(width=0.1, color="grey", alpha=0.2) +
geom_jitter(position = position_jitter(seed = 1, width = 0.2)) +
scale_colour_brewer() +
theme(
legend.position="none",
plot.title = element_text(size=11)
) +
ggtitle("A Violin wrapping a boxplot") +
xlab("")
distancedf %>%
left_join(sam_size) %>%
mutate(myaxis=paste0(sex,"\n", "n=", num)) %>%
ggplot( aes(x=myaxis, y=em_path_dist_trav, fill=sex)) +
geom_violin() +
geom_boxplot(width=0.1, color="grey", alpha=0.2) +
geom_jitter(position = position_jitter(seed = 1, width = 0.2)) +
scale_colour_brewer() +
theme(
legend.position="none",
plot.title = element_text(size=11)
) +
ggtitle("Path distance traveled in men vs women") +
xlab("")
distancedf %>%
left_join(sam_size) %>%
mutate(myaxis=paste0(sex,"\n", "n=", num)) %>%
ggplot( aes(x=myaxis, y=em_path_dist_trav, fill=sex)) +
geom_violin() +
geom_boxplot(width=0.1, color="grey", alpha=0.2) +
geom_jitter(position = position_jitter(seed = 1, width = 0.2)) +
scale_colour_brewer() +
theme(
legend.position="none",
plot.title = element_text(size=11)
) +
ggtitle("Path distance traveled in men vs women") +
xlab("") +
ylab(" Path Distance Traveled")
distancedf %>%
left_join(sam_size) %>%
mutate(myaxis=paste0(sex,"\n", "n=", num)) %>%
ggplot( aes(x=myaxis, y=em_path_dist_trav, fill=sex)) +
geom_violin() +
geom_boxplot(width=0.1, color="grey", alpha=0.2) +
geom_jitter(position = position_jitter(seed = 1, width = 0.2)) +
scale_colour_brewer() +
theme(legend.position="none", plot.title = element_text(size=11)) +
stat_summary(fun.data = mean_se, geom = "errorbar")
ggtitle("Path distance traveled in men vs women") +
xlab("") +
ylab(" Path Distance Traveled")
distancedf %>%
left_join(sam_size) %>%
mutate(myaxis=paste0(sex,"\n", "n=", num)) %>%
ggplot( aes(x=myaxis, y=em_path_dist_trav, fill=sex)) +
geom_violin() +
geom_boxplot(width=0.1, color="grey", alpha=0.2) +
geom_jitter(position = position_jitter(seed = 1, width = 0.2)) +
scale_colour_brewer() +
theme(legend.position="none", plot.title = element_text(size=11)) +
stat_summary(fun.data = mean_se, geom = "errorbar") +
ggtitle("Path distance traveled in men vs women") +
xlab("") +
ylab(" Path Distance Traveled")
distancedf %>%
left_join(sam_size) %>%
mutate(myaxis=paste0(sex,"\n", "n=", num)) %>%
ggplot( aes(x=myaxis, y=em_path_dist_trav, fill=sex)) +
geom_violin() +
geom_boxplot(width=0.1, color="grey", alpha=0.2) +
geom_jitter(position = position_jitter(seed = 1, width = 0.2)) +
scale_colour_brewer() +
theme(legend.position="none", plot.title = element_text(size=11)) +
ggtitle("Path distance traveled in men vs women") +
xlab("") +
ylab(" Path Distance Traveled")
View(dist_groupdiff)
distancedf %>%
left_join(sam_size) %>%
mutate(myaxis=paste0(sex,"\n", "n=", num)) %>%
ggplot( aes(x=myaxis, y=em_path_dist_trav, fill=sex)) +
geom_boxplot(width=0.1, color="grey", alpha=0.2) +
geom_jitter(position = position_jitter(seed = 1, width = 0.2)) +
scale_colour_brewer() +
theme(legend.position="none", plot.title = element_text(size=11)) +
ggtitle("Path distance traveled in men vs women") +
xlab("") +
ylab(" Path Distance Traveled")
distancedf %>%
left_join(sam_size) %>%
mutate(myaxis=paste0(sex,"\n", "n=", num)) %>%
ggplot( aes(x=myaxis, y=em_path_dist_trav, fill=sex)) +
geom_boxplot(width=0.5, color="grey", alpha=0.2) +
geom_jitter(position = position_jitter(seed = 1, width = 0.2)) +
scale_colour_brewer() +
theme(legend.position="none", plot.title = element_text(size=11)) +
ggtitle("Path distance traveled in men vs women") +
xlab("") +
ylab(" Path Distance Traveled")
distancedf %>%
left_join(sam_size) %>%
mutate(myaxis=paste0(sex,"\n", "n=", num)) %>%
ggplot( aes(x=myaxis, y=em_path_dist_trav, fill=sex)) +
geom_boxplot( color="grey") +
geom_jitter(position = position_jitter(seed = 1, width = 0.2)) +
scale_colour_brewer() +
theme(legend.position="none", plot.title = element_text(size=11)) +
ggtitle("Path distance traveled in men vs women") +
xlab("") +
ylab(" Path Distance Traveled")
# just box plot
distancedf %>%
left_join(sam_size) %>%
mutate(myaxis=paste0(sex,"\n", "n=", num)) %>%
ggplot( aes(x=myaxis, y=em_path_dist_trav, fill=sex)) +
geom_boxplot( width =0.3, color="grey") +
geom_jitter(position = position_jitter(seed = 1, width = 0.2)) +
scale_colour_brewer() +
theme(legend.position="none", plot.title = element_text(size=11)) +
ggtitle("Path distance traveled in men vs women") +
xlab("") +
ylab(" Path Distance Traveled")
